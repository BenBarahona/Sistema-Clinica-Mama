//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace BaseDeDatosClinicaPatologica.MyWebReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfAnyType", Namespace="http://tempuri.org/", ItemName="anyType")]
    public class ArrayOfAnyType : System.Collections.ObjectModel.ObservableCollection<object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyWebReference.clinicaPatologiaWebServiceSoap")]
    public interface clinicaPatologiaWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.IAsyncResult BeginHelloWorld(BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponse EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/seEjecutoComando", ReplyAction="*")]
        System.IAsyncResult BeginseEjecutoComando(System.AsyncCallback callback, object asyncState);
        
        bool EndseEjecutoComando(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Conectar", ReplyAction="*")]
        System.IAsyncResult BeginConectar(System.AsyncCallback callback, object asyncState);
        
        bool EndConectar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Querry", ReplyAction="*")]
        System.IAsyncResult BeginQuerry(BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponse EndQuerry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarMedico", ReplyAction="*")]
        System.IAsyncResult BeginInsertarMedico(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponse EndInsertarMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarEmpleado", ReplyAction="*")]
        System.IAsyncResult BeginInsertarEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponse EndInsertarEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarModulo", ReplyAction="*")]
        System.IAsyncResult BeginInsertarModulo(BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponse EndInsertarModulo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarAcceso", ReplyAction="*")]
        System.IAsyncResult BeginInsertarAcceso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponse EndInsertarAcceso(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarContabilidad", ReplyAction="*")]
        System.IAsyncResult BeginInsertarContabilidad(BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponse EndInsertarContabilidad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarEgreso", ReplyAction="*")]
        System.IAsyncResult BeginInsertarEgreso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponse EndInsertarEgreso(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarGasto", ReplyAction="*")]
        System.IAsyncResult BeginInsertarGasto(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponse EndInsertarGasto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarMaterial", ReplyAction="*")]
        System.IAsyncResult BeginInsertarMaterial(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponse EndInsertarMaterial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarMaterialEnviado", ReplyAction="*")]
        System.IAsyncResult BeginInsertarMaterialEnviado(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponse EndInsertarMaterialEnviado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarPaciente", ReplyAction="*")]
        System.IAsyncResult BeginInsertarPaciente(BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponse EndInsertarPaciente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarBiopsia", ReplyAction="*")]
        System.IAsyncResult BeginInsertarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponse EndInsertarBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarCitologiaNoGinecologica", ReplyAction="*")]
        System.IAsyncResult BeginInsertarCitologiaNoGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponse EndInsertarCitologiaNoGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarCitologiaGinecologica", ReplyAction="*")]
        System.IAsyncResult BeginInsertarCitologiaGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponse EndInsertarCitologiaGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIDdeMedico", ReplyAction="*")]
        System.IAsyncResult BegingetIDdeMedico(BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponse EndgetIDdeMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIDdePaciente", ReplyAction="*")]
        System.IAsyncResult BegingetIDdePaciente(BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponse EndgetIDdePaciente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getPaciente", ReplyAction="*")]
        System.IAsyncResult BegingetPaciente(BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponse EndgetPaciente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getExamen", ReplyAction="*")]
        System.IAsyncResult BegingetExamen(BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponse EndgetExamen(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMedico", ReplyAction="*")]
        System.IAsyncResult BegingetMedico(BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponse EndgetMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getEmpleado", ReplyAction="*")]
        System.IAsyncResult BegingetEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponse EndgetEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getEmpleados", ReplyAction="*")]
        System.IAsyncResult BegingetEmpleados(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponse EndgetEmpleados(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarCitologia", ReplyAction="*")]
        System.IAsyncResult BeginActualizarCitologia(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponse EndActualizarCitologia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarBiopsia", ReplyAction="*")]
        System.IAsyncResult BeginActualizarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponse EndActualizarBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarCitologiaLiquidos", ReplyAction="*")]
        System.IAsyncResult BeginActualizarCitologiaLiquidos(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponse EndActualizarCitologiaLiquidos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarMedico", ReplyAction="*")]
        System.IAsyncResult BeginActualizarMedico(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponse EndActualizarMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarEmpleado", ReplyAction="*")]
        System.IAsyncResult BeginBorrarEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponse EndBorrarEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarMaterial", ReplyAction="*")]
        System.IAsyncResult BeginBorrarMaterial(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponse EndBorrarMaterial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/esUsuarioValido", ReplyAction="*")]
        System.IAsyncResult BeginesUsuarioValido(BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponse EndesUsuarioValido(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIngresosPorMes", ReplyAction="*")]
        System.IAsyncResult BegingetIngresosPorMes(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponse EndgetIngresosPorMes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getEgresosPorMes", ReplyAction="*")]
        System.IAsyncResult BegingetEgresosPorMes(BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponse EndgetEgresosPorMes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getCitologiasGinecologicas", ReplyAction="*")]
        System.IAsyncResult BegingetCitologiasGinecologicas(BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponse EndgetCitologiasGinecologicas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getBiopsias", ReplyAction="*")]
        System.IAsyncResult BegingetBiopsias(BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponse EndgetBiopsias(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getPacientes", ReplyAction="*")]
        System.IAsyncResult BegingetPacientes(BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponse EndgetPacientes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMedicos", ReplyAction="*")]
        System.IAsyncResult BegingetMedicos(BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponse EndgetMedicos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMaterialEnviado_Biopsia", ReplyAction="*")]
        System.IAsyncResult BegingetMaterialEnviado_Biopsia(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponse EndgetMaterialEnviado_Biopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMaterialEnviado_CitologiaNoGinecologica", ReplyAction="*")]
        System.IAsyncResult BegingetMaterialEnviado_CitologiaNoGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponse EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/consultaMedicoBiopsias", ReplyAction="*")]
        System.IAsyncResult BeginconsultaMedicoBiopsias(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponse EndconsultaMedicoBiopsias(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/consultaMedicoCitologia", ReplyAction="*")]
        System.IAsyncResult BeginconsultaMedicoCitologia(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponse EndconsultaMedicoCitologia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getAccesos", ReplyAction="*")]
        System.IAsyncResult BegingetAccesos(BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponse EndgetAccesos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getCantidadDeExamenes", ReplyAction="*")]
        System.IAsyncResult BegingetCantidadDeExamenes(BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponse EndgetCantidadDeExamenes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getExamenesFiltrados", ReplyAction="*")]
        System.IAsyncResult BegingetExamenesFiltrados(BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponse EndgetExamenesFiltrados(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMedicos_Nombres", ReplyAction="*")]
        System.IAsyncResult BegingetMedicos_Nombres(BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponse EndgetMedicos_Nombres(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarMedico", ReplyAction="*")]
        System.IAsyncResult BeginBorrarMedico(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponse EndBorrarMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarMuestra", ReplyAction="*")]
        System.IAsyncResult BeginBorrarMuestra(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponse EndBorrarMuestra(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerificaryActualizarContabilidad", ReplyAction="*")]
        System.IAsyncResult BeginVerificaryActualizarContabilidad(System.AsyncCallback callback, object asyncState);
        
        bool EndVerificaryActualizarContabilidad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarGastoenEgreso", ReplyAction="*")]
        System.IAsyncResult BeginInsertarGastoenEgreso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponse EndInsertarGastoenEgreso(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getTodosLosGastos", ReplyAction="*")]
        System.IAsyncResult BegingetTodosLosGastos(BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponse EndgetTodosLosGastos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIngresosCitologia", ReplyAction="*")]
        System.IAsyncResult BegingetIngresosCitologia(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponse EndgetIngresosCitologia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIngresosBiopsia", ReplyAction="*")]
        System.IAsyncResult BegingetIngresosBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponse EndgetIngresosBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMuestraGinecologica", ReplyAction="*")]
        System.IAsyncResult BegingetMuestraGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponse EndgetMuestraGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMuestraNo_Ginecologica", ReplyAction="*")]
        System.IAsyncResult BegingetMuestraNo_Ginecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponse EndgetMuestraNo_Ginecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMuestraBiopsia", ReplyAction="*")]
        System.IAsyncResult BegingetMuestraBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponse EndgetMuestraBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMaterialEnviadoBiopsiaImprimir", ReplyAction="*")]
        System.IAsyncResult BegingetMaterialEnviadoBiopsiaImprimir(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponse EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIdExamenes", ReplyAction="*")]
        System.IAsyncResult BegingetIdExamenes(BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponse EndgetIdExamenes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/buscarCitologia", ReplyAction="*")]
        System.IAsyncResult BeginbuscarCitologia(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponse EndbuscarCitologia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/buscarCitologiaLiquidos", ReplyAction="*")]
        System.IAsyncResult BeginbuscarCitologiaLiquidos(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponse EndbuscarCitologiaLiquidos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/buscarBiopsia", ReplyAction="*")]
        System.IAsyncResult BeginbuscarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponse EndbuscarBiopsia(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string Nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int MedicoID;
        
        public HelloWorldRequestBody() {
        }
        
        public HelloWorldRequestBody(string Nombre, int MedicoID) {
            this.Nombre = Nombre;
            this.MedicoID = MedicoID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QuerryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Querry", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequestBody Body;
        
        public QuerryRequest() {
        }
        
        public QuerryRequest(BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class QuerryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string querry;
        
        public QuerryRequestBody() {
        }
        
        public QuerryRequestBody(string querry) {
            this.querry = querry;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QuerryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="QuerryResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponseBody Body;
        
        public QuerryResponse() {
        }
        
        public QuerryResponse(BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class QuerryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string QuerryResult;
        
        public QuerryResponseBody() {
        }
        
        public QuerryResponseBody(string QuerryResult) {
            this.QuerryResult = QuerryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMedico", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequestBody Body;
        
        public InsertarMedicoRequest() {
        }
        
        public InsertarMedicoRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string Nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string telefono;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string celular;
        
        public InsertarMedicoRequestBody() {
        }
        
        public InsertarMedicoRequestBody(string Nombre, string telefono, string celular) {
            this.Nombre = Nombre;
            this.telefono = telefono;
            this.celular = celular;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponseBody Body;
        
        public InsertarMedicoResponse() {
        }
        
        public InsertarMedicoResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarMedicoResult;
        
        public InsertarMedicoResponseBody() {
        }
        
        public InsertarMedicoResponseBody(bool InsertarMedicoResult) {
            this.InsertarMedicoResult = InsertarMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarEmpleadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarEmpleado", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequestBody Body;
        
        public InsertarEmpleadoRequest() {
        }
        
        public InsertarEmpleadoRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarEmpleadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_usuario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string tipo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string P_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string S_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string P_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string S_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Password;
        
        public InsertarEmpleadoRequestBody() {
        }
        
        public InsertarEmpleadoRequestBody(string nombre_usuario, string tipo, string P_nombre, string S_nombre, string P_apellido, string S_apellido, string Password) {
            this.nombre_usuario = nombre_usuario;
            this.tipo = tipo;
            this.P_nombre = P_nombre;
            this.S_nombre = S_nombre;
            this.P_apellido = P_apellido;
            this.S_apellido = S_apellido;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarEmpleadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarEmpleadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponseBody Body;
        
        public InsertarEmpleadoResponse() {
        }
        
        public InsertarEmpleadoResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarEmpleadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarEmpleadoResult;
        
        public InsertarEmpleadoResponseBody() {
        }
        
        public InsertarEmpleadoResponseBody(bool InsertarEmpleadoResult) {
            this.InsertarEmpleadoResult = InsertarEmpleadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarModuloRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarModulo", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequestBody Body;
        
        public InsertarModuloRequest() {
        }
        
        public InsertarModuloRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarModuloRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_modulo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string descripcion;
        
        public InsertarModuloRequestBody() {
        }
        
        public InsertarModuloRequestBody(string nombre_modulo, string descripcion) {
            this.nombre_modulo = nombre_modulo;
            this.descripcion = descripcion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarModuloResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarModuloResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponseBody Body;
        
        public InsertarModuloResponse() {
        }
        
        public InsertarModuloResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarModuloResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarModuloResult;
        
        public InsertarModuloResponseBody() {
        }
        
        public InsertarModuloResponseBody(bool InsertarModuloResult) {
            this.InsertarModuloResult = InsertarModuloResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarAccesoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarAcceso", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequestBody Body;
        
        public InsertarAccesoRequest() {
        }
        
        public InsertarAccesoRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarAccesoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_modulo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string usuario;
        
        public InsertarAccesoRequestBody() {
        }
        
        public InsertarAccesoRequestBody(string nombre_modulo, string usuario) {
            this.nombre_modulo = nombre_modulo;
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarAccesoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarAccesoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponseBody Body;
        
        public InsertarAccesoResponse() {
        }
        
        public InsertarAccesoResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarAccesoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarAccesoResult;
        
        public InsertarAccesoResponseBody() {
        }
        
        public InsertarAccesoResponseBody(bool InsertarAccesoResult) {
            this.InsertarAccesoResult = InsertarAccesoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarContabilidadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarContabilidad", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequestBody Body;
        
        public InsertarContabilidadRequest() {
        }
        
        public InsertarContabilidadRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarContabilidadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int mes;
        
        public InsertarContabilidadRequestBody() {
        }
        
        public InsertarContabilidadRequestBody(string nombre_contable, int anio, int mes) {
            this.nombre_contable = nombre_contable;
            this.anio = anio;
            this.mes = mes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarContabilidadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarContabilidadResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponseBody Body;
        
        public InsertarContabilidadResponse() {
        }
        
        public InsertarContabilidadResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarContabilidadResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarContabilidadResult;
        
        public InsertarContabilidadResponseBody() {
        }
        
        public InsertarContabilidadResponseBody(bool InsertarContabilidadResult) {
            this.InsertarContabilidadResult = InsertarContabilidadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarEgresoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarEgreso", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequestBody Body;
        
        public InsertarEgresoRequest() {
        }
        
        public InsertarEgresoRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarEgresoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int mes;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int totalEgreso;
        
        public InsertarEgresoRequestBody() {
        }
        
        public InsertarEgresoRequestBody(string nombre_contable, int anio, int mes, int totalEgreso) {
            this.nombre_contable = nombre_contable;
            this.anio = anio;
            this.mes = mes;
            this.totalEgreso = totalEgreso;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarEgresoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarEgresoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponseBody Body;
        
        public InsertarEgresoResponse() {
        }
        
        public InsertarEgresoResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarEgresoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarEgresoResult;
        
        public InsertarEgresoResponseBody() {
        }
        
        public InsertarEgresoResponseBody(bool InsertarEgresoResult) {
            this.InsertarEgresoResult = InsertarEgresoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarGastoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarGasto", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequestBody Body;
        
        public InsertarGastoRequest() {
        }
        
        public InsertarGastoRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarGastoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int mes;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int totalEgreso;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string descripcion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string fechaexacta;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int valor;
        
        public InsertarGastoRequestBody() {
        }
        
        public InsertarGastoRequestBody(string nombre_contable, int anio, int mes, int totalEgreso, string descripcion, string fechaexacta, int valor) {
            this.nombre_contable = nombre_contable;
            this.anio = anio;
            this.mes = mes;
            this.totalEgreso = totalEgreso;
            this.descripcion = descripcion;
            this.fechaexacta = fechaexacta;
            this.valor = valor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarGastoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarGastoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponseBody Body;
        
        public InsertarGastoResponse() {
        }
        
        public InsertarGastoResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarGastoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarGastoResult;
        
        public InsertarGastoResponseBody() {
        }
        
        public InsertarGastoResponseBody(bool InsertarGastoResult) {
            this.InsertarGastoResult = InsertarGastoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterial", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequestBody Body;
        
        public InsertarMaterialRequest() {
        }
        
        public InsertarMaterialRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string material_enviado;
        
        public InsertarMaterialRequestBody() {
        }
        
        public InsertarMaterialRequestBody(string material_enviado) {
            this.material_enviado = material_enviado;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterialResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponseBody Body;
        
        public InsertarMaterialResponse() {
        }
        
        public InsertarMaterialResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarMaterialResult;
        
        public InsertarMaterialResponseBody() {
        }
        
        public InsertarMaterialResponseBody(bool InsertarMaterialResult) {
            this.InsertarMaterialResult = InsertarMaterialResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialEnviadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterialEnviado", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequestBody Body;
        
        public InsertarMaterialEnviadoRequest() {
        }
        
        public InsertarMaterialEnviadoRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialEnviadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string material_enviado;
        
        public InsertarMaterialEnviadoRequestBody() {
        }
        
        public InsertarMaterialEnviadoRequestBody(string cod_examen, string material_enviado) {
            this.cod_examen = cod_examen;
            this.material_enviado = material_enviado;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialEnviadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterialEnviadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponseBody Body;
        
        public InsertarMaterialEnviadoResponse() {
        }
        
        public InsertarMaterialEnviadoResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialEnviadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarMaterialEnviadoResult;
        
        public InsertarMaterialEnviadoResponseBody() {
        }
        
        public InsertarMaterialEnviadoResponseBody(bool InsertarMaterialEnviadoResult) {
            this.InsertarMaterialEnviadoResult = InsertarMaterialEnviadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarPacienteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarPaciente", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequestBody Body;
        
        public InsertarPacienteRequest() {
        }
        
        public InsertarPacienteRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarPacienteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool DIU;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fur;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fup;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string pnombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string snombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string papellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string sapellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int edad;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool anticonceptivos;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string expediente;
        
        public InsertarPacienteRequestBody() {
        }
        
        public InsertarPacienteRequestBody(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente) {
            this.DIU = DIU;
            this.fur = fur;
            this.fup = fup;
            this.pnombre = pnombre;
            this.snombre = snombre;
            this.papellido = papellido;
            this.sapellido = sapellido;
            this.edad = edad;
            this.anticonceptivos = anticonceptivos;
            this.expediente = expediente;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarPacienteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarPacienteResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponseBody Body;
        
        public InsertarPacienteResponse() {
        }
        
        public InsertarPacienteResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarPacienteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarPacienteResult;
        
        public InsertarPacienteResponseBody() {
        }
        
        public InsertarPacienteResponseBody(bool InsertarPacienteResult) {
            this.InsertarPacienteResult = InsertarPacienteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequestBody Body;
        
        public InsertarBiopsiaRequest() {
        }
        
        public InsertarBiopsiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fecha;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Id_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int id_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Nombre_Contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int anio_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int mes_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string usuario_empleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string descripcion_macros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string descripcion_micros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string codificacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string fechaHoy;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string fechaHoySQL;
        
        public InsertarBiopsiaRequestBody() {
        }
        
        public InsertarBiopsiaRequestBody(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.cod_examen = cod_examen;
            this.fecha = fecha;
            this.precio = precio;
            this.Diagnostico = Diagnostico;
            this.diagnostico_medico = diagnostico_medico;
            this.Id_paciente = Id_paciente;
            this.id_medico = id_medico;
            this.Nombre_Contable = Nombre_Contable;
            this.anio_contable = anio_contable;
            this.mes_contable = mes_contable;
            this.usuario_empleado = usuario_empleado;
            this.descripcion_macros = descripcion_macros;
            this.descripcion_micros = descripcion_micros;
            this.codificacion = codificacion;
            this.fechaHoy = fechaHoy;
            this.fechaHoySQL = fechaHoySQL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponseBody Body;
        
        public InsertarBiopsiaResponse() {
        }
        
        public InsertarBiopsiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarBiopsiaResult;
        
        public InsertarBiopsiaResponseBody() {
        }
        
        public InsertarBiopsiaResponseBody(bool InsertarBiopsiaResult) {
            this.InsertarBiopsiaResult = InsertarBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaNoGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaNoGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequestBody Body;
        
        public InsertarCitologiaNoGinecologicaRequest() {
        }
        
        public InsertarCitologiaNoGinecologicaRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaNoGinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fecha;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Id_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int id_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Nombre_Contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int anio_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int mes_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string usuario_empleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string descripcion_macros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string descripcion_micros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string comentario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string fechaHoy;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string fechaHoySQL;
        
        public InsertarCitologiaNoGinecologicaRequestBody() {
        }
        
        public InsertarCitologiaNoGinecologicaRequestBody(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.cod_examen = cod_examen;
            this.fecha = fecha;
            this.precio = precio;
            this.Diagnostico = Diagnostico;
            this.diagnostico_medico = diagnostico_medico;
            this.Id_paciente = Id_paciente;
            this.id_medico = id_medico;
            this.Nombre_Contable = Nombre_Contable;
            this.anio_contable = anio_contable;
            this.mes_contable = mes_contable;
            this.usuario_empleado = usuario_empleado;
            this.descripcion_macros = descripcion_macros;
            this.descripcion_micros = descripcion_micros;
            this.comentario = comentario;
            this.fechaHoy = fechaHoy;
            this.fechaHoySQL = fechaHoySQL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaNoGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaNoGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponseBody Body;
        
        public InsertarCitologiaNoGinecologicaResponse() {
        }
        
        public InsertarCitologiaNoGinecologicaResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaNoGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarCitologiaNoGinecologicaResult;
        
        public InsertarCitologiaNoGinecologicaResponseBody() {
        }
        
        public InsertarCitologiaNoGinecologicaResponseBody(bool InsertarCitologiaNoGinecologicaResult) {
            this.InsertarCitologiaNoGinecologicaResult = InsertarCitologiaNoGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequestBody Body;
        
        public InsertarCitologiaGinecologicaRequest() {
        }
        
        public InsertarCitologiaGinecologicaRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaGinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fecha;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Id_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int id_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Nombre_Contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int anio_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int mes_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string usuario_empleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string comentario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string inflamacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string calidadFrotis_causa;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public bool calidadFrotisAdecuado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public bool anticonceptivos;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public bool candida_sp;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public bool gardnerela;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public bool vaginosis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public bool herpes;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public bool tricomonas;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public string otroAgenteInfeccioso;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int evaluacionHormonal_basales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public int evaluacionhormonal_intermedias;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public int evaluacionhormonal_superficiales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public bool Colposcopia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public int repetir;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=27)]
        public string recomendaciones_otra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public bool recomendaciones_biopsia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public bool recomendaciones_tratamientos;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public bool NIC_I;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public bool NIC_II;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public bool NIC_III;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=33)]
        public string origen_muestra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=34)]
        public bool negativo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=35)]
        public bool VPH;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=36)]
        public bool glandular;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=37)]
        public bool escamoza;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=38)]
        public bool adenocarcinomana;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=39)]
        public bool carcinomana_celula;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=40)]
        public bool celula_atipica;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=41)]
        public bool lesion_escamosa_AltoGrado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=42)]
        public bool lesion_escamosa_BajoGrado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=43)]
        public string fechaHoy;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=44)]
        public string fechaHoySQL;
        
        public InsertarCitologiaGinecologicaRequestBody() {
        }
        
        public InsertarCitologiaGinecologicaRequestBody(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.cod_examen = cod_examen;
            this.fecha = fecha;
            this.precio = precio;
            this.Diagnostico = Diagnostico;
            this.diagnostico_medico = diagnostico_medico;
            this.Id_paciente = Id_paciente;
            this.id_medico = id_medico;
            this.Nombre_Contable = Nombre_Contable;
            this.anio_contable = anio_contable;
            this.mes_contable = mes_contable;
            this.usuario_empleado = usuario_empleado;
            this.comentario = comentario;
            this.inflamacion = inflamacion;
            this.calidadFrotis_causa = calidadFrotis_causa;
            this.calidadFrotisAdecuado = calidadFrotisAdecuado;
            this.anticonceptivos = anticonceptivos;
            this.candida_sp = candida_sp;
            this.gardnerela = gardnerela;
            this.vaginosis = vaginosis;
            this.herpes = herpes;
            this.tricomonas = tricomonas;
            this.otroAgenteInfeccioso = otroAgenteInfeccioso;
            this.evaluacionHormonal_basales = evaluacionHormonal_basales;
            this.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            this.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            this.Colposcopia = Colposcopia;
            this.repetir = repetir;
            this.recomendaciones_otra = recomendaciones_otra;
            this.recomendaciones_biopsia = recomendaciones_biopsia;
            this.recomendaciones_tratamientos = recomendaciones_tratamientos;
            this.NIC_I = NIC_I;
            this.NIC_II = NIC_II;
            this.NIC_III = NIC_III;
            this.origen_muestra = origen_muestra;
            this.negativo = negativo;
            this.VPH = VPH;
            this.glandular = glandular;
            this.escamoza = escamoza;
            this.adenocarcinomana = adenocarcinomana;
            this.carcinomana_celula = carcinomana_celula;
            this.celula_atipica = celula_atipica;
            this.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            this.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
            this.fechaHoy = fechaHoy;
            this.fechaHoySQL = fechaHoySQL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponseBody Body;
        
        public InsertarCitologiaGinecologicaResponse() {
        }
        
        public InsertarCitologiaGinecologicaResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarCitologiaGinecologicaResult;
        
        public InsertarCitologiaGinecologicaResponseBody() {
        }
        
        public InsertarCitologiaGinecologicaResponseBody(bool InsertarCitologiaGinecologicaResult) {
            this.InsertarCitologiaGinecologicaResult = InsertarCitologiaGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdeMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdeMedico", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequestBody Body;
        
        public getIDdeMedicoRequest() {
        }
        
        public getIDdeMedicoRequest(BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdeMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_Medico;
        
        public getIDdeMedicoRequestBody() {
        }
        
        public getIDdeMedicoRequestBody(string nombre_Medico) {
            this.nombre_Medico = nombre_Medico;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdeMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdeMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponseBody Body;
        
        public getIDdeMedicoResponse() {
        }
        
        public getIDdeMedicoResponse(BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdeMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int getIDdeMedicoResult;
        
        public getIDdeMedicoResponseBody() {
        }
        
        public getIDdeMedicoResponseBody(int getIDdeMedicoResult) {
            this.getIDdeMedicoResult = getIDdeMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdePacienteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdePaciente", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequestBody Body;
        
        public getIDdePacienteRequest() {
        }
        
        public getIDdePacienteRequest(BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdePacienteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_Paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string s_nombre_Paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string apellido_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string s_apellido_paciente;
        
        public getIDdePacienteRequestBody() {
        }
        
        public getIDdePacienteRequestBody(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente) {
            this.nombre_Paciente = nombre_Paciente;
            this.s_nombre_Paciente = s_nombre_Paciente;
            this.apellido_paciente = apellido_paciente;
            this.s_apellido_paciente = s_apellido_paciente;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdePacienteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdePacienteResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponseBody Body;
        
        public getIDdePacienteResponse() {
        }
        
        public getIDdePacienteResponse(BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdePacienteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int getIDdePacienteResult;
        
        public getIDdePacienteResponseBody() {
        }
        
        public getIDdePacienteResponseBody(int getIDdePacienteResult) {
            this.getIDdePacienteResult = getIDdePacienteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getPacienteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getPaciente", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequestBody Body;
        
        public getPacienteRequest() {
        }
        
        public getPacienteRequest(BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getPacienteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int Id_paciente;
        
        public getPacienteRequestBody() {
        }
        
        public getPacienteRequestBody(int Id_paciente) {
            this.Id_paciente = Id_paciente;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getPacienteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getPacienteResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponseBody Body;
        
        public getPacienteResponse() {
        }
        
        public getPacienteResponse(BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getPacienteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getPacienteResult;
        
        public getPacienteResponseBody() {
        }
        
        public getPacienteResponseBody(string getPacienteResult) {
            this.getPacienteResult = getPacienteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getExamenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getExamen", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequestBody Body;
        
        public getExamenRequest() {
        }
        
        public getExamenRequest(BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getExamenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string codigo_Examen;
        
        public getExamenRequestBody() {
        }
        
        public getExamenRequestBody(string codigo_Examen) {
            this.codigo_Examen = codigo_Examen;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getExamenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getExamenResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponseBody Body;
        
        public getExamenResponse() {
        }
        
        public getExamenResponse(BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getExamenResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getExamenResult;
        
        public getExamenResponseBody() {
        }
        
        public getExamenResponseBody(string getExamenResult) {
            this.getExamenResult = getExamenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedico", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequestBody Body;
        
        public getMedicoRequest() {
        }
        
        public getMedicoRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int id_medico;
        
        public getMedicoRequestBody() {
        }
        
        public getMedicoRequestBody(int id_medico) {
            this.id_medico = id_medico;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponseBody Body;
        
        public getMedicoResponse() {
        }
        
        public getMedicoResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMedicoResult;
        
        public getMedicoResponseBody() {
        }
        
        public getMedicoResponseBody(string getMedicoResult) {
            this.getMedicoResult = getMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getEmpleadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getEmpleado", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequestBody Body;
        
        public getEmpleadoRequest() {
        }
        
        public getEmpleadoRequest(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getEmpleadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        public getEmpleadoRequestBody() {
        }
        
        public getEmpleadoRequestBody(string usuario) {
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getEmpleadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getEmpleadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponseBody Body;
        
        public getEmpleadoResponse() {
        }
        
        public getEmpleadoResponse(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getEmpleadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getEmpleadoResult;
        
        public getEmpleadoResponseBody() {
        }
        
        public getEmpleadoResponseBody(string getEmpleadoResult) {
            this.getEmpleadoResult = getEmpleadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getEmpleadosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getEmpleados", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequestBody Body;
        
        public getEmpleadosRequest() {
        }
        
        public getEmpleadosRequest(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getEmpleadosRequestBody {
        
        public getEmpleadosRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getEmpleadosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getEmpleadosResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponseBody Body;
        
        public getEmpleadosResponse() {
        }
        
        public getEmpleadosResponse(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getEmpleadosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getEmpleadosResult;
        
        public getEmpleadosResponseBody() {
        }
        
        public getEmpleadosResponseBody(string getEmpleadosResult) {
            this.getEmpleadosResult = getEmpleadosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequestBody Body;
        
        public ActualizarCitologiaRequest() {
        }
        
        public ActualizarCitologiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string comentario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string inflamacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string calidadFrotis_causa;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool calidadFrotisAdecuado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool candida_sp;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool gardnerela;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool vaginosis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool herpes;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public bool tricomonas;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string otroAgenteInfeccioso;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int evaluacionHormonal_basales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public int evaluacionhormonal_intermedias;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int evaluacionhormonal_superficiales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public bool Colposcopia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int repetir;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string recomendaciones_otra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public bool recomendaciones_biopsia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public bool recomendaciones_tratamientos;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public bool NIC_I;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public bool NIC_II;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public bool NIC_III;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string origen_muestra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public bool negativo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public bool VPH;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public bool glandular;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public bool escamosa;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public bool adenocarcinomana;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public bool carcinomana_celula;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public bool celula_atipica;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public bool lesion_escamosa_AltoGrado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public bool lesion_escamosa_BajoGrado;
        
        public ActualizarCitologiaRequestBody() {
        }
        
        public ActualizarCitologiaRequestBody(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado) {
            this.cod_examen = cod_examen;
            this.Diagnostico = Diagnostico;
            this.comentario = comentario;
            this.inflamacion = inflamacion;
            this.calidadFrotis_causa = calidadFrotis_causa;
            this.calidadFrotisAdecuado = calidadFrotisAdecuado;
            this.candida_sp = candida_sp;
            this.gardnerela = gardnerela;
            this.vaginosis = vaginosis;
            this.herpes = herpes;
            this.tricomonas = tricomonas;
            this.otroAgenteInfeccioso = otroAgenteInfeccioso;
            this.evaluacionHormonal_basales = evaluacionHormonal_basales;
            this.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            this.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            this.Colposcopia = Colposcopia;
            this.repetir = repetir;
            this.recomendaciones_otra = recomendaciones_otra;
            this.recomendaciones_biopsia = recomendaciones_biopsia;
            this.recomendaciones_tratamientos = recomendaciones_tratamientos;
            this.NIC_I = NIC_I;
            this.NIC_II = NIC_II;
            this.NIC_III = NIC_III;
            this.origen_muestra = origen_muestra;
            this.negativo = negativo;
            this.VPH = VPH;
            this.glandular = glandular;
            this.escamosa = escamosa;
            this.adenocarcinomana = adenocarcinomana;
            this.carcinomana_celula = carcinomana_celula;
            this.celula_atipica = celula_atipica;
            this.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            this.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponseBody Body;
        
        public ActualizarCitologiaResponse() {
        }
        
        public ActualizarCitologiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarCitologiaResult;
        
        public ActualizarCitologiaResponseBody() {
        }
        
        public ActualizarCitologiaResponseBody(bool ActualizarCitologiaResult) {
            this.ActualizarCitologiaResult = ActualizarCitologiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequestBody Body;
        
        public ActualizarBiopsiaRequest() {
        }
        
        public ActualizarBiopsiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string macroscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string microscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string codificacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico;
        
        public ActualizarBiopsiaRequestBody() {
        }
        
        public ActualizarBiopsiaRequestBody(string cod_examen, string macroscopica, string microscopica, string codificacion, string diagnostico) {
            this.cod_examen = cod_examen;
            this.macroscopica = macroscopica;
            this.microscopica = microscopica;
            this.codificacion = codificacion;
            this.diagnostico = diagnostico;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponseBody Body;
        
        public ActualizarBiopsiaResponse() {
        }
        
        public ActualizarBiopsiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarBiopsiaResult;
        
        public ActualizarBiopsiaResponseBody() {
        }
        
        public ActualizarBiopsiaResponseBody(bool ActualizarBiopsiaResult) {
            this.ActualizarBiopsiaResult = ActualizarBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaLiquidosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologiaLiquidos", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequestBody Body;
        
        public ActualizarCitologiaLiquidosRequest() {
        }
        
        public ActualizarCitologiaLiquidosRequest(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaLiquidosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string macroscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string microscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string diagnostico;
        
        public ActualizarCitologiaLiquidosRequestBody() {
        }
        
        public ActualizarCitologiaLiquidosRequestBody(string cod_examen, string macroscopica, string microscopica, string diagnostico) {
            this.cod_examen = cod_examen;
            this.macroscopica = macroscopica;
            this.microscopica = microscopica;
            this.diagnostico = diagnostico;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaLiquidosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologiaLiquidosResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponseBody Body;
        
        public ActualizarCitologiaLiquidosResponse() {
        }
        
        public ActualizarCitologiaLiquidosResponse(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaLiquidosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarCitologiaLiquidosResult;
        
        public ActualizarCitologiaLiquidosResponseBody() {
        }
        
        public ActualizarCitologiaLiquidosResponseBody(bool ActualizarCitologiaLiquidosResult) {
            this.ActualizarCitologiaLiquidosResult = ActualizarCitologiaLiquidosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarMedico", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequestBody Body;
        
        public ActualizarMedicoRequest() {
        }
        
        public ActualizarMedicoRequest(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string telefono;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string celular;
        
        public ActualizarMedicoRequestBody() {
        }
        
        public ActualizarMedicoRequestBody(string nombre, string telefono, string celular) {
            this.nombre = nombre;
            this.telefono = telefono;
            this.celular = celular;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponseBody Body;
        
        public ActualizarMedicoResponse() {
        }
        
        public ActualizarMedicoResponse(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarMedicoResult;
        
        public ActualizarMedicoResponseBody() {
        }
        
        public ActualizarMedicoResponseBody(bool ActualizarMedicoResult) {
            this.ActualizarMedicoResult = ActualizarMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarEmpleadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarEmpleado", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequestBody Body;
        
        public BorrarEmpleadoRequest() {
        }
        
        public BorrarEmpleadoRequest(BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarEmpleadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        public BorrarEmpleadoRequestBody() {
        }
        
        public BorrarEmpleadoRequestBody(string usuario) {
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarEmpleadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarEmpleadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponseBody Body;
        
        public BorrarEmpleadoResponse() {
        }
        
        public BorrarEmpleadoResponse(BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarEmpleadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarEmpleadoResult;
        
        public BorrarEmpleadoResponseBody() {
        }
        
        public BorrarEmpleadoResponseBody(bool BorrarEmpleadoResult) {
            this.BorrarEmpleadoResult = BorrarEmpleadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMaterialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMaterial", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequestBody Body;
        
        public BorrarMaterialRequest() {
        }
        
        public BorrarMaterialRequest(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMaterialRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string material;
        
        public BorrarMaterialRequestBody() {
        }
        
        public BorrarMaterialRequestBody(string material) {
            this.material = material;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMaterialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMaterialResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponseBody Body;
        
        public BorrarMaterialResponse() {
        }
        
        public BorrarMaterialResponse(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMaterialResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarMaterialResult;
        
        public BorrarMaterialResponseBody() {
        }
        
        public BorrarMaterialResponseBody(bool BorrarMaterialResult) {
            this.BorrarMaterialResult = BorrarMaterialResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class esUsuarioValidoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="esUsuarioValido", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequestBody Body;
        
        public esUsuarioValidoRequest() {
        }
        
        public esUsuarioValidoRequest(BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class esUsuarioValidoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string contrasena;
        
        public esUsuarioValidoRequestBody() {
        }
        
        public esUsuarioValidoRequestBody(string usuario, string contrasena) {
            this.usuario = usuario;
            this.contrasena = contrasena;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class esUsuarioValidoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="esUsuarioValidoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponseBody Body;
        
        public esUsuarioValidoResponse() {
        }
        
        public esUsuarioValidoResponse(BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class esUsuarioValidoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool esUsuarioValidoResult;
        
        public esUsuarioValidoResponseBody() {
        }
        
        public esUsuarioValidoResponseBody(bool esUsuarioValidoResult) {
            this.esUsuarioValidoResult = esUsuarioValidoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIngresosPorMesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIngresosPorMes", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequestBody Body;
        
        public getIngresosPorMesRequest() {
        }
        
        public getIngresosPorMesRequest(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIngresosPorMesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int Año;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Mes;
        
        public getIngresosPorMesRequestBody() {
        }
        
        public getIngresosPorMesRequestBody(int Año, int Mes) {
            this.Año = Año;
            this.Mes = Mes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIngresosPorMesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIngresosPorMesResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponseBody Body;
        
        public getIngresosPorMesResponse() {
        }
        
        public getIngresosPorMesResponse(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIngresosPorMesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getIngresosPorMesResult;
        
        public getIngresosPorMesResponseBody() {
        }
        
        public getIngresosPorMesResponseBody(BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getIngresosPorMesResult) {
            this.getIngresosPorMesResult = getIngresosPorMesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getEgresosPorMesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getEgresosPorMes", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequestBody Body;
        
        public getEgresosPorMesRequest() {
        }
        
        public getEgresosPorMesRequest(BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getEgresosPorMesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int Anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Mes;
        
        public getEgresosPorMesRequestBody() {
        }
        
        public getEgresosPorMesRequestBody(int Anio, int Mes) {
            this.Anio = Anio;
            this.Mes = Mes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getEgresosPorMesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getEgresosPorMesResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponseBody Body;
        
        public getEgresosPorMesResponse() {
        }
        
        public getEgresosPorMesResponse(BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getEgresosPorMesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getEgresosPorMesResult;
        
        public getEgresosPorMesResponseBody() {
        }
        
        public getEgresosPorMesResponseBody(string getEgresosPorMesResult) {
            this.getEgresosPorMesResult = getEgresosPorMesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCitologiasGinecologicasRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getCitologiasGinecologicas", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequestBody Body;
        
        public getCitologiasGinecologicasRequest() {
        }
        
        public getCitologiasGinecologicasRequest(BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getCitologiasGinecologicasRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int Año;
        
        public getCitologiasGinecologicasRequestBody() {
        }
        
        public getCitologiasGinecologicasRequestBody(int Año) {
            this.Año = Año;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCitologiasGinecologicasResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getCitologiasGinecologicasResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponseBody Body;
        
        public getCitologiasGinecologicasResponse() {
        }
        
        public getCitologiasGinecologicasResponse(BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getCitologiasGinecologicasResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getCitologiasGinecologicasResult;
        
        public getCitologiasGinecologicasResponseBody() {
        }
        
        public getCitologiasGinecologicasResponseBody(BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getCitologiasGinecologicasResult) {
            this.getCitologiasGinecologicasResult = getCitologiasGinecologicasResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getBiopsiasRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getBiopsias", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequestBody Body;
        
        public getBiopsiasRequest() {
        }
        
        public getBiopsiasRequest(BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getBiopsiasRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int Año;
        
        public getBiopsiasRequestBody() {
        }
        
        public getBiopsiasRequestBody(int Año) {
            this.Año = Año;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getBiopsiasResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getBiopsiasResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponseBody Body;
        
        public getBiopsiasResponse() {
        }
        
        public getBiopsiasResponse(BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getBiopsiasResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getBiopsiasResult;
        
        public getBiopsiasResponseBody() {
        }
        
        public getBiopsiasResponseBody(BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getBiopsiasResult) {
            this.getBiopsiasResult = getBiopsiasResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getPacientesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getPacientes", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequestBody Body;
        
        public getPacientesRequest() {
        }
        
        public getPacientesRequest(BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getPacientesRequestBody {
        
        public getPacientesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getPacientesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getPacientesResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponseBody Body;
        
        public getPacientesResponse() {
        }
        
        public getPacientesResponse(BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getPacientesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getPacientesResult;
        
        public getPacientesResponseBody() {
        }
        
        public getPacientesResponseBody(BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getPacientesResult) {
            this.getPacientesResult = getPacientesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicos", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequestBody Body;
        
        public getMedicosRequest() {
        }
        
        public getMedicosRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getMedicosRequestBody {
        
        public getMedicosRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicosResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponseBody Body;
        
        public getMedicosResponse() {
        }
        
        public getMedicosResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getMedicosResult;
        
        public getMedicosResponseBody() {
        }
        
        public getMedicosResponseBody(BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getMedicosResult) {
            this.getMedicosResult = getMedicosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviado_BiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviado_Biopsia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequestBody Body;
        
        public getMaterialEnviado_BiopsiaRequest() {
        }
        
        public getMaterialEnviado_BiopsiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getMaterialEnviado_BiopsiaRequestBody {
        
        public getMaterialEnviado_BiopsiaRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviado_BiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviado_BiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponseBody Body;
        
        public getMaterialEnviado_BiopsiaResponse() {
        }
        
        public getMaterialEnviado_BiopsiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMaterialEnviado_BiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getMaterialEnviado_BiopsiaResult;
        
        public getMaterialEnviado_BiopsiaResponseBody() {
        }
        
        public getMaterialEnviado_BiopsiaResponseBody(BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType getMaterialEnviado_BiopsiaResult) {
            this.getMaterialEnviado_BiopsiaResult = getMaterialEnviado_BiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviado_CitologiaNoGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequestBody Body;
        
        public getMaterialEnviado_CitologiaNoGinecologicaRequest() {
        }
        
        public getMaterialEnviado_CitologiaNoGinecologicaRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaRequestBody {
        
        public getMaterialEnviado_CitologiaNoGinecologicaRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviado_CitologiaNoGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponseBody Body;
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponse() {
        }
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMaterialEnviado_CitologiaNoGinecologicaResult;
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponseBody() {
        }
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponseBody(string getMaterialEnviado_CitologiaNoGinecologicaResult) {
            this.getMaterialEnviado_CitologiaNoGinecologicaResult = getMaterialEnviado_CitologiaNoGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoBiopsiasRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoBiopsias", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequestBody Body;
        
        public consultaMedicoBiopsiasRequest() {
        }
        
        public consultaMedicoBiopsiasRequest(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoBiopsiasRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int mes;
        
        public consultaMedicoBiopsiasRequestBody() {
        }
        
        public consultaMedicoBiopsiasRequestBody(int anio, int mes) {
            this.anio = anio;
            this.mes = mes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoBiopsiasResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoBiopsiasResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponseBody Body;
        
        public consultaMedicoBiopsiasResponse() {
        }
        
        public consultaMedicoBiopsiasResponse(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoBiopsiasResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string consultaMedicoBiopsiasResult;
        
        public consultaMedicoBiopsiasResponseBody() {
        }
        
        public consultaMedicoBiopsiasResponseBody(string consultaMedicoBiopsiasResult) {
            this.consultaMedicoBiopsiasResult = consultaMedicoBiopsiasResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoCitologiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoCitologia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequestBody Body;
        
        public consultaMedicoCitologiaRequest() {
        }
        
        public consultaMedicoCitologiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoCitologiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int mes;
        
        public consultaMedicoCitologiaRequestBody() {
        }
        
        public consultaMedicoCitologiaRequestBody(int anio, int mes) {
            this.anio = anio;
            this.mes = mes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoCitologiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoCitologiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponseBody Body;
        
        public consultaMedicoCitologiaResponse() {
        }
        
        public consultaMedicoCitologiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoCitologiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string consultaMedicoCitologiaResult;
        
        public consultaMedicoCitologiaResponseBody() {
        }
        
        public consultaMedicoCitologiaResponseBody(string consultaMedicoCitologiaResult) {
            this.consultaMedicoCitologiaResult = consultaMedicoCitologiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAccesosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAccesos", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequestBody Body;
        
        public getAccesosRequest() {
        }
        
        public getAccesosRequest(BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAccesosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        public getAccesosRequestBody() {
        }
        
        public getAccesosRequestBody(string usuario) {
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAccesosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAccesosResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponseBody Body;
        
        public getAccesosResponse() {
        }
        
        public getAccesosResponse(BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAccesosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getAccesosResult;
        
        public getAccesosResponseBody() {
        }
        
        public getAccesosResponseBody(string getAccesosResult) {
            this.getAccesosResult = getAccesosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCantidadDeExamenesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getCantidadDeExamenes", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequestBody Body;
        
        public getCantidadDeExamenesRequest() {
        }
        
        public getCantidadDeExamenesRequest(BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getCantidadDeExamenesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string tabla;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string filtroedad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fechainicial;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fechafinal;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string filtroCategoria;
        
        public getCantidadDeExamenesRequestBody() {
        }
        
        public getCantidadDeExamenesRequestBody(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria) {
            this.tabla = tabla;
            this.filtroedad = filtroedad;
            this.fechainicial = fechainicial;
            this.fechafinal = fechafinal;
            this.filtroCategoria = filtroCategoria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCantidadDeExamenesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getCantidadDeExamenesResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponseBody Body;
        
        public getCantidadDeExamenesResponse() {
        }
        
        public getCantidadDeExamenesResponse(BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getCantidadDeExamenesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int getCantidadDeExamenesResult;
        
        public getCantidadDeExamenesResponseBody() {
        }
        
        public getCantidadDeExamenesResponseBody(int getCantidadDeExamenesResult) {
            this.getCantidadDeExamenesResult = getCantidadDeExamenesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getExamenesFiltradosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getExamenesFiltrados", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequestBody Body;
        
        public getExamenesFiltradosRequest() {
        }
        
        public getExamenesFiltradosRequest(BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getExamenesFiltradosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string tabla;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string filtroedad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fechainicial;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fechafinal;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string filtroCategoria;
        
        public getExamenesFiltradosRequestBody() {
        }
        
        public getExamenesFiltradosRequestBody(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria) {
            this.tabla = tabla;
            this.filtroedad = filtroedad;
            this.fechainicial = fechainicial;
            this.fechafinal = fechafinal;
            this.filtroCategoria = filtroCategoria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getExamenesFiltradosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getExamenesFiltradosResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponseBody Body;
        
        public getExamenesFiltradosResponse() {
        }
        
        public getExamenesFiltradosResponse(BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getExamenesFiltradosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getExamenesFiltradosResult;
        
        public getExamenesFiltradosResponseBody() {
        }
        
        public getExamenesFiltradosResponseBody(string getExamenesFiltradosResult) {
            this.getExamenesFiltradosResult = getExamenesFiltradosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicos_NombresRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicos_Nombres", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequestBody Body;
        
        public getMedicos_NombresRequest() {
        }
        
        public getMedicos_NombresRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getMedicos_NombresRequestBody {
        
        public getMedicos_NombresRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicos_NombresResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicos_NombresResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponseBody Body;
        
        public getMedicos_NombresResponse() {
        }
        
        public getMedicos_NombresResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicos_NombresResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMedicos_NombresResult;
        
        public getMedicos_NombresResponseBody() {
        }
        
        public getMedicos_NombresResponseBody(string getMedicos_NombresResult) {
            this.getMedicos_NombresResult = getMedicos_NombresResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMedico", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequestBody Body;
        
        public BorrarMedicoRequest() {
        }
        
        public BorrarMedicoRequest(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre;
        
        public BorrarMedicoRequestBody() {
        }
        
        public BorrarMedicoRequestBody(string nombre) {
            this.nombre = nombre;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponseBody Body;
        
        public BorrarMedicoResponse() {
        }
        
        public BorrarMedicoResponse(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarMedicoResult;
        
        public BorrarMedicoResponseBody() {
        }
        
        public BorrarMedicoResponseBody(bool BorrarMedicoResult) {
            this.BorrarMedicoResult = BorrarMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMuestraRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMuestra", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequestBody Body;
        
        public BorrarMuestraRequest() {
        }
        
        public BorrarMuestraRequest(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMuestraRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string codigo;
        
        public BorrarMuestraRequestBody() {
        }
        
        public BorrarMuestraRequestBody(string codigo) {
            this.codigo = codigo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMuestraResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMuestraResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponseBody Body;
        
        public BorrarMuestraResponse() {
        }
        
        public BorrarMuestraResponse(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMuestraResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarMuestraResult;
        
        public BorrarMuestraResponseBody() {
        }
        
        public BorrarMuestraResponseBody(bool BorrarMuestraResult) {
            this.BorrarMuestraResult = BorrarMuestraResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarGastoenEgresoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarGastoenEgreso", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequestBody Body;
        
        public InsertarGastoenEgresoRequest() {
        }
        
        public InsertarGastoenEgresoRequest(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarGastoenEgresoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string NombreContable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int anio_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int mes_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string descripcion;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int dia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int valor;
        
        public InsertarGastoenEgresoRequestBody() {
        }
        
        public InsertarGastoenEgresoRequestBody(string NombreContable, int anio_contable, int mes_contable, string descripcion, int dia, int valor) {
            this.NombreContable = NombreContable;
            this.anio_contable = anio_contable;
            this.mes_contable = mes_contable;
            this.descripcion = descripcion;
            this.dia = dia;
            this.valor = valor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarGastoenEgresoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarGastoenEgresoResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponseBody Body;
        
        public InsertarGastoenEgresoResponse() {
        }
        
        public InsertarGastoenEgresoResponse(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarGastoenEgresoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarGastoenEgresoResult;
        
        public InsertarGastoenEgresoResponseBody() {
        }
        
        public InsertarGastoenEgresoResponseBody(bool InsertarGastoenEgresoResult) {
            this.InsertarGastoenEgresoResult = InsertarGastoenEgresoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getTodosLosGastosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getTodosLosGastos", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequestBody Body;
        
        public getTodosLosGastosRequest() {
        }
        
        public getTodosLosGastosRequest(BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getTodosLosGastosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int mes;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string categoria;
        
        public getTodosLosGastosRequestBody() {
        }
        
        public getTodosLosGastosRequestBody(int anio, int mes, string categoria) {
            this.anio = anio;
            this.mes = mes;
            this.categoria = categoria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getTodosLosGastosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getTodosLosGastosResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponseBody Body;
        
        public getTodosLosGastosResponse() {
        }
        
        public getTodosLosGastosResponse(BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getTodosLosGastosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getTodosLosGastosResult;
        
        public getTodosLosGastosResponseBody() {
        }
        
        public getTodosLosGastosResponseBody(string getTodosLosGastosResult) {
            this.getTodosLosGastosResult = getTodosLosGastosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIngresosCitologiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIngresosCitologia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequestBody Body;
        
        public getIngresosCitologiaRequest() {
        }
        
        public getIngresosCitologiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIngresosCitologiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fechainicial;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fechafinal;
        
        public getIngresosCitologiaRequestBody() {
        }
        
        public getIngresosCitologiaRequestBody(string fechainicial, string fechafinal) {
            this.fechainicial = fechainicial;
            this.fechafinal = fechafinal;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIngresosCitologiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIngresosCitologiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponseBody Body;
        
        public getIngresosCitologiaResponse() {
        }
        
        public getIngresosCitologiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIngresosCitologiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getIngresosCitologiaResult;
        
        public getIngresosCitologiaResponseBody() {
        }
        
        public getIngresosCitologiaResponseBody(string getIngresosCitologiaResult) {
            this.getIngresosCitologiaResult = getIngresosCitologiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIngresosBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIngresosBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequestBody Body;
        
        public getIngresosBiopsiaRequest() {
        }
        
        public getIngresosBiopsiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIngresosBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fechainicial;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fechafinal;
        
        public getIngresosBiopsiaRequestBody() {
        }
        
        public getIngresosBiopsiaRequestBody(string fechainicial, string fechafinal) {
            this.fechainicial = fechainicial;
            this.fechafinal = fechafinal;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIngresosBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIngresosBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponseBody Body;
        
        public getIngresosBiopsiaResponse() {
        }
        
        public getIngresosBiopsiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIngresosBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getIngresosBiopsiaResult;
        
        public getIngresosBiopsiaResponseBody() {
        }
        
        public getIngresosBiopsiaResponseBody(string getIngresosBiopsiaResult) {
            this.getIngresosBiopsiaResult = getIngresosBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequestBody Body;
        
        public getMuestraGinecologicaRequest() {
        }
        
        public getMuestraGinecologicaRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraGinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public getMuestraGinecologicaRequestBody() {
        }
        
        public getMuestraGinecologicaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponseBody Body;
        
        public getMuestraGinecologicaResponse() {
        }
        
        public getMuestraGinecologicaResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMuestraGinecologicaResult;
        
        public getMuestraGinecologicaResponseBody() {
        }
        
        public getMuestraGinecologicaResponseBody(string getMuestraGinecologicaResult) {
            this.getMuestraGinecologicaResult = getMuestraGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraNo_GinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraNo_Ginecologica", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequestBody Body;
        
        public getMuestraNo_GinecologicaRequest() {
        }
        
        public getMuestraNo_GinecologicaRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraNo_GinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public getMuestraNo_GinecologicaRequestBody() {
        }
        
        public getMuestraNo_GinecologicaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraNo_GinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraNo_GinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponseBody Body;
        
        public getMuestraNo_GinecologicaResponse() {
        }
        
        public getMuestraNo_GinecologicaResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraNo_GinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMuestraNo_GinecologicaResult;
        
        public getMuestraNo_GinecologicaResponseBody() {
        }
        
        public getMuestraNo_GinecologicaResponseBody(string getMuestraNo_GinecologicaResult) {
            this.getMuestraNo_GinecologicaResult = getMuestraNo_GinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequestBody Body;
        
        public getMuestraBiopsiaRequest() {
        }
        
        public getMuestraBiopsiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public getMuestraBiopsiaRequestBody() {
        }
        
        public getMuestraBiopsiaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponseBody Body;
        
        public getMuestraBiopsiaResponse() {
        }
        
        public getMuestraBiopsiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMuestraBiopsiaResult;
        
        public getMuestraBiopsiaResponseBody() {
        }
        
        public getMuestraBiopsiaResponseBody(string getMuestraBiopsiaResult) {
            this.getMuestraBiopsiaResult = getMuestraBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviadoBiopsiaImprimirRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviadoBiopsiaImprimir", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequestBody Body;
        
        public getMaterialEnviadoBiopsiaImprimirRequest() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirRequest(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMaterialEnviadoBiopsiaImprimirRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public getMaterialEnviadoBiopsiaImprimirRequestBody() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviadoBiopsiaImprimirResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviadoBiopsiaImprimirResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponseBody Body;
        
        public getMaterialEnviadoBiopsiaImprimirResponse() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirResponse(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMaterialEnviadoBiopsiaImprimirResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMaterialEnviadoBiopsiaImprimirResult;
        
        public getMaterialEnviadoBiopsiaImprimirResponseBody() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirResponseBody(string getMaterialEnviadoBiopsiaImprimirResult) {
            this.getMaterialEnviadoBiopsiaImprimirResult = getMaterialEnviadoBiopsiaImprimirResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIdExamenesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIdExamenes", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequestBody Body;
        
        public getIdExamenesRequest() {
        }
        
        public getIdExamenesRequest(BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getIdExamenesRequestBody {
        
        public getIdExamenesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIdExamenesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIdExamenesResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponseBody Body;
        
        public getIdExamenesResponse() {
        }
        
        public getIdExamenesResponse(BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIdExamenesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getIdExamenesResult;
        
        public getIdExamenesResponseBody() {
        }
        
        public getIdExamenesResponseBody(string getIdExamenesResult) {
            this.getIdExamenesResult = getIdExamenesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequestBody Body;
        
        public buscarCitologiaRequest() {
        }
        
        public buscarCitologiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public buscarCitologiaRequestBody() {
        }
        
        public buscarCitologiaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponseBody Body;
        
        public buscarCitologiaResponse() {
        }
        
        public buscarCitologiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string buscarCitologiaResult;
        
        public buscarCitologiaResponseBody() {
        }
        
        public buscarCitologiaResponseBody(string buscarCitologiaResult) {
            this.buscarCitologiaResult = buscarCitologiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaLiquidosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologiaLiquidos", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequestBody Body;
        
        public buscarCitologiaLiquidosRequest() {
        }
        
        public buscarCitologiaLiquidosRequest(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaLiquidosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public buscarCitologiaLiquidosRequestBody() {
        }
        
        public buscarCitologiaLiquidosRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaLiquidosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologiaLiquidosResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponseBody Body;
        
        public buscarCitologiaLiquidosResponse() {
        }
        
        public buscarCitologiaLiquidosResponse(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaLiquidosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string buscarCitologiaLiquidosResult;
        
        public buscarCitologiaLiquidosResponseBody() {
        }
        
        public buscarCitologiaLiquidosResponseBody(string buscarCitologiaLiquidosResult) {
            this.buscarCitologiaLiquidosResult = buscarCitologiaLiquidosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequestBody Body;
        
        public buscarBiopsiaRequest() {
        }
        
        public buscarBiopsiaRequest(BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public buscarBiopsiaRequestBody() {
        }
        
        public buscarBiopsiaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponseBody Body;
        
        public buscarBiopsiaResponse() {
        }
        
        public buscarBiopsiaResponse(BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string buscarBiopsiaResult;
        
        public buscarBiopsiaResponseBody() {
        }
        
        public buscarBiopsiaResponseBody(string buscarBiopsiaResult) {
            this.buscarBiopsiaResult = buscarBiopsiaResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface clinicaPatologiaWebServiceSoapChannel : BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class seEjecutoComandoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public seEjecutoComandoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConectarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConectarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuerryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QuerryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarModuloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarModuloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarAccesoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarAccesoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarContabilidadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarContabilidadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarEgresoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarEgresoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarGastoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarGastoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarMaterialEnviadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarMaterialEnviadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarCitologiaNoGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarCitologiaNoGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarCitologiaGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarCitologiaGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIDdeMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIDdeMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIDdePacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIDdePacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getExamenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getExamenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEmpleadosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEmpleadosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarCitologiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarCitologiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarCitologiaLiquidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarCitologiaLiquidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class esUsuarioValidoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public esUsuarioValidoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIngresosPorMesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIngresosPorMesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEgresosPorMesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEgresosPorMesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCitologiasGinecologicasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCitologiasGinecologicasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getBiopsiasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getBiopsiasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getPacientesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getPacientesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMedicosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMedicosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMaterialEnviado_BiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMaterialEnviado_BiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class consultaMedicoBiopsiasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public consultaMedicoBiopsiasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class consultaMedicoCitologiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public consultaMedicoCitologiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAccesosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAccesosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCantidadDeExamenesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCantidadDeExamenesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getExamenesFiltradosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getExamenesFiltradosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMedicos_NombresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMedicos_NombresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarMuestraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarMuestraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerificaryActualizarContabilidadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerificaryActualizarContabilidadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarGastoenEgresoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarGastoenEgresoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getTodosLosGastosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getTodosLosGastosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIngresosCitologiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIngresosCitologiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIngresosBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIngresosBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMuestraGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMuestraGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMuestraNo_GinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMuestraNo_GinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMuestraBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMuestraBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMaterialEnviadoBiopsiaImprimirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMaterialEnviadoBiopsiaImprimirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIdExamenesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIdExamenesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class buscarCitologiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public buscarCitologiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class buscarCitologiaLiquidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public buscarCitologiaLiquidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class buscarBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public buscarBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class clinicaPatologiaWebServiceSoapClient : System.ServiceModel.ClientBase<BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap>, BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap {
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginseEjecutoComandoDelegate;
        
        private EndOperationDelegate onEndseEjecutoComandoDelegate;
        
        private System.Threading.SendOrPostCallback onseEjecutoComandoCompletedDelegate;
        
        private BeginOperationDelegate onBeginConectarDelegate;
        
        private EndOperationDelegate onEndConectarDelegate;
        
        private System.Threading.SendOrPostCallback onConectarCompletedDelegate;
        
        private BeginOperationDelegate onBeginQuerryDelegate;
        
        private EndOperationDelegate onEndQuerryDelegate;
        
        private System.Threading.SendOrPostCallback onQuerryCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarMedicoDelegate;
        
        private EndOperationDelegate onEndInsertarMedicoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarEmpleadoDelegate;
        
        private EndOperationDelegate onEndInsertarEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarModuloDelegate;
        
        private EndOperationDelegate onEndInsertarModuloDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarModuloCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarAccesoDelegate;
        
        private EndOperationDelegate onEndInsertarAccesoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarAccesoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarContabilidadDelegate;
        
        private EndOperationDelegate onEndInsertarContabilidadDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarContabilidadCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarEgresoDelegate;
        
        private EndOperationDelegate onEndInsertarEgresoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarEgresoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarGastoDelegate;
        
        private EndOperationDelegate onEndInsertarGastoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarGastoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarMaterialDelegate;
        
        private EndOperationDelegate onEndInsertarMaterialDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarMaterialCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarMaterialEnviadoDelegate;
        
        private EndOperationDelegate onEndInsertarMaterialEnviadoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarMaterialEnviadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarPacienteDelegate;
        
        private EndOperationDelegate onEndInsertarPacienteDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarPacienteCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarBiopsiaDelegate;
        
        private EndOperationDelegate onEndInsertarBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarCitologiaNoGinecologicaDelegate;
        
        private EndOperationDelegate onEndInsertarCitologiaNoGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarCitologiaNoGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarCitologiaGinecologicaDelegate;
        
        private EndOperationDelegate onEndInsertarCitologiaGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarCitologiaGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIDdeMedicoDelegate;
        
        private EndOperationDelegate onEndgetIDdeMedicoDelegate;
        
        private System.Threading.SendOrPostCallback ongetIDdeMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIDdePacienteDelegate;
        
        private EndOperationDelegate onEndgetIDdePacienteDelegate;
        
        private System.Threading.SendOrPostCallback ongetIDdePacienteCompletedDelegate;
        
        private BeginOperationDelegate onBegingetPacienteDelegate;
        
        private EndOperationDelegate onEndgetPacienteDelegate;
        
        private System.Threading.SendOrPostCallback ongetPacienteCompletedDelegate;
        
        private BeginOperationDelegate onBegingetExamenDelegate;
        
        private EndOperationDelegate onEndgetExamenDelegate;
        
        private System.Threading.SendOrPostCallback ongetExamenCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMedicoDelegate;
        
        private EndOperationDelegate onEndgetMedicoDelegate;
        
        private System.Threading.SendOrPostCallback ongetMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEmpleadoDelegate;
        
        private EndOperationDelegate onEndgetEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback ongetEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEmpleadosDelegate;
        
        private EndOperationDelegate onEndgetEmpleadosDelegate;
        
        private System.Threading.SendOrPostCallback ongetEmpleadosCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarCitologiaDelegate;
        
        private EndOperationDelegate onEndActualizarCitologiaDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarCitologiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarBiopsiaDelegate;
        
        private EndOperationDelegate onEndActualizarBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarCitologiaLiquidosDelegate;
        
        private EndOperationDelegate onEndActualizarCitologiaLiquidosDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarCitologiaLiquidosCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarMedicoDelegate;
        
        private EndOperationDelegate onEndActualizarMedicoDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarEmpleadoDelegate;
        
        private EndOperationDelegate onEndBorrarEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarMaterialDelegate;
        
        private EndOperationDelegate onEndBorrarMaterialDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarMaterialCompletedDelegate;
        
        private BeginOperationDelegate onBeginesUsuarioValidoDelegate;
        
        private EndOperationDelegate onEndesUsuarioValidoDelegate;
        
        private System.Threading.SendOrPostCallback onesUsuarioValidoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIngresosPorMesDelegate;
        
        private EndOperationDelegate onEndgetIngresosPorMesDelegate;
        
        private System.Threading.SendOrPostCallback ongetIngresosPorMesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEgresosPorMesDelegate;
        
        private EndOperationDelegate onEndgetEgresosPorMesDelegate;
        
        private System.Threading.SendOrPostCallback ongetEgresosPorMesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCitologiasGinecologicasDelegate;
        
        private EndOperationDelegate onEndgetCitologiasGinecologicasDelegate;
        
        private System.Threading.SendOrPostCallback ongetCitologiasGinecologicasCompletedDelegate;
        
        private BeginOperationDelegate onBegingetBiopsiasDelegate;
        
        private EndOperationDelegate onEndgetBiopsiasDelegate;
        
        private System.Threading.SendOrPostCallback ongetBiopsiasCompletedDelegate;
        
        private BeginOperationDelegate onBegingetPacientesDelegate;
        
        private EndOperationDelegate onEndgetPacientesDelegate;
        
        private System.Threading.SendOrPostCallback ongetPacientesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMedicosDelegate;
        
        private EndOperationDelegate onEndgetMedicosDelegate;
        
        private System.Threading.SendOrPostCallback ongetMedicosCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMaterialEnviado_BiopsiaDelegate;
        
        private EndOperationDelegate onEndgetMaterialEnviado_BiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMaterialEnviado_BiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate;
        
        private EndOperationDelegate onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBeginconsultaMedicoBiopsiasDelegate;
        
        private EndOperationDelegate onEndconsultaMedicoBiopsiasDelegate;
        
        private System.Threading.SendOrPostCallback onconsultaMedicoBiopsiasCompletedDelegate;
        
        private BeginOperationDelegate onBeginconsultaMedicoCitologiaDelegate;
        
        private EndOperationDelegate onEndconsultaMedicoCitologiaDelegate;
        
        private System.Threading.SendOrPostCallback onconsultaMedicoCitologiaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAccesosDelegate;
        
        private EndOperationDelegate onEndgetAccesosDelegate;
        
        private System.Threading.SendOrPostCallback ongetAccesosCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCantidadDeExamenesDelegate;
        
        private EndOperationDelegate onEndgetCantidadDeExamenesDelegate;
        
        private System.Threading.SendOrPostCallback ongetCantidadDeExamenesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetExamenesFiltradosDelegate;
        
        private EndOperationDelegate onEndgetExamenesFiltradosDelegate;
        
        private System.Threading.SendOrPostCallback ongetExamenesFiltradosCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMedicos_NombresDelegate;
        
        private EndOperationDelegate onEndgetMedicos_NombresDelegate;
        
        private System.Threading.SendOrPostCallback ongetMedicos_NombresCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarMedicoDelegate;
        
        private EndOperationDelegate onEndBorrarMedicoDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarMuestraDelegate;
        
        private EndOperationDelegate onEndBorrarMuestraDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarMuestraCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerificaryActualizarContabilidadDelegate;
        
        private EndOperationDelegate onEndVerificaryActualizarContabilidadDelegate;
        
        private System.Threading.SendOrPostCallback onVerificaryActualizarContabilidadCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarGastoenEgresoDelegate;
        
        private EndOperationDelegate onEndInsertarGastoenEgresoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarGastoenEgresoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetTodosLosGastosDelegate;
        
        private EndOperationDelegate onEndgetTodosLosGastosDelegate;
        
        private System.Threading.SendOrPostCallback ongetTodosLosGastosCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIngresosCitologiaDelegate;
        
        private EndOperationDelegate onEndgetIngresosCitologiaDelegate;
        
        private System.Threading.SendOrPostCallback ongetIngresosCitologiaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIngresosBiopsiaDelegate;
        
        private EndOperationDelegate onEndgetIngresosBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback ongetIngresosBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMuestraGinecologicaDelegate;
        
        private EndOperationDelegate onEndgetMuestraGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMuestraGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMuestraNo_GinecologicaDelegate;
        
        private EndOperationDelegate onEndgetMuestraNo_GinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMuestraNo_GinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMuestraBiopsiaDelegate;
        
        private EndOperationDelegate onEndgetMuestraBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMuestraBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMaterialEnviadoBiopsiaImprimirDelegate;
        
        private EndOperationDelegate onEndgetMaterialEnviadoBiopsiaImprimirDelegate;
        
        private System.Threading.SendOrPostCallback ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIdExamenesDelegate;
        
        private EndOperationDelegate onEndgetIdExamenesDelegate;
        
        private System.Threading.SendOrPostCallback ongetIdExamenesCompletedDelegate;
        
        private BeginOperationDelegate onBeginbuscarCitologiaDelegate;
        
        private EndOperationDelegate onEndbuscarCitologiaDelegate;
        
        private System.Threading.SendOrPostCallback onbuscarCitologiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginbuscarCitologiaLiquidosDelegate;
        
        private EndOperationDelegate onEndbuscarCitologiaLiquidosDelegate;
        
        private System.Threading.SendOrPostCallback onbuscarCitologiaLiquidosCompletedDelegate;
        
        private BeginOperationDelegate onBeginbuscarBiopsiaDelegate;
        
        private EndOperationDelegate onEndbuscarBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback onbuscarBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public clinicaPatologiaWebServiceSoapClient() {
        }
        
        public clinicaPatologiaWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public clinicaPatologiaWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public clinicaPatologiaWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public clinicaPatologiaWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<seEjecutoComandoCompletedEventArgs> seEjecutoComandoCompleted;
        
        public event System.EventHandler<ConectarCompletedEventArgs> ConectarCompleted;
        
        public event System.EventHandler<QuerryCompletedEventArgs> QuerryCompleted;
        
        public event System.EventHandler<InsertarMedicoCompletedEventArgs> InsertarMedicoCompleted;
        
        public event System.EventHandler<InsertarEmpleadoCompletedEventArgs> InsertarEmpleadoCompleted;
        
        public event System.EventHandler<InsertarModuloCompletedEventArgs> InsertarModuloCompleted;
        
        public event System.EventHandler<InsertarAccesoCompletedEventArgs> InsertarAccesoCompleted;
        
        public event System.EventHandler<InsertarContabilidadCompletedEventArgs> InsertarContabilidadCompleted;
        
        public event System.EventHandler<InsertarEgresoCompletedEventArgs> InsertarEgresoCompleted;
        
        public event System.EventHandler<InsertarGastoCompletedEventArgs> InsertarGastoCompleted;
        
        public event System.EventHandler<InsertarMaterialCompletedEventArgs> InsertarMaterialCompleted;
        
        public event System.EventHandler<InsertarMaterialEnviadoCompletedEventArgs> InsertarMaterialEnviadoCompleted;
        
        public event System.EventHandler<InsertarPacienteCompletedEventArgs> InsertarPacienteCompleted;
        
        public event System.EventHandler<InsertarBiopsiaCompletedEventArgs> InsertarBiopsiaCompleted;
        
        public event System.EventHandler<InsertarCitologiaNoGinecologicaCompletedEventArgs> InsertarCitologiaNoGinecologicaCompleted;
        
        public event System.EventHandler<InsertarCitologiaGinecologicaCompletedEventArgs> InsertarCitologiaGinecologicaCompleted;
        
        public event System.EventHandler<getIDdeMedicoCompletedEventArgs> getIDdeMedicoCompleted;
        
        public event System.EventHandler<getIDdePacienteCompletedEventArgs> getIDdePacienteCompleted;
        
        public event System.EventHandler<getPacienteCompletedEventArgs> getPacienteCompleted;
        
        public event System.EventHandler<getExamenCompletedEventArgs> getExamenCompleted;
        
        public event System.EventHandler<getMedicoCompletedEventArgs> getMedicoCompleted;
        
        public event System.EventHandler<getEmpleadoCompletedEventArgs> getEmpleadoCompleted;
        
        public event System.EventHandler<getEmpleadosCompletedEventArgs> getEmpleadosCompleted;
        
        public event System.EventHandler<ActualizarCitologiaCompletedEventArgs> ActualizarCitologiaCompleted;
        
        public event System.EventHandler<ActualizarBiopsiaCompletedEventArgs> ActualizarBiopsiaCompleted;
        
        public event System.EventHandler<ActualizarCitologiaLiquidosCompletedEventArgs> ActualizarCitologiaLiquidosCompleted;
        
        public event System.EventHandler<ActualizarMedicoCompletedEventArgs> ActualizarMedicoCompleted;
        
        public event System.EventHandler<BorrarEmpleadoCompletedEventArgs> BorrarEmpleadoCompleted;
        
        public event System.EventHandler<BorrarMaterialCompletedEventArgs> BorrarMaterialCompleted;
        
        public event System.EventHandler<esUsuarioValidoCompletedEventArgs> esUsuarioValidoCompleted;
        
        public event System.EventHandler<getIngresosPorMesCompletedEventArgs> getIngresosPorMesCompleted;
        
        public event System.EventHandler<getEgresosPorMesCompletedEventArgs> getEgresosPorMesCompleted;
        
        public event System.EventHandler<getCitologiasGinecologicasCompletedEventArgs> getCitologiasGinecologicasCompleted;
        
        public event System.EventHandler<getBiopsiasCompletedEventArgs> getBiopsiasCompleted;
        
        public event System.EventHandler<getPacientesCompletedEventArgs> getPacientesCompleted;
        
        public event System.EventHandler<getMedicosCompletedEventArgs> getMedicosCompleted;
        
        public event System.EventHandler<getMaterialEnviado_BiopsiaCompletedEventArgs> getMaterialEnviado_BiopsiaCompleted;
        
        public event System.EventHandler<getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs> getMaterialEnviado_CitologiaNoGinecologicaCompleted;
        
        public event System.EventHandler<consultaMedicoBiopsiasCompletedEventArgs> consultaMedicoBiopsiasCompleted;
        
        public event System.EventHandler<consultaMedicoCitologiaCompletedEventArgs> consultaMedicoCitologiaCompleted;
        
        public event System.EventHandler<getAccesosCompletedEventArgs> getAccesosCompleted;
        
        public event System.EventHandler<getCantidadDeExamenesCompletedEventArgs> getCantidadDeExamenesCompleted;
        
        public event System.EventHandler<getExamenesFiltradosCompletedEventArgs> getExamenesFiltradosCompleted;
        
        public event System.EventHandler<getMedicos_NombresCompletedEventArgs> getMedicos_NombresCompleted;
        
        public event System.EventHandler<BorrarMedicoCompletedEventArgs> BorrarMedicoCompleted;
        
        public event System.EventHandler<BorrarMuestraCompletedEventArgs> BorrarMuestraCompleted;
        
        public event System.EventHandler<VerificaryActualizarContabilidadCompletedEventArgs> VerificaryActualizarContabilidadCompleted;
        
        public event System.EventHandler<InsertarGastoenEgresoCompletedEventArgs> InsertarGastoenEgresoCompleted;
        
        public event System.EventHandler<getTodosLosGastosCompletedEventArgs> getTodosLosGastosCompleted;
        
        public event System.EventHandler<getIngresosCitologiaCompletedEventArgs> getIngresosCitologiaCompleted;
        
        public event System.EventHandler<getIngresosBiopsiaCompletedEventArgs> getIngresosBiopsiaCompleted;
        
        public event System.EventHandler<getMuestraGinecologicaCompletedEventArgs> getMuestraGinecologicaCompleted;
        
        public event System.EventHandler<getMuestraNo_GinecologicaCompletedEventArgs> getMuestraNo_GinecologicaCompleted;
        
        public event System.EventHandler<getMuestraBiopsiaCompletedEventArgs> getMuestraBiopsiaCompleted;
        
        public event System.EventHandler<getMaterialEnviadoBiopsiaImprimirCompletedEventArgs> getMaterialEnviadoBiopsiaImprimirCompleted;
        
        public event System.EventHandler<getIdExamenesCompletedEventArgs> getIdExamenesCompleted;
        
        public event System.EventHandler<buscarCitologiaCompletedEventArgs> buscarCitologiaCompleted;
        
        public event System.EventHandler<buscarCitologiaLiquidosCompletedEventArgs> buscarCitologiaLiquidosCompleted;
        
        public event System.EventHandler<buscarBiopsiaCompletedEventArgs> buscarBiopsiaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginHelloWorld(BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginHelloWorld(string Nombre, int MedicoID, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequestBody();
            inValue.Body.Nombre = Nombre;
            inValue.Body.MedicoID = MedicoID;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginHelloWorld(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndHelloWorld(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndHelloWorld(result);
            return retVal.Body.HelloWorldResult;
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Nombre = ((string)(inValues[0]));
            int MedicoID = ((int)(inValues[1]));
            return this.BeginHelloWorld(Nombre, MedicoID, callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = this.EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync(string Nombre, int MedicoID) {
            this.HelloWorldAsync(Nombre, MedicoID, null);
        }
        
        public void HelloWorldAsync(string Nombre, int MedicoID, object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, new object[] {
                        Nombre,
                        MedicoID}, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginseEjecutoComando(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginseEjecutoComando(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndseEjecutoComando(System.IAsyncResult result) {
            return base.Channel.EndseEjecutoComando(result);
        }
        
        private System.IAsyncResult OnBeginseEjecutoComando(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginseEjecutoComando(callback, asyncState);
        }
        
        private object[] OnEndseEjecutoComando(System.IAsyncResult result) {
            bool retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndseEjecutoComando(result);
            return new object[] {
                    retVal};
        }
        
        private void OnseEjecutoComandoCompleted(object state) {
            if ((this.seEjecutoComandoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.seEjecutoComandoCompleted(this, new seEjecutoComandoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void seEjecutoComandoAsync() {
            this.seEjecutoComandoAsync(null);
        }
        
        public void seEjecutoComandoAsync(object userState) {
            if ((this.onBeginseEjecutoComandoDelegate == null)) {
                this.onBeginseEjecutoComandoDelegate = new BeginOperationDelegate(this.OnBeginseEjecutoComando);
            }
            if ((this.onEndseEjecutoComandoDelegate == null)) {
                this.onEndseEjecutoComandoDelegate = new EndOperationDelegate(this.OnEndseEjecutoComando);
            }
            if ((this.onseEjecutoComandoCompletedDelegate == null)) {
                this.onseEjecutoComandoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnseEjecutoComandoCompleted);
            }
            base.InvokeAsync(this.onBeginseEjecutoComandoDelegate, null, this.onEndseEjecutoComandoDelegate, this.onseEjecutoComandoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginConectar(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConectar(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndConectar(System.IAsyncResult result) {
            return base.Channel.EndConectar(result);
        }
        
        private System.IAsyncResult OnBeginConectar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginConectar(callback, asyncState);
        }
        
        private object[] OnEndConectar(System.IAsyncResult result) {
            bool retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndConectar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConectarCompleted(object state) {
            if ((this.ConectarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConectarCompleted(this, new ConectarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConectarAsync() {
            this.ConectarAsync(null);
        }
        
        public void ConectarAsync(object userState) {
            if ((this.onBeginConectarDelegate == null)) {
                this.onBeginConectarDelegate = new BeginOperationDelegate(this.OnBeginConectar);
            }
            if ((this.onEndConectarDelegate == null)) {
                this.onEndConectarDelegate = new EndOperationDelegate(this.OnEndConectar);
            }
            if ((this.onConectarCompletedDelegate == null)) {
                this.onConectarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConectarCompleted);
            }
            base.InvokeAsync(this.onBeginConectarDelegate, null, this.onEndConectarDelegate, this.onConectarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginQuerry(BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQuerry(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginQuerry(string querry, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequestBody();
            inValue.Body.querry = querry;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginQuerry(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndQuerry(System.IAsyncResult result) {
            return base.Channel.EndQuerry(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndQuerry(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndQuerry(result);
            return retVal.Body.QuerryResult;
        }
        
        private System.IAsyncResult OnBeginQuerry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string querry = ((string)(inValues[0]));
            return this.BeginQuerry(querry, callback, asyncState);
        }
        
        private object[] OnEndQuerry(System.IAsyncResult result) {
            string retVal = this.EndQuerry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQuerryCompleted(object state) {
            if ((this.QuerryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QuerryCompleted(this, new QuerryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QuerryAsync(string querry) {
            this.QuerryAsync(querry, null);
        }
        
        public void QuerryAsync(string querry, object userState) {
            if ((this.onBeginQuerryDelegate == null)) {
                this.onBeginQuerryDelegate = new BeginOperationDelegate(this.OnBeginQuerry);
            }
            if ((this.onEndQuerryDelegate == null)) {
                this.onEndQuerryDelegate = new EndOperationDelegate(this.OnEndQuerry);
            }
            if ((this.onQuerryCompletedDelegate == null)) {
                this.onQuerryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQuerryCompleted);
            }
            base.InvokeAsync(this.onBeginQuerryDelegate, new object[] {
                        querry}, this.onEndQuerryDelegate, this.onQuerryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarMedico(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarMedico(string Nombre, string telefono, string celular, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequestBody();
            inValue.Body.Nombre = Nombre;
            inValue.Body.telefono = telefono;
            inValue.Body.celular = celular;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarMedico(System.IAsyncResult result) {
            return base.Channel.EndInsertarMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarMedico(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarMedico(result);
            return retVal.Body.InsertarMedicoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Nombre = ((string)(inValues[0]));
            string telefono = ((string)(inValues[1]));
            string celular = ((string)(inValues[2]));
            return this.BeginInsertarMedico(Nombre, telefono, celular, callback, asyncState);
        }
        
        private object[] OnEndInsertarMedico(System.IAsyncResult result) {
            bool retVal = this.EndInsertarMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarMedicoCompleted(object state) {
            if ((this.InsertarMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarMedicoCompleted(this, new InsertarMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarMedicoAsync(string Nombre, string telefono, string celular) {
            this.InsertarMedicoAsync(Nombre, telefono, celular, null);
        }
        
        public void InsertarMedicoAsync(string Nombre, string telefono, string celular, object userState) {
            if ((this.onBeginInsertarMedicoDelegate == null)) {
                this.onBeginInsertarMedicoDelegate = new BeginOperationDelegate(this.OnBeginInsertarMedico);
            }
            if ((this.onEndInsertarMedicoDelegate == null)) {
                this.onEndInsertarMedicoDelegate = new EndOperationDelegate(this.OnEndInsertarMedico);
            }
            if ((this.onInsertarMedicoCompletedDelegate == null)) {
                this.onInsertarMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarMedicoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarMedicoDelegate, new object[] {
                        Nombre,
                        telefono,
                        celular}, this.onEndInsertarMedicoDelegate, this.onInsertarMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarEmpleado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarEmpleado(string nombre_usuario, string tipo, string P_nombre, string S_nombre, string P_apellido, string S_apellido, string Password, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequestBody();
            inValue.Body.nombre_usuario = nombre_usuario;
            inValue.Body.tipo = tipo;
            inValue.Body.P_nombre = P_nombre;
            inValue.Body.S_nombre = S_nombre;
            inValue.Body.P_apellido = P_apellido;
            inValue.Body.S_apellido = S_apellido;
            inValue.Body.Password = Password;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarEmpleado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarEmpleado(System.IAsyncResult result) {
            return base.Channel.EndInsertarEmpleado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarEmpleado(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarEmpleado(result);
            return retVal.Body.InsertarEmpleadoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_usuario = ((string)(inValues[0]));
            string tipo = ((string)(inValues[1]));
            string P_nombre = ((string)(inValues[2]));
            string S_nombre = ((string)(inValues[3]));
            string P_apellido = ((string)(inValues[4]));
            string S_apellido = ((string)(inValues[5]));
            string Password = ((string)(inValues[6]));
            return this.BeginInsertarEmpleado(nombre_usuario, tipo, P_nombre, S_nombre, P_apellido, S_apellido, Password, callback, asyncState);
        }
        
        private object[] OnEndInsertarEmpleado(System.IAsyncResult result) {
            bool retVal = this.EndInsertarEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarEmpleadoCompleted(object state) {
            if ((this.InsertarEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarEmpleadoCompleted(this, new InsertarEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarEmpleadoAsync(string nombre_usuario, string tipo, string P_nombre, string S_nombre, string P_apellido, string S_apellido, string Password) {
            this.InsertarEmpleadoAsync(nombre_usuario, tipo, P_nombre, S_nombre, P_apellido, S_apellido, Password, null);
        }
        
        public void InsertarEmpleadoAsync(string nombre_usuario, string tipo, string P_nombre, string S_nombre, string P_apellido, string S_apellido, string Password, object userState) {
            if ((this.onBeginInsertarEmpleadoDelegate == null)) {
                this.onBeginInsertarEmpleadoDelegate = new BeginOperationDelegate(this.OnBeginInsertarEmpleado);
            }
            if ((this.onEndInsertarEmpleadoDelegate == null)) {
                this.onEndInsertarEmpleadoDelegate = new EndOperationDelegate(this.OnEndInsertarEmpleado);
            }
            if ((this.onInsertarEmpleadoCompletedDelegate == null)) {
                this.onInsertarEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarEmpleadoDelegate, new object[] {
                        nombre_usuario,
                        tipo,
                        P_nombre,
                        S_nombre,
                        P_apellido,
                        S_apellido,
                        Password}, this.onEndInsertarEmpleadoDelegate, this.onInsertarEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarModulo(BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarModulo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarModulo(string nombre_modulo, string descripcion, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequestBody();
            inValue.Body.nombre_modulo = nombre_modulo;
            inValue.Body.descripcion = descripcion;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarModulo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarModulo(System.IAsyncResult result) {
            return base.Channel.EndInsertarModulo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarModulo(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarModulo(result);
            return retVal.Body.InsertarModuloResult;
        }
        
        private System.IAsyncResult OnBeginInsertarModulo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_modulo = ((string)(inValues[0]));
            string descripcion = ((string)(inValues[1]));
            return this.BeginInsertarModulo(nombre_modulo, descripcion, callback, asyncState);
        }
        
        private object[] OnEndInsertarModulo(System.IAsyncResult result) {
            bool retVal = this.EndInsertarModulo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarModuloCompleted(object state) {
            if ((this.InsertarModuloCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarModuloCompleted(this, new InsertarModuloCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarModuloAsync(string nombre_modulo, string descripcion) {
            this.InsertarModuloAsync(nombre_modulo, descripcion, null);
        }
        
        public void InsertarModuloAsync(string nombre_modulo, string descripcion, object userState) {
            if ((this.onBeginInsertarModuloDelegate == null)) {
                this.onBeginInsertarModuloDelegate = new BeginOperationDelegate(this.OnBeginInsertarModulo);
            }
            if ((this.onEndInsertarModuloDelegate == null)) {
                this.onEndInsertarModuloDelegate = new EndOperationDelegate(this.OnEndInsertarModulo);
            }
            if ((this.onInsertarModuloCompletedDelegate == null)) {
                this.onInsertarModuloCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarModuloCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarModuloDelegate, new object[] {
                        nombre_modulo,
                        descripcion}, this.onEndInsertarModuloDelegate, this.onInsertarModuloCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarAcceso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarAcceso(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarAcceso(string nombre_modulo, string usuario, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequestBody();
            inValue.Body.nombre_modulo = nombre_modulo;
            inValue.Body.usuario = usuario;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarAcceso(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarAcceso(System.IAsyncResult result) {
            return base.Channel.EndInsertarAcceso(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarAcceso(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarAcceso(result);
            return retVal.Body.InsertarAccesoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarAcceso(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_modulo = ((string)(inValues[0]));
            string usuario = ((string)(inValues[1]));
            return this.BeginInsertarAcceso(nombre_modulo, usuario, callback, asyncState);
        }
        
        private object[] OnEndInsertarAcceso(System.IAsyncResult result) {
            bool retVal = this.EndInsertarAcceso(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarAccesoCompleted(object state) {
            if ((this.InsertarAccesoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarAccesoCompleted(this, new InsertarAccesoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarAccesoAsync(string nombre_modulo, string usuario) {
            this.InsertarAccesoAsync(nombre_modulo, usuario, null);
        }
        
        public void InsertarAccesoAsync(string nombre_modulo, string usuario, object userState) {
            if ((this.onBeginInsertarAccesoDelegate == null)) {
                this.onBeginInsertarAccesoDelegate = new BeginOperationDelegate(this.OnBeginInsertarAcceso);
            }
            if ((this.onEndInsertarAccesoDelegate == null)) {
                this.onEndInsertarAccesoDelegate = new EndOperationDelegate(this.OnEndInsertarAcceso);
            }
            if ((this.onInsertarAccesoCompletedDelegate == null)) {
                this.onInsertarAccesoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarAccesoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarAccesoDelegate, new object[] {
                        nombre_modulo,
                        usuario}, this.onEndInsertarAccesoDelegate, this.onInsertarAccesoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarContabilidad(BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarContabilidad(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarContabilidad(string nombre_contable, int anio, int mes, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequestBody();
            inValue.Body.nombre_contable = nombre_contable;
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarContabilidad(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarContabilidad(System.IAsyncResult result) {
            return base.Channel.EndInsertarContabilidad(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarContabilidad(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarContabilidad(result);
            return retVal.Body.InsertarContabilidadResult;
        }
        
        private System.IAsyncResult OnBeginInsertarContabilidad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_contable = ((string)(inValues[0]));
            int anio = ((int)(inValues[1]));
            int mes = ((int)(inValues[2]));
            return this.BeginInsertarContabilidad(nombre_contable, anio, mes, callback, asyncState);
        }
        
        private object[] OnEndInsertarContabilidad(System.IAsyncResult result) {
            bool retVal = this.EndInsertarContabilidad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarContabilidadCompleted(object state) {
            if ((this.InsertarContabilidadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarContabilidadCompleted(this, new InsertarContabilidadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarContabilidadAsync(string nombre_contable, int anio, int mes) {
            this.InsertarContabilidadAsync(nombre_contable, anio, mes, null);
        }
        
        public void InsertarContabilidadAsync(string nombre_contable, int anio, int mes, object userState) {
            if ((this.onBeginInsertarContabilidadDelegate == null)) {
                this.onBeginInsertarContabilidadDelegate = new BeginOperationDelegate(this.OnBeginInsertarContabilidad);
            }
            if ((this.onEndInsertarContabilidadDelegate == null)) {
                this.onEndInsertarContabilidadDelegate = new EndOperationDelegate(this.OnEndInsertarContabilidad);
            }
            if ((this.onInsertarContabilidadCompletedDelegate == null)) {
                this.onInsertarContabilidadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarContabilidadCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarContabilidadDelegate, new object[] {
                        nombre_contable,
                        anio,
                        mes}, this.onEndInsertarContabilidadDelegate, this.onInsertarContabilidadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarEgreso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarEgreso(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarEgreso(string nombre_contable, int anio, int mes, int totalEgreso, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequestBody();
            inValue.Body.nombre_contable = nombre_contable;
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            inValue.Body.totalEgreso = totalEgreso;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarEgreso(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarEgreso(System.IAsyncResult result) {
            return base.Channel.EndInsertarEgreso(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarEgreso(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarEgreso(result);
            return retVal.Body.InsertarEgresoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarEgreso(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_contable = ((string)(inValues[0]));
            int anio = ((int)(inValues[1]));
            int mes = ((int)(inValues[2]));
            int totalEgreso = ((int)(inValues[3]));
            return this.BeginInsertarEgreso(nombre_contable, anio, mes, totalEgreso, callback, asyncState);
        }
        
        private object[] OnEndInsertarEgreso(System.IAsyncResult result) {
            bool retVal = this.EndInsertarEgreso(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarEgresoCompleted(object state) {
            if ((this.InsertarEgresoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarEgresoCompleted(this, new InsertarEgresoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarEgresoAsync(string nombre_contable, int anio, int mes, int totalEgreso) {
            this.InsertarEgresoAsync(nombre_contable, anio, mes, totalEgreso, null);
        }
        
        public void InsertarEgresoAsync(string nombre_contable, int anio, int mes, int totalEgreso, object userState) {
            if ((this.onBeginInsertarEgresoDelegate == null)) {
                this.onBeginInsertarEgresoDelegate = new BeginOperationDelegate(this.OnBeginInsertarEgreso);
            }
            if ((this.onEndInsertarEgresoDelegate == null)) {
                this.onEndInsertarEgresoDelegate = new EndOperationDelegate(this.OnEndInsertarEgreso);
            }
            if ((this.onInsertarEgresoCompletedDelegate == null)) {
                this.onInsertarEgresoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarEgresoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarEgresoDelegate, new object[] {
                        nombre_contable,
                        anio,
                        mes,
                        totalEgreso}, this.onEndInsertarEgresoDelegate, this.onInsertarEgresoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarGasto(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarGasto(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarGasto(string nombre_contable, int anio, int mes, int totalEgreso, string descripcion, string fechaexacta, int valor, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequestBody();
            inValue.Body.nombre_contable = nombre_contable;
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            inValue.Body.totalEgreso = totalEgreso;
            inValue.Body.descripcion = descripcion;
            inValue.Body.fechaexacta = fechaexacta;
            inValue.Body.valor = valor;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarGasto(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarGasto(System.IAsyncResult result) {
            return base.Channel.EndInsertarGasto(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarGasto(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarGasto(result);
            return retVal.Body.InsertarGastoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarGasto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_contable = ((string)(inValues[0]));
            int anio = ((int)(inValues[1]));
            int mes = ((int)(inValues[2]));
            int totalEgreso = ((int)(inValues[3]));
            string descripcion = ((string)(inValues[4]));
            string fechaexacta = ((string)(inValues[5]));
            int valor = ((int)(inValues[6]));
            return this.BeginInsertarGasto(nombre_contable, anio, mes, totalEgreso, descripcion, fechaexacta, valor, callback, asyncState);
        }
        
        private object[] OnEndInsertarGasto(System.IAsyncResult result) {
            bool retVal = this.EndInsertarGasto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarGastoCompleted(object state) {
            if ((this.InsertarGastoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarGastoCompleted(this, new InsertarGastoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarGastoAsync(string nombre_contable, int anio, int mes, int totalEgreso, string descripcion, string fechaexacta, int valor) {
            this.InsertarGastoAsync(nombre_contable, anio, mes, totalEgreso, descripcion, fechaexacta, valor, null);
        }
        
        public void InsertarGastoAsync(string nombre_contable, int anio, int mes, int totalEgreso, string descripcion, string fechaexacta, int valor, object userState) {
            if ((this.onBeginInsertarGastoDelegate == null)) {
                this.onBeginInsertarGastoDelegate = new BeginOperationDelegate(this.OnBeginInsertarGasto);
            }
            if ((this.onEndInsertarGastoDelegate == null)) {
                this.onEndInsertarGastoDelegate = new EndOperationDelegate(this.OnEndInsertarGasto);
            }
            if ((this.onInsertarGastoCompletedDelegate == null)) {
                this.onInsertarGastoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarGastoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarGastoDelegate, new object[] {
                        nombre_contable,
                        anio,
                        mes,
                        totalEgreso,
                        descripcion,
                        fechaexacta,
                        valor}, this.onEndInsertarGastoDelegate, this.onInsertarGastoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarMaterial(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarMaterial(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarMaterial(string material_enviado, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequestBody();
            inValue.Body.material_enviado = material_enviado;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarMaterial(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarMaterial(System.IAsyncResult result) {
            return base.Channel.EndInsertarMaterial(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarMaterial(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarMaterial(result);
            return retVal.Body.InsertarMaterialResult;
        }
        
        private System.IAsyncResult OnBeginInsertarMaterial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string material_enviado = ((string)(inValues[0]));
            return this.BeginInsertarMaterial(material_enviado, callback, asyncState);
        }
        
        private object[] OnEndInsertarMaterial(System.IAsyncResult result) {
            bool retVal = this.EndInsertarMaterial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarMaterialCompleted(object state) {
            if ((this.InsertarMaterialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarMaterialCompleted(this, new InsertarMaterialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarMaterialAsync(string material_enviado) {
            this.InsertarMaterialAsync(material_enviado, null);
        }
        
        public void InsertarMaterialAsync(string material_enviado, object userState) {
            if ((this.onBeginInsertarMaterialDelegate == null)) {
                this.onBeginInsertarMaterialDelegate = new BeginOperationDelegate(this.OnBeginInsertarMaterial);
            }
            if ((this.onEndInsertarMaterialDelegate == null)) {
                this.onEndInsertarMaterialDelegate = new EndOperationDelegate(this.OnEndInsertarMaterial);
            }
            if ((this.onInsertarMaterialCompletedDelegate == null)) {
                this.onInsertarMaterialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarMaterialCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarMaterialDelegate, new object[] {
                        material_enviado}, this.onEndInsertarMaterialDelegate, this.onInsertarMaterialCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarMaterialEnviado(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarMaterialEnviado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarMaterialEnviado(string cod_examen, string material_enviado, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.material_enviado = material_enviado;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarMaterialEnviado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarMaterialEnviado(System.IAsyncResult result) {
            return base.Channel.EndInsertarMaterialEnviado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarMaterialEnviado(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarMaterialEnviado(result);
            return retVal.Body.InsertarMaterialEnviadoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarMaterialEnviado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string material_enviado = ((string)(inValues[1]));
            return this.BeginInsertarMaterialEnviado(cod_examen, material_enviado, callback, asyncState);
        }
        
        private object[] OnEndInsertarMaterialEnviado(System.IAsyncResult result) {
            bool retVal = this.EndInsertarMaterialEnviado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarMaterialEnviadoCompleted(object state) {
            if ((this.InsertarMaterialEnviadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarMaterialEnviadoCompleted(this, new InsertarMaterialEnviadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarMaterialEnviadoAsync(string cod_examen, string material_enviado) {
            this.InsertarMaterialEnviadoAsync(cod_examen, material_enviado, null);
        }
        
        public void InsertarMaterialEnviadoAsync(string cod_examen, string material_enviado, object userState) {
            if ((this.onBeginInsertarMaterialEnviadoDelegate == null)) {
                this.onBeginInsertarMaterialEnviadoDelegate = new BeginOperationDelegate(this.OnBeginInsertarMaterialEnviado);
            }
            if ((this.onEndInsertarMaterialEnviadoDelegate == null)) {
                this.onEndInsertarMaterialEnviadoDelegate = new EndOperationDelegate(this.OnEndInsertarMaterialEnviado);
            }
            if ((this.onInsertarMaterialEnviadoCompletedDelegate == null)) {
                this.onInsertarMaterialEnviadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarMaterialEnviadoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarMaterialEnviadoDelegate, new object[] {
                        cod_examen,
                        material_enviado}, this.onEndInsertarMaterialEnviadoDelegate, this.onInsertarMaterialEnviadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarPaciente(BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarPaciente(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarPaciente(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequestBody();
            inValue.Body.DIU = DIU;
            inValue.Body.fur = fur;
            inValue.Body.fup = fup;
            inValue.Body.pnombre = pnombre;
            inValue.Body.snombre = snombre;
            inValue.Body.papellido = papellido;
            inValue.Body.sapellido = sapellido;
            inValue.Body.edad = edad;
            inValue.Body.anticonceptivos = anticonceptivos;
            inValue.Body.expediente = expediente;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarPaciente(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarPaciente(System.IAsyncResult result) {
            return base.Channel.EndInsertarPaciente(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarPaciente(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarPaciente(result);
            return retVal.Body.InsertarPacienteResult;
        }
        
        private System.IAsyncResult OnBeginInsertarPaciente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool DIU = ((bool)(inValues[0]));
            string fur = ((string)(inValues[1]));
            string fup = ((string)(inValues[2]));
            string pnombre = ((string)(inValues[3]));
            string snombre = ((string)(inValues[4]));
            string papellido = ((string)(inValues[5]));
            string sapellido = ((string)(inValues[6]));
            int edad = ((int)(inValues[7]));
            bool anticonceptivos = ((bool)(inValues[8]));
            string expediente = ((string)(inValues[9]));
            return this.BeginInsertarPaciente(DIU, fur, fup, pnombre, snombre, papellido, sapellido, edad, anticonceptivos, expediente, callback, asyncState);
        }
        
        private object[] OnEndInsertarPaciente(System.IAsyncResult result) {
            bool retVal = this.EndInsertarPaciente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarPacienteCompleted(object state) {
            if ((this.InsertarPacienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarPacienteCompleted(this, new InsertarPacienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarPacienteAsync(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente) {
            this.InsertarPacienteAsync(DIU, fur, fup, pnombre, snombre, papellido, sapellido, edad, anticonceptivos, expediente, null);
        }
        
        public void InsertarPacienteAsync(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente, object userState) {
            if ((this.onBeginInsertarPacienteDelegate == null)) {
                this.onBeginInsertarPacienteDelegate = new BeginOperationDelegate(this.OnBeginInsertarPaciente);
            }
            if ((this.onEndInsertarPacienteDelegate == null)) {
                this.onEndInsertarPacienteDelegate = new EndOperationDelegate(this.OnEndInsertarPaciente);
            }
            if ((this.onInsertarPacienteCompletedDelegate == null)) {
                this.onInsertarPacienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarPacienteCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarPacienteDelegate, new object[] {
                        DIU,
                        fur,
                        fup,
                        pnombre,
                        snombre,
                        papellido,
                        sapellido,
                        edad,
                        anticonceptivos,
                        expediente}, this.onEndInsertarPacienteDelegate, this.onInsertarPacienteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarBiopsia(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.fecha = fecha;
            inValue.Body.precio = precio;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.Id_paciente = Id_paciente;
            inValue.Body.id_medico = id_medico;
            inValue.Body.Nombre_Contable = Nombre_Contable;
            inValue.Body.anio_contable = anio_contable;
            inValue.Body.mes_contable = mes_contable;
            inValue.Body.usuario_empleado = usuario_empleado;
            inValue.Body.descripcion_macros = descripcion_macros;
            inValue.Body.descripcion_micros = descripcion_micros;
            inValue.Body.codificacion = codificacion;
            inValue.Body.fechaHoy = fechaHoy;
            inValue.Body.fechaHoySQL = fechaHoySQL;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarBiopsia(System.IAsyncResult result) {
            return base.Channel.EndInsertarBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarBiopsia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarBiopsia(result);
            return retVal.Body.InsertarBiopsiaResult;
        }
        
        private System.IAsyncResult OnBeginInsertarBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string fecha = ((string)(inValues[1]));
            int precio = ((int)(inValues[2]));
            string Diagnostico = ((string)(inValues[3]));
            string diagnostico_medico = ((string)(inValues[4]));
            int Id_paciente = ((int)(inValues[5]));
            int id_medico = ((int)(inValues[6]));
            string Nombre_Contable = ((string)(inValues[7]));
            int anio_contable = ((int)(inValues[8]));
            int mes_contable = ((int)(inValues[9]));
            string usuario_empleado = ((string)(inValues[10]));
            string descripcion_macros = ((string)(inValues[11]));
            string descripcion_micros = ((string)(inValues[12]));
            string codificacion = ((string)(inValues[13]));
            string fechaHoy = ((string)(inValues[14]));
            string fechaHoySQL = ((string)(inValues[15]));
            return this.BeginInsertarBiopsia(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, codificacion, fechaHoy, fechaHoySQL, callback, asyncState);
        }
        
        private object[] OnEndInsertarBiopsia(System.IAsyncResult result) {
            bool retVal = this.EndInsertarBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarBiopsiaCompleted(object state) {
            if ((this.InsertarBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarBiopsiaCompleted(this, new InsertarBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarBiopsiaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.InsertarBiopsiaAsync(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, codificacion, fechaHoy, fechaHoySQL, null);
        }
        
        public void InsertarBiopsiaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    object userState) {
            if ((this.onBeginInsertarBiopsiaDelegate == null)) {
                this.onBeginInsertarBiopsiaDelegate = new BeginOperationDelegate(this.OnBeginInsertarBiopsia);
            }
            if ((this.onEndInsertarBiopsiaDelegate == null)) {
                this.onEndInsertarBiopsiaDelegate = new EndOperationDelegate(this.OnEndInsertarBiopsia);
            }
            if ((this.onInsertarBiopsiaCompletedDelegate == null)) {
                this.onInsertarBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarBiopsiaDelegate, new object[] {
                        cod_examen,
                        fecha,
                        precio,
                        Diagnostico,
                        diagnostico_medico,
                        Id_paciente,
                        id_medico,
                        Nombre_Contable,
                        anio_contable,
                        mes_contable,
                        usuario_empleado,
                        descripcion_macros,
                        descripcion_micros,
                        codificacion,
                        fechaHoy,
                        fechaHoySQL}, this.onEndInsertarBiopsiaDelegate, this.onInsertarBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarCitologiaNoGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarCitologiaNoGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarCitologiaNoGinecologica(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.fecha = fecha;
            inValue.Body.precio = precio;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.Id_paciente = Id_paciente;
            inValue.Body.id_medico = id_medico;
            inValue.Body.Nombre_Contable = Nombre_Contable;
            inValue.Body.anio_contable = anio_contable;
            inValue.Body.mes_contable = mes_contable;
            inValue.Body.usuario_empleado = usuario_empleado;
            inValue.Body.descripcion_macros = descripcion_macros;
            inValue.Body.descripcion_micros = descripcion_micros;
            inValue.Body.comentario = comentario;
            inValue.Body.fechaHoy = fechaHoy;
            inValue.Body.fechaHoySQL = fechaHoySQL;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarCitologiaNoGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
            return base.Channel.EndInsertarCitologiaNoGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarCitologiaNoGinecologica(result);
            return retVal.Body.InsertarCitologiaNoGinecologicaResult;
        }
        
        private System.IAsyncResult OnBeginInsertarCitologiaNoGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string fecha = ((string)(inValues[1]));
            int precio = ((int)(inValues[2]));
            string Diagnostico = ((string)(inValues[3]));
            string diagnostico_medico = ((string)(inValues[4]));
            int Id_paciente = ((int)(inValues[5]));
            int id_medico = ((int)(inValues[6]));
            string Nombre_Contable = ((string)(inValues[7]));
            int anio_contable = ((int)(inValues[8]));
            int mes_contable = ((int)(inValues[9]));
            string usuario_empleado = ((string)(inValues[10]));
            string descripcion_macros = ((string)(inValues[11]));
            string descripcion_micros = ((string)(inValues[12]));
            string comentario = ((string)(inValues[13]));
            string fechaHoy = ((string)(inValues[14]));
            string fechaHoySQL = ((string)(inValues[15]));
            return this.BeginInsertarCitologiaNoGinecologica(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, comentario, fechaHoy, fechaHoySQL, callback, asyncState);
        }
        
        private object[] OnEndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
            bool retVal = this.EndInsertarCitologiaNoGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarCitologiaNoGinecologicaCompleted(object state) {
            if ((this.InsertarCitologiaNoGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarCitologiaNoGinecologicaCompleted(this, new InsertarCitologiaNoGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarCitologiaNoGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.InsertarCitologiaNoGinecologicaAsync(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, comentario, fechaHoy, fechaHoySQL, null);
        }
        
        public void InsertarCitologiaNoGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    object userState) {
            if ((this.onBeginInsertarCitologiaNoGinecologicaDelegate == null)) {
                this.onBeginInsertarCitologiaNoGinecologicaDelegate = new BeginOperationDelegate(this.OnBeginInsertarCitologiaNoGinecologica);
            }
            if ((this.onEndInsertarCitologiaNoGinecologicaDelegate == null)) {
                this.onEndInsertarCitologiaNoGinecologicaDelegate = new EndOperationDelegate(this.OnEndInsertarCitologiaNoGinecologica);
            }
            if ((this.onInsertarCitologiaNoGinecologicaCompletedDelegate == null)) {
                this.onInsertarCitologiaNoGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarCitologiaNoGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarCitologiaNoGinecologicaDelegate, new object[] {
                        cod_examen,
                        fecha,
                        precio,
                        Diagnostico,
                        diagnostico_medico,
                        Id_paciente,
                        id_medico,
                        Nombre_Contable,
                        anio_contable,
                        mes_contable,
                        usuario_empleado,
                        descripcion_macros,
                        descripcion_micros,
                        comentario,
                        fechaHoy,
                        fechaHoySQL}, this.onEndInsertarCitologiaNoGinecologicaDelegate, this.onInsertarCitologiaNoGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarCitologiaGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarCitologiaGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarCitologiaGinecologica(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.fecha = fecha;
            inValue.Body.precio = precio;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.Id_paciente = Id_paciente;
            inValue.Body.id_medico = id_medico;
            inValue.Body.Nombre_Contable = Nombre_Contable;
            inValue.Body.anio_contable = anio_contable;
            inValue.Body.mes_contable = mes_contable;
            inValue.Body.usuario_empleado = usuario_empleado;
            inValue.Body.comentario = comentario;
            inValue.Body.inflamacion = inflamacion;
            inValue.Body.calidadFrotis_causa = calidadFrotis_causa;
            inValue.Body.calidadFrotisAdecuado = calidadFrotisAdecuado;
            inValue.Body.anticonceptivos = anticonceptivos;
            inValue.Body.candida_sp = candida_sp;
            inValue.Body.gardnerela = gardnerela;
            inValue.Body.vaginosis = vaginosis;
            inValue.Body.herpes = herpes;
            inValue.Body.tricomonas = tricomonas;
            inValue.Body.otroAgenteInfeccioso = otroAgenteInfeccioso;
            inValue.Body.evaluacionHormonal_basales = evaluacionHormonal_basales;
            inValue.Body.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            inValue.Body.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            inValue.Body.Colposcopia = Colposcopia;
            inValue.Body.repetir = repetir;
            inValue.Body.recomendaciones_otra = recomendaciones_otra;
            inValue.Body.recomendaciones_biopsia = recomendaciones_biopsia;
            inValue.Body.recomendaciones_tratamientos = recomendaciones_tratamientos;
            inValue.Body.NIC_I = NIC_I;
            inValue.Body.NIC_II = NIC_II;
            inValue.Body.NIC_III = NIC_III;
            inValue.Body.origen_muestra = origen_muestra;
            inValue.Body.negativo = negativo;
            inValue.Body.VPH = VPH;
            inValue.Body.glandular = glandular;
            inValue.Body.escamoza = escamoza;
            inValue.Body.adenocarcinomana = adenocarcinomana;
            inValue.Body.carcinomana_celula = carcinomana_celula;
            inValue.Body.celula_atipica = celula_atipica;
            inValue.Body.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            inValue.Body.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
            inValue.Body.fechaHoy = fechaHoy;
            inValue.Body.fechaHoySQL = fechaHoySQL;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarCitologiaGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarCitologiaGinecologica(System.IAsyncResult result) {
            return base.Channel.EndInsertarCitologiaGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarCitologiaGinecologica(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarCitologiaGinecologica(result);
            return retVal.Body.InsertarCitologiaGinecologicaResult;
        }
        
        private System.IAsyncResult OnBeginInsertarCitologiaGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string fecha = ((string)(inValues[1]));
            int precio = ((int)(inValues[2]));
            string Diagnostico = ((string)(inValues[3]));
            string diagnostico_medico = ((string)(inValues[4]));
            int Id_paciente = ((int)(inValues[5]));
            int id_medico = ((int)(inValues[6]));
            string Nombre_Contable = ((string)(inValues[7]));
            int anio_contable = ((int)(inValues[8]));
            int mes_contable = ((int)(inValues[9]));
            string usuario_empleado = ((string)(inValues[10]));
            string comentario = ((string)(inValues[11]));
            string inflamacion = ((string)(inValues[12]));
            string calidadFrotis_causa = ((string)(inValues[13]));
            bool calidadFrotisAdecuado = ((bool)(inValues[14]));
            bool anticonceptivos = ((bool)(inValues[15]));
            bool candida_sp = ((bool)(inValues[16]));
            bool gardnerela = ((bool)(inValues[17]));
            bool vaginosis = ((bool)(inValues[18]));
            bool herpes = ((bool)(inValues[19]));
            bool tricomonas = ((bool)(inValues[20]));
            string otroAgenteInfeccioso = ((string)(inValues[21]));
            int evaluacionHormonal_basales = ((int)(inValues[22]));
            int evaluacionhormonal_intermedias = ((int)(inValues[23]));
            int evaluacionhormonal_superficiales = ((int)(inValues[24]));
            bool Colposcopia = ((bool)(inValues[25]));
            int repetir = ((int)(inValues[26]));
            string recomendaciones_otra = ((string)(inValues[27]));
            bool recomendaciones_biopsia = ((bool)(inValues[28]));
            bool recomendaciones_tratamientos = ((bool)(inValues[29]));
            bool NIC_I = ((bool)(inValues[30]));
            bool NIC_II = ((bool)(inValues[31]));
            bool NIC_III = ((bool)(inValues[32]));
            string origen_muestra = ((string)(inValues[33]));
            bool negativo = ((bool)(inValues[34]));
            bool VPH = ((bool)(inValues[35]));
            bool glandular = ((bool)(inValues[36]));
            bool escamoza = ((bool)(inValues[37]));
            bool adenocarcinomana = ((bool)(inValues[38]));
            bool carcinomana_celula = ((bool)(inValues[39]));
            bool celula_atipica = ((bool)(inValues[40]));
            bool lesion_escamosa_AltoGrado = ((bool)(inValues[41]));
            bool lesion_escamosa_BajoGrado = ((bool)(inValues[42]));
            string fechaHoy = ((string)(inValues[43]));
            string fechaHoySQL = ((string)(inValues[44]));
            return this.BeginInsertarCitologiaGinecologica(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, anticonceptivos, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamoza, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, fechaHoy, fechaHoySQL, callback, asyncState);
        }
        
        private object[] OnEndInsertarCitologiaGinecologica(System.IAsyncResult result) {
            bool retVal = this.EndInsertarCitologiaGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarCitologiaGinecologicaCompleted(object state) {
            if ((this.InsertarCitologiaGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarCitologiaGinecologicaCompleted(this, new InsertarCitologiaGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarCitologiaGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.InsertarCitologiaGinecologicaAsync(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, anticonceptivos, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamoza, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, fechaHoy, fechaHoySQL, null);
        }
        
        public void InsertarCitologiaGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    object userState) {
            if ((this.onBeginInsertarCitologiaGinecologicaDelegate == null)) {
                this.onBeginInsertarCitologiaGinecologicaDelegate = new BeginOperationDelegate(this.OnBeginInsertarCitologiaGinecologica);
            }
            if ((this.onEndInsertarCitologiaGinecologicaDelegate == null)) {
                this.onEndInsertarCitologiaGinecologicaDelegate = new EndOperationDelegate(this.OnEndInsertarCitologiaGinecologica);
            }
            if ((this.onInsertarCitologiaGinecologicaCompletedDelegate == null)) {
                this.onInsertarCitologiaGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarCitologiaGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarCitologiaGinecologicaDelegate, new object[] {
                        cod_examen,
                        fecha,
                        precio,
                        Diagnostico,
                        diagnostico_medico,
                        Id_paciente,
                        id_medico,
                        Nombre_Contable,
                        anio_contable,
                        mes_contable,
                        usuario_empleado,
                        comentario,
                        inflamacion,
                        calidadFrotis_causa,
                        calidadFrotisAdecuado,
                        anticonceptivos,
                        candida_sp,
                        gardnerela,
                        vaginosis,
                        herpes,
                        tricomonas,
                        otroAgenteInfeccioso,
                        evaluacionHormonal_basales,
                        evaluacionhormonal_intermedias,
                        evaluacionhormonal_superficiales,
                        Colposcopia,
                        repetir,
                        recomendaciones_otra,
                        recomendaciones_biopsia,
                        recomendaciones_tratamientos,
                        NIC_I,
                        NIC_II,
                        NIC_III,
                        origen_muestra,
                        negativo,
                        VPH,
                        glandular,
                        escamoza,
                        adenocarcinomana,
                        carcinomana_celula,
                        celula_atipica,
                        lesion_escamosa_AltoGrado,
                        lesion_escamosa_BajoGrado,
                        fechaHoy,
                        fechaHoySQL}, this.onEndInsertarCitologiaGinecologicaDelegate, this.onInsertarCitologiaGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetIDdeMedico(BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIDdeMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIDdeMedico(string nombre_Medico, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequestBody();
            inValue.Body.nombre_Medico = nombre_Medico;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetIDdeMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetIDdeMedico(System.IAsyncResult result) {
            return base.Channel.EndgetIDdeMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndgetIDdeMedico(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetIDdeMedico(result);
            return retVal.Body.getIDdeMedicoResult;
        }
        
        private System.IAsyncResult OnBegingetIDdeMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_Medico = ((string)(inValues[0]));
            return this.BegingetIDdeMedico(nombre_Medico, callback, asyncState);
        }
        
        private object[] OnEndgetIDdeMedico(System.IAsyncResult result) {
            int retVal = this.EndgetIDdeMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIDdeMedicoCompleted(object state) {
            if ((this.getIDdeMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIDdeMedicoCompleted(this, new getIDdeMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIDdeMedicoAsync(string nombre_Medico) {
            this.getIDdeMedicoAsync(nombre_Medico, null);
        }
        
        public void getIDdeMedicoAsync(string nombre_Medico, object userState) {
            if ((this.onBegingetIDdeMedicoDelegate == null)) {
                this.onBegingetIDdeMedicoDelegate = new BeginOperationDelegate(this.OnBegingetIDdeMedico);
            }
            if ((this.onEndgetIDdeMedicoDelegate == null)) {
                this.onEndgetIDdeMedicoDelegate = new EndOperationDelegate(this.OnEndgetIDdeMedico);
            }
            if ((this.ongetIDdeMedicoCompletedDelegate == null)) {
                this.ongetIDdeMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIDdeMedicoCompleted);
            }
            base.InvokeAsync(this.onBegingetIDdeMedicoDelegate, new object[] {
                        nombre_Medico}, this.onEndgetIDdeMedicoDelegate, this.ongetIDdeMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetIDdePaciente(BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIDdePaciente(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIDdePaciente(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequestBody();
            inValue.Body.nombre_Paciente = nombre_Paciente;
            inValue.Body.s_nombre_Paciente = s_nombre_Paciente;
            inValue.Body.apellido_paciente = apellido_paciente;
            inValue.Body.s_apellido_paciente = s_apellido_paciente;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetIDdePaciente(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetIDdePaciente(System.IAsyncResult result) {
            return base.Channel.EndgetIDdePaciente(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndgetIDdePaciente(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetIDdePaciente(result);
            return retVal.Body.getIDdePacienteResult;
        }
        
        private System.IAsyncResult OnBegingetIDdePaciente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_Paciente = ((string)(inValues[0]));
            string s_nombre_Paciente = ((string)(inValues[1]));
            string apellido_paciente = ((string)(inValues[2]));
            string s_apellido_paciente = ((string)(inValues[3]));
            return this.BegingetIDdePaciente(nombre_Paciente, s_nombre_Paciente, apellido_paciente, s_apellido_paciente, callback, asyncState);
        }
        
        private object[] OnEndgetIDdePaciente(System.IAsyncResult result) {
            int retVal = this.EndgetIDdePaciente(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIDdePacienteCompleted(object state) {
            if ((this.getIDdePacienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIDdePacienteCompleted(this, new getIDdePacienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIDdePacienteAsync(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente) {
            this.getIDdePacienteAsync(nombre_Paciente, s_nombre_Paciente, apellido_paciente, s_apellido_paciente, null);
        }
        
        public void getIDdePacienteAsync(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente, object userState) {
            if ((this.onBegingetIDdePacienteDelegate == null)) {
                this.onBegingetIDdePacienteDelegate = new BeginOperationDelegate(this.OnBegingetIDdePaciente);
            }
            if ((this.onEndgetIDdePacienteDelegate == null)) {
                this.onEndgetIDdePacienteDelegate = new EndOperationDelegate(this.OnEndgetIDdePaciente);
            }
            if ((this.ongetIDdePacienteCompletedDelegate == null)) {
                this.ongetIDdePacienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIDdePacienteCompleted);
            }
            base.InvokeAsync(this.onBegingetIDdePacienteDelegate, new object[] {
                        nombre_Paciente,
                        s_nombre_Paciente,
                        apellido_paciente,
                        s_apellido_paciente}, this.onEndgetIDdePacienteDelegate, this.ongetIDdePacienteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetPaciente(BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetPaciente(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetPaciente(int Id_paciente, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequestBody();
            inValue.Body.Id_paciente = Id_paciente;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetPaciente(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetPaciente(System.IAsyncResult result) {
            return base.Channel.EndgetPaciente(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetPaciente(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetPaciente(result);
            return retVal.Body.getPacienteResult;
        }
        
        private System.IAsyncResult OnBegingetPaciente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id_paciente = ((int)(inValues[0]));
            return this.BegingetPaciente(Id_paciente, callback, asyncState);
        }
        
        private object[] OnEndgetPaciente(System.IAsyncResult result) {
            string retVal = this.EndgetPaciente(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetPacienteCompleted(object state) {
            if ((this.getPacienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getPacienteCompleted(this, new getPacienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getPacienteAsync(int Id_paciente) {
            this.getPacienteAsync(Id_paciente, null);
        }
        
        public void getPacienteAsync(int Id_paciente, object userState) {
            if ((this.onBegingetPacienteDelegate == null)) {
                this.onBegingetPacienteDelegate = new BeginOperationDelegate(this.OnBegingetPaciente);
            }
            if ((this.onEndgetPacienteDelegate == null)) {
                this.onEndgetPacienteDelegate = new EndOperationDelegate(this.OnEndgetPaciente);
            }
            if ((this.ongetPacienteCompletedDelegate == null)) {
                this.ongetPacienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetPacienteCompleted);
            }
            base.InvokeAsync(this.onBegingetPacienteDelegate, new object[] {
                        Id_paciente}, this.onEndgetPacienteDelegate, this.ongetPacienteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetExamen(BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetExamen(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetExamen(string codigo_Examen, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequestBody();
            inValue.Body.codigo_Examen = codigo_Examen;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetExamen(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetExamen(System.IAsyncResult result) {
            return base.Channel.EndgetExamen(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetExamen(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetExamen(result);
            return retVal.Body.getExamenResult;
        }
        
        private System.IAsyncResult OnBegingetExamen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codigo_Examen = ((string)(inValues[0]));
            return this.BegingetExamen(codigo_Examen, callback, asyncState);
        }
        
        private object[] OnEndgetExamen(System.IAsyncResult result) {
            string retVal = this.EndgetExamen(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetExamenCompleted(object state) {
            if ((this.getExamenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getExamenCompleted(this, new getExamenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getExamenAsync(string codigo_Examen) {
            this.getExamenAsync(codigo_Examen, null);
        }
        
        public void getExamenAsync(string codigo_Examen, object userState) {
            if ((this.onBegingetExamenDelegate == null)) {
                this.onBegingetExamenDelegate = new BeginOperationDelegate(this.OnBegingetExamen);
            }
            if ((this.onEndgetExamenDelegate == null)) {
                this.onEndgetExamenDelegate = new EndOperationDelegate(this.OnEndgetExamen);
            }
            if ((this.ongetExamenCompletedDelegate == null)) {
                this.ongetExamenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetExamenCompleted);
            }
            base.InvokeAsync(this.onBegingetExamenDelegate, new object[] {
                        codigo_Examen}, this.onEndgetExamenDelegate, this.ongetExamenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMedico(BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMedico(int id_medico, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequestBody();
            inValue.Body.id_medico = id_medico;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMedico(System.IAsyncResult result) {
            return base.Channel.EndgetMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMedico(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMedico(result);
            return retVal.Body.getMedicoResult;
        }
        
        private System.IAsyncResult OnBegingetMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_medico = ((int)(inValues[0]));
            return this.BegingetMedico(id_medico, callback, asyncState);
        }
        
        private object[] OnEndgetMedico(System.IAsyncResult result) {
            string retVal = this.EndgetMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMedicoCompleted(object state) {
            if ((this.getMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMedicoCompleted(this, new getMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMedicoAsync(int id_medico) {
            this.getMedicoAsync(id_medico, null);
        }
        
        public void getMedicoAsync(int id_medico, object userState) {
            if ((this.onBegingetMedicoDelegate == null)) {
                this.onBegingetMedicoDelegate = new BeginOperationDelegate(this.OnBegingetMedico);
            }
            if ((this.onEndgetMedicoDelegate == null)) {
                this.onEndgetMedicoDelegate = new EndOperationDelegate(this.OnEndgetMedico);
            }
            if ((this.ongetMedicoCompletedDelegate == null)) {
                this.ongetMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMedicoCompleted);
            }
            base.InvokeAsync(this.onBegingetMedicoDelegate, new object[] {
                        id_medico}, this.onEndgetMedicoDelegate, this.ongetMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEmpleado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEmpleado(string usuario, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequestBody();
            inValue.Body.usuario = usuario;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetEmpleado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetEmpleado(System.IAsyncResult result) {
            return base.Channel.EndgetEmpleado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetEmpleado(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetEmpleado(result);
            return retVal.Body.getEmpleadoResult;
        }
        
        private System.IAsyncResult OnBegingetEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            return this.BegingetEmpleado(usuario, callback, asyncState);
        }
        
        private object[] OnEndgetEmpleado(System.IAsyncResult result) {
            string retVal = this.EndgetEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEmpleadoCompleted(object state) {
            if ((this.getEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEmpleadoCompleted(this, new getEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEmpleadoAsync(string usuario) {
            this.getEmpleadoAsync(usuario, null);
        }
        
        public void getEmpleadoAsync(string usuario, object userState) {
            if ((this.onBegingetEmpleadoDelegate == null)) {
                this.onBegingetEmpleadoDelegate = new BeginOperationDelegate(this.OnBegingetEmpleado);
            }
            if ((this.onEndgetEmpleadoDelegate == null)) {
                this.onEndgetEmpleadoDelegate = new EndOperationDelegate(this.OnEndgetEmpleado);
            }
            if ((this.ongetEmpleadoCompletedDelegate == null)) {
                this.ongetEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBegingetEmpleadoDelegate, new object[] {
                        usuario}, this.onEndgetEmpleadoDelegate, this.ongetEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetEmpleados(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEmpleados(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEmpleados(System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequestBody();
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetEmpleados(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetEmpleados(System.IAsyncResult result) {
            return base.Channel.EndgetEmpleados(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetEmpleados(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetEmpleados(result);
            return retVal.Body.getEmpleadosResult;
        }
        
        private System.IAsyncResult OnBegingetEmpleados(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetEmpleados(callback, asyncState);
        }
        
        private object[] OnEndgetEmpleados(System.IAsyncResult result) {
            string retVal = this.EndgetEmpleados(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEmpleadosCompleted(object state) {
            if ((this.getEmpleadosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEmpleadosCompleted(this, new getEmpleadosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEmpleadosAsync() {
            this.getEmpleadosAsync(null);
        }
        
        public void getEmpleadosAsync(object userState) {
            if ((this.onBegingetEmpleadosDelegate == null)) {
                this.onBegingetEmpleadosDelegate = new BeginOperationDelegate(this.OnBegingetEmpleados);
            }
            if ((this.onEndgetEmpleadosDelegate == null)) {
                this.onEndgetEmpleadosDelegate = new EndOperationDelegate(this.OnEndgetEmpleados);
            }
            if ((this.ongetEmpleadosCompletedDelegate == null)) {
                this.ongetEmpleadosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEmpleadosCompleted);
            }
            base.InvokeAsync(this.onBegingetEmpleadosDelegate, null, this.onEndgetEmpleadosDelegate, this.ongetEmpleadosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginActualizarCitologia(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarCitologia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarCitologia(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.comentario = comentario;
            inValue.Body.inflamacion = inflamacion;
            inValue.Body.calidadFrotis_causa = calidadFrotis_causa;
            inValue.Body.calidadFrotisAdecuado = calidadFrotisAdecuado;
            inValue.Body.candida_sp = candida_sp;
            inValue.Body.gardnerela = gardnerela;
            inValue.Body.vaginosis = vaginosis;
            inValue.Body.herpes = herpes;
            inValue.Body.tricomonas = tricomonas;
            inValue.Body.otroAgenteInfeccioso = otroAgenteInfeccioso;
            inValue.Body.evaluacionHormonal_basales = evaluacionHormonal_basales;
            inValue.Body.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            inValue.Body.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            inValue.Body.Colposcopia = Colposcopia;
            inValue.Body.repetir = repetir;
            inValue.Body.recomendaciones_otra = recomendaciones_otra;
            inValue.Body.recomendaciones_biopsia = recomendaciones_biopsia;
            inValue.Body.recomendaciones_tratamientos = recomendaciones_tratamientos;
            inValue.Body.NIC_I = NIC_I;
            inValue.Body.NIC_II = NIC_II;
            inValue.Body.NIC_III = NIC_III;
            inValue.Body.origen_muestra = origen_muestra;
            inValue.Body.negativo = negativo;
            inValue.Body.VPH = VPH;
            inValue.Body.glandular = glandular;
            inValue.Body.escamosa = escamosa;
            inValue.Body.adenocarcinomana = adenocarcinomana;
            inValue.Body.carcinomana_celula = carcinomana_celula;
            inValue.Body.celula_atipica = celula_atipica;
            inValue.Body.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            inValue.Body.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginActualizarCitologia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndActualizarCitologia(System.IAsyncResult result) {
            return base.Channel.EndActualizarCitologia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarCitologia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndActualizarCitologia(result);
            return retVal.Body.ActualizarCitologiaResult;
        }
        
        private System.IAsyncResult OnBeginActualizarCitologia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string Diagnostico = ((string)(inValues[1]));
            string comentario = ((string)(inValues[2]));
            string inflamacion = ((string)(inValues[3]));
            string calidadFrotis_causa = ((string)(inValues[4]));
            bool calidadFrotisAdecuado = ((bool)(inValues[5]));
            bool candida_sp = ((bool)(inValues[6]));
            bool gardnerela = ((bool)(inValues[7]));
            bool vaginosis = ((bool)(inValues[8]));
            bool herpes = ((bool)(inValues[9]));
            bool tricomonas = ((bool)(inValues[10]));
            string otroAgenteInfeccioso = ((string)(inValues[11]));
            int evaluacionHormonal_basales = ((int)(inValues[12]));
            int evaluacionhormonal_intermedias = ((int)(inValues[13]));
            int evaluacionhormonal_superficiales = ((int)(inValues[14]));
            bool Colposcopia = ((bool)(inValues[15]));
            int repetir = ((int)(inValues[16]));
            string recomendaciones_otra = ((string)(inValues[17]));
            bool recomendaciones_biopsia = ((bool)(inValues[18]));
            bool recomendaciones_tratamientos = ((bool)(inValues[19]));
            bool NIC_I = ((bool)(inValues[20]));
            bool NIC_II = ((bool)(inValues[21]));
            bool NIC_III = ((bool)(inValues[22]));
            string origen_muestra = ((string)(inValues[23]));
            bool negativo = ((bool)(inValues[24]));
            bool VPH = ((bool)(inValues[25]));
            bool glandular = ((bool)(inValues[26]));
            bool escamosa = ((bool)(inValues[27]));
            bool adenocarcinomana = ((bool)(inValues[28]));
            bool carcinomana_celula = ((bool)(inValues[29]));
            bool celula_atipica = ((bool)(inValues[30]));
            bool lesion_escamosa_AltoGrado = ((bool)(inValues[31]));
            bool lesion_escamosa_BajoGrado = ((bool)(inValues[32]));
            return this.BeginActualizarCitologia(cod_examen, Diagnostico, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamosa, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, callback, asyncState);
        }
        
        private object[] OnEndActualizarCitologia(System.IAsyncResult result) {
            bool retVal = this.EndActualizarCitologia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarCitologiaCompleted(object state) {
            if ((this.ActualizarCitologiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarCitologiaCompleted(this, new ActualizarCitologiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarCitologiaAsync(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado) {
            this.ActualizarCitologiaAsync(cod_examen, Diagnostico, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamosa, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, null);
        }
        
        public void ActualizarCitologiaAsync(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    object userState) {
            if ((this.onBeginActualizarCitologiaDelegate == null)) {
                this.onBeginActualizarCitologiaDelegate = new BeginOperationDelegate(this.OnBeginActualizarCitologia);
            }
            if ((this.onEndActualizarCitologiaDelegate == null)) {
                this.onEndActualizarCitologiaDelegate = new EndOperationDelegate(this.OnEndActualizarCitologia);
            }
            if ((this.onActualizarCitologiaCompletedDelegate == null)) {
                this.onActualizarCitologiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarCitologiaCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarCitologiaDelegate, new object[] {
                        cod_examen,
                        Diagnostico,
                        comentario,
                        inflamacion,
                        calidadFrotis_causa,
                        calidadFrotisAdecuado,
                        candida_sp,
                        gardnerela,
                        vaginosis,
                        herpes,
                        tricomonas,
                        otroAgenteInfeccioso,
                        evaluacionHormonal_basales,
                        evaluacionhormonal_intermedias,
                        evaluacionhormonal_superficiales,
                        Colposcopia,
                        repetir,
                        recomendaciones_otra,
                        recomendaciones_biopsia,
                        recomendaciones_tratamientos,
                        NIC_I,
                        NIC_II,
                        NIC_III,
                        origen_muestra,
                        negativo,
                        VPH,
                        glandular,
                        escamosa,
                        adenocarcinomana,
                        carcinomana_celula,
                        celula_atipica,
                        lesion_escamosa_AltoGrado,
                        lesion_escamosa_BajoGrado}, this.onEndActualizarCitologiaDelegate, this.onActualizarCitologiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginActualizarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarBiopsia(string cod_examen, string macroscopica, string microscopica, string codificacion, string diagnostico, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.macroscopica = macroscopica;
            inValue.Body.microscopica = microscopica;
            inValue.Body.codificacion = codificacion;
            inValue.Body.diagnostico = diagnostico;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginActualizarBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndActualizarBiopsia(System.IAsyncResult result) {
            return base.Channel.EndActualizarBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarBiopsia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndActualizarBiopsia(result);
            return retVal.Body.ActualizarBiopsiaResult;
        }
        
        private System.IAsyncResult OnBeginActualizarBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string macroscopica = ((string)(inValues[1]));
            string microscopica = ((string)(inValues[2]));
            string codificacion = ((string)(inValues[3]));
            string diagnostico = ((string)(inValues[4]));
            return this.BeginActualizarBiopsia(cod_examen, macroscopica, microscopica, codificacion, diagnostico, callback, asyncState);
        }
        
        private object[] OnEndActualizarBiopsia(System.IAsyncResult result) {
            bool retVal = this.EndActualizarBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarBiopsiaCompleted(object state) {
            if ((this.ActualizarBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarBiopsiaCompleted(this, new ActualizarBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarBiopsiaAsync(string cod_examen, string macroscopica, string microscopica, string codificacion, string diagnostico) {
            this.ActualizarBiopsiaAsync(cod_examen, macroscopica, microscopica, codificacion, diagnostico, null);
        }
        
        public void ActualizarBiopsiaAsync(string cod_examen, string macroscopica, string microscopica, string codificacion, string diagnostico, object userState) {
            if ((this.onBeginActualizarBiopsiaDelegate == null)) {
                this.onBeginActualizarBiopsiaDelegate = new BeginOperationDelegate(this.OnBeginActualizarBiopsia);
            }
            if ((this.onEndActualizarBiopsiaDelegate == null)) {
                this.onEndActualizarBiopsiaDelegate = new EndOperationDelegate(this.OnEndActualizarBiopsia);
            }
            if ((this.onActualizarBiopsiaCompletedDelegate == null)) {
                this.onActualizarBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarBiopsiaDelegate, new object[] {
                        cod_examen,
                        macroscopica,
                        microscopica,
                        codificacion,
                        diagnostico}, this.onEndActualizarBiopsiaDelegate, this.onActualizarBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginActualizarCitologiaLiquidos(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarCitologiaLiquidos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarCitologiaLiquidos(string cod_examen, string macroscopica, string microscopica, string diagnostico, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.macroscopica = macroscopica;
            inValue.Body.microscopica = microscopica;
            inValue.Body.diagnostico = diagnostico;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginActualizarCitologiaLiquidos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndActualizarCitologiaLiquidos(System.IAsyncResult result) {
            return base.Channel.EndActualizarCitologiaLiquidos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarCitologiaLiquidos(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndActualizarCitologiaLiquidos(result);
            return retVal.Body.ActualizarCitologiaLiquidosResult;
        }
        
        private System.IAsyncResult OnBeginActualizarCitologiaLiquidos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string macroscopica = ((string)(inValues[1]));
            string microscopica = ((string)(inValues[2]));
            string diagnostico = ((string)(inValues[3]));
            return this.BeginActualizarCitologiaLiquidos(cod_examen, macroscopica, microscopica, diagnostico, callback, asyncState);
        }
        
        private object[] OnEndActualizarCitologiaLiquidos(System.IAsyncResult result) {
            bool retVal = this.EndActualizarCitologiaLiquidos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarCitologiaLiquidosCompleted(object state) {
            if ((this.ActualizarCitologiaLiquidosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarCitologiaLiquidosCompleted(this, new ActualizarCitologiaLiquidosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarCitologiaLiquidosAsync(string cod_examen, string macroscopica, string microscopica, string diagnostico) {
            this.ActualizarCitologiaLiquidosAsync(cod_examen, macroscopica, microscopica, diagnostico, null);
        }
        
        public void ActualizarCitologiaLiquidosAsync(string cod_examen, string macroscopica, string microscopica, string diagnostico, object userState) {
            if ((this.onBeginActualizarCitologiaLiquidosDelegate == null)) {
                this.onBeginActualizarCitologiaLiquidosDelegate = new BeginOperationDelegate(this.OnBeginActualizarCitologiaLiquidos);
            }
            if ((this.onEndActualizarCitologiaLiquidosDelegate == null)) {
                this.onEndActualizarCitologiaLiquidosDelegate = new EndOperationDelegate(this.OnEndActualizarCitologiaLiquidos);
            }
            if ((this.onActualizarCitologiaLiquidosCompletedDelegate == null)) {
                this.onActualizarCitologiaLiquidosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarCitologiaLiquidosCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarCitologiaLiquidosDelegate, new object[] {
                        cod_examen,
                        macroscopica,
                        microscopica,
                        diagnostico}, this.onEndActualizarCitologiaLiquidosDelegate, this.onActualizarCitologiaLiquidosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginActualizarMedico(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarMedico(string nombre, string telefono, string celular, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequestBody();
            inValue.Body.nombre = nombre;
            inValue.Body.telefono = telefono;
            inValue.Body.celular = celular;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginActualizarMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndActualizarMedico(System.IAsyncResult result) {
            return base.Channel.EndActualizarMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarMedico(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndActualizarMedico(result);
            return retVal.Body.ActualizarMedicoResult;
        }
        
        private System.IAsyncResult OnBeginActualizarMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre = ((string)(inValues[0]));
            string telefono = ((string)(inValues[1]));
            string celular = ((string)(inValues[2]));
            return this.BeginActualizarMedico(nombre, telefono, celular, callback, asyncState);
        }
        
        private object[] OnEndActualizarMedico(System.IAsyncResult result) {
            bool retVal = this.EndActualizarMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarMedicoCompleted(object state) {
            if ((this.ActualizarMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarMedicoCompleted(this, new ActualizarMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarMedicoAsync(string nombre, string telefono, string celular) {
            this.ActualizarMedicoAsync(nombre, telefono, celular, null);
        }
        
        public void ActualizarMedicoAsync(string nombre, string telefono, string celular, object userState) {
            if ((this.onBeginActualizarMedicoDelegate == null)) {
                this.onBeginActualizarMedicoDelegate = new BeginOperationDelegate(this.OnBeginActualizarMedico);
            }
            if ((this.onEndActualizarMedicoDelegate == null)) {
                this.onEndActualizarMedicoDelegate = new EndOperationDelegate(this.OnEndActualizarMedico);
            }
            if ((this.onActualizarMedicoCompletedDelegate == null)) {
                this.onActualizarMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarMedicoCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarMedicoDelegate, new object[] {
                        nombre,
                        telefono,
                        celular}, this.onEndActualizarMedicoDelegate, this.onActualizarMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginBorrarEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarEmpleado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarEmpleado(string usuario, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequestBody();
            inValue.Body.usuario = usuario;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginBorrarEmpleado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndBorrarEmpleado(System.IAsyncResult result) {
            return base.Channel.EndBorrarEmpleado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarEmpleado(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndBorrarEmpleado(result);
            return retVal.Body.BorrarEmpleadoResult;
        }
        
        private System.IAsyncResult OnBeginBorrarEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            return this.BeginBorrarEmpleado(usuario, callback, asyncState);
        }
        
        private object[] OnEndBorrarEmpleado(System.IAsyncResult result) {
            bool retVal = this.EndBorrarEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarEmpleadoCompleted(object state) {
            if ((this.BorrarEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarEmpleadoCompleted(this, new BorrarEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarEmpleadoAsync(string usuario) {
            this.BorrarEmpleadoAsync(usuario, null);
        }
        
        public void BorrarEmpleadoAsync(string usuario, object userState) {
            if ((this.onBeginBorrarEmpleadoDelegate == null)) {
                this.onBeginBorrarEmpleadoDelegate = new BeginOperationDelegate(this.OnBeginBorrarEmpleado);
            }
            if ((this.onEndBorrarEmpleadoDelegate == null)) {
                this.onEndBorrarEmpleadoDelegate = new EndOperationDelegate(this.OnEndBorrarEmpleado);
            }
            if ((this.onBorrarEmpleadoCompletedDelegate == null)) {
                this.onBorrarEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarEmpleadoDelegate, new object[] {
                        usuario}, this.onEndBorrarEmpleadoDelegate, this.onBorrarEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginBorrarMaterial(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarMaterial(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarMaterial(string material, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequestBody();
            inValue.Body.material = material;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginBorrarMaterial(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndBorrarMaterial(System.IAsyncResult result) {
            return base.Channel.EndBorrarMaterial(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarMaterial(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndBorrarMaterial(result);
            return retVal.Body.BorrarMaterialResult;
        }
        
        private System.IAsyncResult OnBeginBorrarMaterial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string material = ((string)(inValues[0]));
            return this.BeginBorrarMaterial(material, callback, asyncState);
        }
        
        private object[] OnEndBorrarMaterial(System.IAsyncResult result) {
            bool retVal = this.EndBorrarMaterial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarMaterialCompleted(object state) {
            if ((this.BorrarMaterialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarMaterialCompleted(this, new BorrarMaterialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarMaterialAsync(string material) {
            this.BorrarMaterialAsync(material, null);
        }
        
        public void BorrarMaterialAsync(string material, object userState) {
            if ((this.onBeginBorrarMaterialDelegate == null)) {
                this.onBeginBorrarMaterialDelegate = new BeginOperationDelegate(this.OnBeginBorrarMaterial);
            }
            if ((this.onEndBorrarMaterialDelegate == null)) {
                this.onEndBorrarMaterialDelegate = new EndOperationDelegate(this.OnEndBorrarMaterial);
            }
            if ((this.onBorrarMaterialCompletedDelegate == null)) {
                this.onBorrarMaterialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarMaterialCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarMaterialDelegate, new object[] {
                        material}, this.onEndBorrarMaterialDelegate, this.onBorrarMaterialCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginesUsuarioValido(BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginesUsuarioValido(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginesUsuarioValido(string usuario, string contrasena, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequestBody();
            inValue.Body.usuario = usuario;
            inValue.Body.contrasena = contrasena;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginesUsuarioValido(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndesUsuarioValido(System.IAsyncResult result) {
            return base.Channel.EndesUsuarioValido(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndesUsuarioValido(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndesUsuarioValido(result);
            return retVal.Body.esUsuarioValidoResult;
        }
        
        private System.IAsyncResult OnBeginesUsuarioValido(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            string contrasena = ((string)(inValues[1]));
            return this.BeginesUsuarioValido(usuario, contrasena, callback, asyncState);
        }
        
        private object[] OnEndesUsuarioValido(System.IAsyncResult result) {
            bool retVal = this.EndesUsuarioValido(result);
            return new object[] {
                    retVal};
        }
        
        private void OnesUsuarioValidoCompleted(object state) {
            if ((this.esUsuarioValidoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.esUsuarioValidoCompleted(this, new esUsuarioValidoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void esUsuarioValidoAsync(string usuario, string contrasena) {
            this.esUsuarioValidoAsync(usuario, contrasena, null);
        }
        
        public void esUsuarioValidoAsync(string usuario, string contrasena, object userState) {
            if ((this.onBeginesUsuarioValidoDelegate == null)) {
                this.onBeginesUsuarioValidoDelegate = new BeginOperationDelegate(this.OnBeginesUsuarioValido);
            }
            if ((this.onEndesUsuarioValidoDelegate == null)) {
                this.onEndesUsuarioValidoDelegate = new EndOperationDelegate(this.OnEndesUsuarioValido);
            }
            if ((this.onesUsuarioValidoCompletedDelegate == null)) {
                this.onesUsuarioValidoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnesUsuarioValidoCompleted);
            }
            base.InvokeAsync(this.onBeginesUsuarioValidoDelegate, new object[] {
                        usuario,
                        contrasena}, this.onEndesUsuarioValidoDelegate, this.onesUsuarioValidoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetIngresosPorMes(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIngresosPorMes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIngresosPorMes(int Año, int Mes, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequestBody();
            inValue.Body.Año = Año;
            inValue.Body.Mes = Mes;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetIngresosPorMes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetIngresosPorMes(System.IAsyncResult result) {
            return base.Channel.EndgetIngresosPorMes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType EndgetIngresosPorMes(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetIngresosPorMes(result);
            return retVal.Body.getIngresosPorMesResult;
        }
        
        private System.IAsyncResult OnBegingetIngresosPorMes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Año = ((int)(inValues[0]));
            int Mes = ((int)(inValues[1]));
            return this.BegingetIngresosPorMes(Año, Mes, callback, asyncState);
        }
        
        private object[] OnEndgetIngresosPorMes(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType retVal = this.EndgetIngresosPorMes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIngresosPorMesCompleted(object state) {
            if ((this.getIngresosPorMesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIngresosPorMesCompleted(this, new getIngresosPorMesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIngresosPorMesAsync(int Año, int Mes) {
            this.getIngresosPorMesAsync(Año, Mes, null);
        }
        
        public void getIngresosPorMesAsync(int Año, int Mes, object userState) {
            if ((this.onBegingetIngresosPorMesDelegate == null)) {
                this.onBegingetIngresosPorMesDelegate = new BeginOperationDelegate(this.OnBegingetIngresosPorMes);
            }
            if ((this.onEndgetIngresosPorMesDelegate == null)) {
                this.onEndgetIngresosPorMesDelegate = new EndOperationDelegate(this.OnEndgetIngresosPorMes);
            }
            if ((this.ongetIngresosPorMesCompletedDelegate == null)) {
                this.ongetIngresosPorMesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIngresosPorMesCompleted);
            }
            base.InvokeAsync(this.onBegingetIngresosPorMesDelegate, new object[] {
                        Año,
                        Mes}, this.onEndgetIngresosPorMesDelegate, this.ongetIngresosPorMesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetEgresosPorMes(BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEgresosPorMes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetEgresosPorMes(int Anio, int Mes, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequestBody();
            inValue.Body.Anio = Anio;
            inValue.Body.Mes = Mes;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetEgresosPorMes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetEgresosPorMes(System.IAsyncResult result) {
            return base.Channel.EndgetEgresosPorMes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetEgresosPorMes(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetEgresosPorMes(result);
            return retVal.Body.getEgresosPorMesResult;
        }
        
        private System.IAsyncResult OnBegingetEgresosPorMes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Anio = ((int)(inValues[0]));
            int Mes = ((int)(inValues[1]));
            return this.BegingetEgresosPorMes(Anio, Mes, callback, asyncState);
        }
        
        private object[] OnEndgetEgresosPorMes(System.IAsyncResult result) {
            string retVal = this.EndgetEgresosPorMes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEgresosPorMesCompleted(object state) {
            if ((this.getEgresosPorMesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEgresosPorMesCompleted(this, new getEgresosPorMesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEgresosPorMesAsync(int Anio, int Mes) {
            this.getEgresosPorMesAsync(Anio, Mes, null);
        }
        
        public void getEgresosPorMesAsync(int Anio, int Mes, object userState) {
            if ((this.onBegingetEgresosPorMesDelegate == null)) {
                this.onBegingetEgresosPorMesDelegate = new BeginOperationDelegate(this.OnBegingetEgresosPorMes);
            }
            if ((this.onEndgetEgresosPorMesDelegate == null)) {
                this.onEndgetEgresosPorMesDelegate = new EndOperationDelegate(this.OnEndgetEgresosPorMes);
            }
            if ((this.ongetEgresosPorMesCompletedDelegate == null)) {
                this.ongetEgresosPorMesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEgresosPorMesCompleted);
            }
            base.InvokeAsync(this.onBegingetEgresosPorMesDelegate, new object[] {
                        Anio,
                        Mes}, this.onEndgetEgresosPorMesDelegate, this.ongetEgresosPorMesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetCitologiasGinecologicas(BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCitologiasGinecologicas(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetCitologiasGinecologicas(int Año, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequestBody();
            inValue.Body.Año = Año;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetCitologiasGinecologicas(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetCitologiasGinecologicas(System.IAsyncResult result) {
            return base.Channel.EndgetCitologiasGinecologicas(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType EndgetCitologiasGinecologicas(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetCitologiasGinecologicas(result);
            return retVal.Body.getCitologiasGinecologicasResult;
        }
        
        private System.IAsyncResult OnBegingetCitologiasGinecologicas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Año = ((int)(inValues[0]));
            return this.BegingetCitologiasGinecologicas(Año, callback, asyncState);
        }
        
        private object[] OnEndgetCitologiasGinecologicas(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType retVal = this.EndgetCitologiasGinecologicas(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCitologiasGinecologicasCompleted(object state) {
            if ((this.getCitologiasGinecologicasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCitologiasGinecologicasCompleted(this, new getCitologiasGinecologicasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCitologiasGinecologicasAsync(int Año) {
            this.getCitologiasGinecologicasAsync(Año, null);
        }
        
        public void getCitologiasGinecologicasAsync(int Año, object userState) {
            if ((this.onBegingetCitologiasGinecologicasDelegate == null)) {
                this.onBegingetCitologiasGinecologicasDelegate = new BeginOperationDelegate(this.OnBegingetCitologiasGinecologicas);
            }
            if ((this.onEndgetCitologiasGinecologicasDelegate == null)) {
                this.onEndgetCitologiasGinecologicasDelegate = new EndOperationDelegate(this.OnEndgetCitologiasGinecologicas);
            }
            if ((this.ongetCitologiasGinecologicasCompletedDelegate == null)) {
                this.ongetCitologiasGinecologicasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCitologiasGinecologicasCompleted);
            }
            base.InvokeAsync(this.onBegingetCitologiasGinecologicasDelegate, new object[] {
                        Año}, this.onEndgetCitologiasGinecologicasDelegate, this.ongetCitologiasGinecologicasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetBiopsias(BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetBiopsias(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetBiopsias(int Año, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequestBody();
            inValue.Body.Año = Año;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetBiopsias(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetBiopsias(System.IAsyncResult result) {
            return base.Channel.EndgetBiopsias(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType EndgetBiopsias(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetBiopsias(result);
            return retVal.Body.getBiopsiasResult;
        }
        
        private System.IAsyncResult OnBegingetBiopsias(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Año = ((int)(inValues[0]));
            return this.BegingetBiopsias(Año, callback, asyncState);
        }
        
        private object[] OnEndgetBiopsias(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType retVal = this.EndgetBiopsias(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetBiopsiasCompleted(object state) {
            if ((this.getBiopsiasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getBiopsiasCompleted(this, new getBiopsiasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getBiopsiasAsync(int Año) {
            this.getBiopsiasAsync(Año, null);
        }
        
        public void getBiopsiasAsync(int Año, object userState) {
            if ((this.onBegingetBiopsiasDelegate == null)) {
                this.onBegingetBiopsiasDelegate = new BeginOperationDelegate(this.OnBegingetBiopsias);
            }
            if ((this.onEndgetBiopsiasDelegate == null)) {
                this.onEndgetBiopsiasDelegate = new EndOperationDelegate(this.OnEndgetBiopsias);
            }
            if ((this.ongetBiopsiasCompletedDelegate == null)) {
                this.ongetBiopsiasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetBiopsiasCompleted);
            }
            base.InvokeAsync(this.onBegingetBiopsiasDelegate, new object[] {
                        Año}, this.onEndgetBiopsiasDelegate, this.ongetBiopsiasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetPacientes(BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetPacientes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetPacientes(System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequestBody();
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetPacientes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetPacientes(System.IAsyncResult result) {
            return base.Channel.EndgetPacientes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType EndgetPacientes(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetPacientes(result);
            return retVal.Body.getPacientesResult;
        }
        
        private System.IAsyncResult OnBegingetPacientes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetPacientes(callback, asyncState);
        }
        
        private object[] OnEndgetPacientes(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType retVal = this.EndgetPacientes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetPacientesCompleted(object state) {
            if ((this.getPacientesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getPacientesCompleted(this, new getPacientesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getPacientesAsync() {
            this.getPacientesAsync(null);
        }
        
        public void getPacientesAsync(object userState) {
            if ((this.onBegingetPacientesDelegate == null)) {
                this.onBegingetPacientesDelegate = new BeginOperationDelegate(this.OnBegingetPacientes);
            }
            if ((this.onEndgetPacientesDelegate == null)) {
                this.onEndgetPacientesDelegate = new EndOperationDelegate(this.OnEndgetPacientes);
            }
            if ((this.ongetPacientesCompletedDelegate == null)) {
                this.ongetPacientesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetPacientesCompleted);
            }
            base.InvokeAsync(this.onBegingetPacientesDelegate, null, this.onEndgetPacientesDelegate, this.ongetPacientesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMedicos(BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMedicos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMedicos(System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequestBody();
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMedicos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMedicos(System.IAsyncResult result) {
            return base.Channel.EndgetMedicos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType EndgetMedicos(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMedicos(result);
            return retVal.Body.getMedicosResult;
        }
        
        private System.IAsyncResult OnBegingetMedicos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetMedicos(callback, asyncState);
        }
        
        private object[] OnEndgetMedicos(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType retVal = this.EndgetMedicos(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMedicosCompleted(object state) {
            if ((this.getMedicosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMedicosCompleted(this, new getMedicosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMedicosAsync() {
            this.getMedicosAsync(null);
        }
        
        public void getMedicosAsync(object userState) {
            if ((this.onBegingetMedicosDelegate == null)) {
                this.onBegingetMedicosDelegate = new BeginOperationDelegate(this.OnBegingetMedicos);
            }
            if ((this.onEndgetMedicosDelegate == null)) {
                this.onEndgetMedicosDelegate = new EndOperationDelegate(this.OnEndgetMedicos);
            }
            if ((this.ongetMedicosCompletedDelegate == null)) {
                this.ongetMedicosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMedicosCompleted);
            }
            base.InvokeAsync(this.onBegingetMedicosDelegate, null, this.onEndgetMedicosDelegate, this.ongetMedicosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMaterialEnviado_Biopsia(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMaterialEnviado_Biopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMaterialEnviado_Biopsia(System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequestBody();
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMaterialEnviado_Biopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMaterialEnviado_Biopsia(System.IAsyncResult result) {
            return base.Channel.EndgetMaterialEnviado_Biopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType EndgetMaterialEnviado_Biopsia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMaterialEnviado_Biopsia(result);
            return retVal.Body.getMaterialEnviado_BiopsiaResult;
        }
        
        private System.IAsyncResult OnBegingetMaterialEnviado_Biopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetMaterialEnviado_Biopsia(callback, asyncState);
        }
        
        private object[] OnEndgetMaterialEnviado_Biopsia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.ArrayOfAnyType retVal = this.EndgetMaterialEnviado_Biopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMaterialEnviado_BiopsiaCompleted(object state) {
            if ((this.getMaterialEnviado_BiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMaterialEnviado_BiopsiaCompleted(this, new getMaterialEnviado_BiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMaterialEnviado_BiopsiaAsync() {
            this.getMaterialEnviado_BiopsiaAsync(null);
        }
        
        public void getMaterialEnviado_BiopsiaAsync(object userState) {
            if ((this.onBegingetMaterialEnviado_BiopsiaDelegate == null)) {
                this.onBegingetMaterialEnviado_BiopsiaDelegate = new BeginOperationDelegate(this.OnBegingetMaterialEnviado_Biopsia);
            }
            if ((this.onEndgetMaterialEnviado_BiopsiaDelegate == null)) {
                this.onEndgetMaterialEnviado_BiopsiaDelegate = new EndOperationDelegate(this.OnEndgetMaterialEnviado_Biopsia);
            }
            if ((this.ongetMaterialEnviado_BiopsiaCompletedDelegate == null)) {
                this.ongetMaterialEnviado_BiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMaterialEnviado_BiopsiaCompleted);
            }
            base.InvokeAsync(this.onBegingetMaterialEnviado_BiopsiaDelegate, null, this.onEndgetMaterialEnviado_BiopsiaDelegate, this.ongetMaterialEnviado_BiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMaterialEnviado_CitologiaNoGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMaterialEnviado_CitologiaNoGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMaterialEnviado_CitologiaNoGinecologica(System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequestBody();
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMaterialEnviado_CitologiaNoGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
            return base.Channel.EndgetMaterialEnviado_CitologiaNoGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMaterialEnviado_CitologiaNoGinecologica(result);
            return retVal.Body.getMaterialEnviado_CitologiaNoGinecologicaResult;
        }
        
        private System.IAsyncResult OnBegingetMaterialEnviado_CitologiaNoGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetMaterialEnviado_CitologiaNoGinecologica(callback, asyncState);
        }
        
        private object[] OnEndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
            string retVal = this.EndgetMaterialEnviado_CitologiaNoGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMaterialEnviado_CitologiaNoGinecologicaCompleted(object state) {
            if ((this.getMaterialEnviado_CitologiaNoGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMaterialEnviado_CitologiaNoGinecologicaCompleted(this, new getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMaterialEnviado_CitologiaNoGinecologicaAsync() {
            this.getMaterialEnviado_CitologiaNoGinecologicaAsync(null);
        }
        
        public void getMaterialEnviado_CitologiaNoGinecologicaAsync(object userState) {
            if ((this.onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate == null)) {
                this.onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate = new BeginOperationDelegate(this.OnBegingetMaterialEnviado_CitologiaNoGinecologica);
            }
            if ((this.onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate == null)) {
                this.onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate = new EndOperationDelegate(this.OnEndgetMaterialEnviado_CitologiaNoGinecologica);
            }
            if ((this.ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate == null)) {
                this.ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMaterialEnviado_CitologiaNoGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate, null, this.onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate, this.ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginconsultaMedicoBiopsias(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginconsultaMedicoBiopsias(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginconsultaMedicoBiopsias(int anio, int mes, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequestBody();
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginconsultaMedicoBiopsias(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndconsultaMedicoBiopsias(System.IAsyncResult result) {
            return base.Channel.EndconsultaMedicoBiopsias(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndconsultaMedicoBiopsias(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndconsultaMedicoBiopsias(result);
            return retVal.Body.consultaMedicoBiopsiasResult;
        }
        
        private System.IAsyncResult OnBeginconsultaMedicoBiopsias(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int anio = ((int)(inValues[0]));
            int mes = ((int)(inValues[1]));
            return this.BeginconsultaMedicoBiopsias(anio, mes, callback, asyncState);
        }
        
        private object[] OnEndconsultaMedicoBiopsias(System.IAsyncResult result) {
            string retVal = this.EndconsultaMedicoBiopsias(result);
            return new object[] {
                    retVal};
        }
        
        private void OnconsultaMedicoBiopsiasCompleted(object state) {
            if ((this.consultaMedicoBiopsiasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.consultaMedicoBiopsiasCompleted(this, new consultaMedicoBiopsiasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void consultaMedicoBiopsiasAsync(int anio, int mes) {
            this.consultaMedicoBiopsiasAsync(anio, mes, null);
        }
        
        public void consultaMedicoBiopsiasAsync(int anio, int mes, object userState) {
            if ((this.onBeginconsultaMedicoBiopsiasDelegate == null)) {
                this.onBeginconsultaMedicoBiopsiasDelegate = new BeginOperationDelegate(this.OnBeginconsultaMedicoBiopsias);
            }
            if ((this.onEndconsultaMedicoBiopsiasDelegate == null)) {
                this.onEndconsultaMedicoBiopsiasDelegate = new EndOperationDelegate(this.OnEndconsultaMedicoBiopsias);
            }
            if ((this.onconsultaMedicoBiopsiasCompletedDelegate == null)) {
                this.onconsultaMedicoBiopsiasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnconsultaMedicoBiopsiasCompleted);
            }
            base.InvokeAsync(this.onBeginconsultaMedicoBiopsiasDelegate, new object[] {
                        anio,
                        mes}, this.onEndconsultaMedicoBiopsiasDelegate, this.onconsultaMedicoBiopsiasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginconsultaMedicoCitologia(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginconsultaMedicoCitologia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginconsultaMedicoCitologia(int anio, int mes, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequestBody();
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginconsultaMedicoCitologia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndconsultaMedicoCitologia(System.IAsyncResult result) {
            return base.Channel.EndconsultaMedicoCitologia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndconsultaMedicoCitologia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndconsultaMedicoCitologia(result);
            return retVal.Body.consultaMedicoCitologiaResult;
        }
        
        private System.IAsyncResult OnBeginconsultaMedicoCitologia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int anio = ((int)(inValues[0]));
            int mes = ((int)(inValues[1]));
            return this.BeginconsultaMedicoCitologia(anio, mes, callback, asyncState);
        }
        
        private object[] OnEndconsultaMedicoCitologia(System.IAsyncResult result) {
            string retVal = this.EndconsultaMedicoCitologia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnconsultaMedicoCitologiaCompleted(object state) {
            if ((this.consultaMedicoCitologiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.consultaMedicoCitologiaCompleted(this, new consultaMedicoCitologiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void consultaMedicoCitologiaAsync(int anio, int mes) {
            this.consultaMedicoCitologiaAsync(anio, mes, null);
        }
        
        public void consultaMedicoCitologiaAsync(int anio, int mes, object userState) {
            if ((this.onBeginconsultaMedicoCitologiaDelegate == null)) {
                this.onBeginconsultaMedicoCitologiaDelegate = new BeginOperationDelegate(this.OnBeginconsultaMedicoCitologia);
            }
            if ((this.onEndconsultaMedicoCitologiaDelegate == null)) {
                this.onEndconsultaMedicoCitologiaDelegate = new EndOperationDelegate(this.OnEndconsultaMedicoCitologia);
            }
            if ((this.onconsultaMedicoCitologiaCompletedDelegate == null)) {
                this.onconsultaMedicoCitologiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnconsultaMedicoCitologiaCompleted);
            }
            base.InvokeAsync(this.onBeginconsultaMedicoCitologiaDelegate, new object[] {
                        anio,
                        mes}, this.onEndconsultaMedicoCitologiaDelegate, this.onconsultaMedicoCitologiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetAccesos(BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAccesos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetAccesos(string usuario, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequestBody();
            inValue.Body.usuario = usuario;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetAccesos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetAccesos(System.IAsyncResult result) {
            return base.Channel.EndgetAccesos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetAccesos(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetAccesos(result);
            return retVal.Body.getAccesosResult;
        }
        
        private System.IAsyncResult OnBegingetAccesos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            return this.BegingetAccesos(usuario, callback, asyncState);
        }
        
        private object[] OnEndgetAccesos(System.IAsyncResult result) {
            string retVal = this.EndgetAccesos(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAccesosCompleted(object state) {
            if ((this.getAccesosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAccesosCompleted(this, new getAccesosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAccesosAsync(string usuario) {
            this.getAccesosAsync(usuario, null);
        }
        
        public void getAccesosAsync(string usuario, object userState) {
            if ((this.onBegingetAccesosDelegate == null)) {
                this.onBegingetAccesosDelegate = new BeginOperationDelegate(this.OnBegingetAccesos);
            }
            if ((this.onEndgetAccesosDelegate == null)) {
                this.onEndgetAccesosDelegate = new EndOperationDelegate(this.OnEndgetAccesos);
            }
            if ((this.ongetAccesosCompletedDelegate == null)) {
                this.ongetAccesosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAccesosCompleted);
            }
            base.InvokeAsync(this.onBegingetAccesosDelegate, new object[] {
                        usuario}, this.onEndgetAccesosDelegate, this.ongetAccesosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetCantidadDeExamenes(BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCantidadDeExamenes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetCantidadDeExamenes(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequestBody();
            inValue.Body.tabla = tabla;
            inValue.Body.filtroedad = filtroedad;
            inValue.Body.fechainicial = fechainicial;
            inValue.Body.fechafinal = fechafinal;
            inValue.Body.filtroCategoria = filtroCategoria;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetCantidadDeExamenes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetCantidadDeExamenes(System.IAsyncResult result) {
            return base.Channel.EndgetCantidadDeExamenes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndgetCantidadDeExamenes(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetCantidadDeExamenes(result);
            return retVal.Body.getCantidadDeExamenesResult;
        }
        
        private System.IAsyncResult OnBegingetCantidadDeExamenes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tabla = ((string)(inValues[0]));
            string filtroedad = ((string)(inValues[1]));
            string fechainicial = ((string)(inValues[2]));
            string fechafinal = ((string)(inValues[3]));
            string filtroCategoria = ((string)(inValues[4]));
            return this.BegingetCantidadDeExamenes(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, callback, asyncState);
        }
        
        private object[] OnEndgetCantidadDeExamenes(System.IAsyncResult result) {
            int retVal = this.EndgetCantidadDeExamenes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCantidadDeExamenesCompleted(object state) {
            if ((this.getCantidadDeExamenesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCantidadDeExamenesCompleted(this, new getCantidadDeExamenesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCantidadDeExamenesAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria) {
            this.getCantidadDeExamenesAsync(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, null);
        }
        
        public void getCantidadDeExamenesAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, object userState) {
            if ((this.onBegingetCantidadDeExamenesDelegate == null)) {
                this.onBegingetCantidadDeExamenesDelegate = new BeginOperationDelegate(this.OnBegingetCantidadDeExamenes);
            }
            if ((this.onEndgetCantidadDeExamenesDelegate == null)) {
                this.onEndgetCantidadDeExamenesDelegate = new EndOperationDelegate(this.OnEndgetCantidadDeExamenes);
            }
            if ((this.ongetCantidadDeExamenesCompletedDelegate == null)) {
                this.ongetCantidadDeExamenesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCantidadDeExamenesCompleted);
            }
            base.InvokeAsync(this.onBegingetCantidadDeExamenesDelegate, new object[] {
                        tabla,
                        filtroedad,
                        fechainicial,
                        fechafinal,
                        filtroCategoria}, this.onEndgetCantidadDeExamenesDelegate, this.ongetCantidadDeExamenesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetExamenesFiltrados(BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetExamenesFiltrados(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetExamenesFiltrados(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequestBody();
            inValue.Body.tabla = tabla;
            inValue.Body.filtroedad = filtroedad;
            inValue.Body.fechainicial = fechainicial;
            inValue.Body.fechafinal = fechafinal;
            inValue.Body.filtroCategoria = filtroCategoria;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetExamenesFiltrados(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetExamenesFiltrados(System.IAsyncResult result) {
            return base.Channel.EndgetExamenesFiltrados(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetExamenesFiltrados(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetExamenesFiltrados(result);
            return retVal.Body.getExamenesFiltradosResult;
        }
        
        private System.IAsyncResult OnBegingetExamenesFiltrados(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tabla = ((string)(inValues[0]));
            string filtroedad = ((string)(inValues[1]));
            string fechainicial = ((string)(inValues[2]));
            string fechafinal = ((string)(inValues[3]));
            string filtroCategoria = ((string)(inValues[4]));
            return this.BegingetExamenesFiltrados(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, callback, asyncState);
        }
        
        private object[] OnEndgetExamenesFiltrados(System.IAsyncResult result) {
            string retVal = this.EndgetExamenesFiltrados(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetExamenesFiltradosCompleted(object state) {
            if ((this.getExamenesFiltradosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getExamenesFiltradosCompleted(this, new getExamenesFiltradosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getExamenesFiltradosAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria) {
            this.getExamenesFiltradosAsync(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, null);
        }
        
        public void getExamenesFiltradosAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, object userState) {
            if ((this.onBegingetExamenesFiltradosDelegate == null)) {
                this.onBegingetExamenesFiltradosDelegate = new BeginOperationDelegate(this.OnBegingetExamenesFiltrados);
            }
            if ((this.onEndgetExamenesFiltradosDelegate == null)) {
                this.onEndgetExamenesFiltradosDelegate = new EndOperationDelegate(this.OnEndgetExamenesFiltrados);
            }
            if ((this.ongetExamenesFiltradosCompletedDelegate == null)) {
                this.ongetExamenesFiltradosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetExamenesFiltradosCompleted);
            }
            base.InvokeAsync(this.onBegingetExamenesFiltradosDelegate, new object[] {
                        tabla,
                        filtroedad,
                        fechainicial,
                        fechafinal,
                        filtroCategoria}, this.onEndgetExamenesFiltradosDelegate, this.ongetExamenesFiltradosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMedicos_Nombres(BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMedicos_Nombres(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMedicos_Nombres(System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequestBody();
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMedicos_Nombres(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMedicos_Nombres(System.IAsyncResult result) {
            return base.Channel.EndgetMedicos_Nombres(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMedicos_Nombres(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMedicos_Nombres(result);
            return retVal.Body.getMedicos_NombresResult;
        }
        
        private System.IAsyncResult OnBegingetMedicos_Nombres(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetMedicos_Nombres(callback, asyncState);
        }
        
        private object[] OnEndgetMedicos_Nombres(System.IAsyncResult result) {
            string retVal = this.EndgetMedicos_Nombres(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMedicos_NombresCompleted(object state) {
            if ((this.getMedicos_NombresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMedicos_NombresCompleted(this, new getMedicos_NombresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMedicos_NombresAsync() {
            this.getMedicos_NombresAsync(null);
        }
        
        public void getMedicos_NombresAsync(object userState) {
            if ((this.onBegingetMedicos_NombresDelegate == null)) {
                this.onBegingetMedicos_NombresDelegate = new BeginOperationDelegate(this.OnBegingetMedicos_Nombres);
            }
            if ((this.onEndgetMedicos_NombresDelegate == null)) {
                this.onEndgetMedicos_NombresDelegate = new EndOperationDelegate(this.OnEndgetMedicos_Nombres);
            }
            if ((this.ongetMedicos_NombresCompletedDelegate == null)) {
                this.ongetMedicos_NombresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMedicos_NombresCompleted);
            }
            base.InvokeAsync(this.onBegingetMedicos_NombresDelegate, null, this.onEndgetMedicos_NombresDelegate, this.ongetMedicos_NombresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginBorrarMedico(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarMedico(string nombre, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequestBody();
            inValue.Body.nombre = nombre;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginBorrarMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndBorrarMedico(System.IAsyncResult result) {
            return base.Channel.EndBorrarMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarMedico(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndBorrarMedico(result);
            return retVal.Body.BorrarMedicoResult;
        }
        
        private System.IAsyncResult OnBeginBorrarMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre = ((string)(inValues[0]));
            return this.BeginBorrarMedico(nombre, callback, asyncState);
        }
        
        private object[] OnEndBorrarMedico(System.IAsyncResult result) {
            bool retVal = this.EndBorrarMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarMedicoCompleted(object state) {
            if ((this.BorrarMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarMedicoCompleted(this, new BorrarMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarMedicoAsync(string nombre) {
            this.BorrarMedicoAsync(nombre, null);
        }
        
        public void BorrarMedicoAsync(string nombre, object userState) {
            if ((this.onBeginBorrarMedicoDelegate == null)) {
                this.onBeginBorrarMedicoDelegate = new BeginOperationDelegate(this.OnBeginBorrarMedico);
            }
            if ((this.onEndBorrarMedicoDelegate == null)) {
                this.onEndBorrarMedicoDelegate = new EndOperationDelegate(this.OnEndBorrarMedico);
            }
            if ((this.onBorrarMedicoCompletedDelegate == null)) {
                this.onBorrarMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarMedicoCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarMedicoDelegate, new object[] {
                        nombre}, this.onEndBorrarMedicoDelegate, this.onBorrarMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginBorrarMuestra(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarMuestra(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarMuestra(string codigo, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequestBody();
            inValue.Body.codigo = codigo;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginBorrarMuestra(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndBorrarMuestra(System.IAsyncResult result) {
            return base.Channel.EndBorrarMuestra(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarMuestra(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndBorrarMuestra(result);
            return retVal.Body.BorrarMuestraResult;
        }
        
        private System.IAsyncResult OnBeginBorrarMuestra(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codigo = ((string)(inValues[0]));
            return this.BeginBorrarMuestra(codigo, callback, asyncState);
        }
        
        private object[] OnEndBorrarMuestra(System.IAsyncResult result) {
            bool retVal = this.EndBorrarMuestra(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarMuestraCompleted(object state) {
            if ((this.BorrarMuestraCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarMuestraCompleted(this, new BorrarMuestraCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarMuestraAsync(string codigo) {
            this.BorrarMuestraAsync(codigo, null);
        }
        
        public void BorrarMuestraAsync(string codigo, object userState) {
            if ((this.onBeginBorrarMuestraDelegate == null)) {
                this.onBeginBorrarMuestraDelegate = new BeginOperationDelegate(this.OnBeginBorrarMuestra);
            }
            if ((this.onEndBorrarMuestraDelegate == null)) {
                this.onEndBorrarMuestraDelegate = new EndOperationDelegate(this.OnEndBorrarMuestra);
            }
            if ((this.onBorrarMuestraCompletedDelegate == null)) {
                this.onBorrarMuestraCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarMuestraCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarMuestraDelegate, new object[] {
                        codigo}, this.onEndBorrarMuestraDelegate, this.onBorrarMuestraCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginVerificaryActualizarContabilidad(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerificaryActualizarContabilidad(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndVerificaryActualizarContabilidad(System.IAsyncResult result) {
            return base.Channel.EndVerificaryActualizarContabilidad(result);
        }
        
        private System.IAsyncResult OnBeginVerificaryActualizarContabilidad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginVerificaryActualizarContabilidad(callback, asyncState);
        }
        
        private object[] OnEndVerificaryActualizarContabilidad(System.IAsyncResult result) {
            bool retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndVerificaryActualizarContabilidad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerificaryActualizarContabilidadCompleted(object state) {
            if ((this.VerificaryActualizarContabilidadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerificaryActualizarContabilidadCompleted(this, new VerificaryActualizarContabilidadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerificaryActualizarContabilidadAsync() {
            this.VerificaryActualizarContabilidadAsync(null);
        }
        
        public void VerificaryActualizarContabilidadAsync(object userState) {
            if ((this.onBeginVerificaryActualizarContabilidadDelegate == null)) {
                this.onBeginVerificaryActualizarContabilidadDelegate = new BeginOperationDelegate(this.OnBeginVerificaryActualizarContabilidad);
            }
            if ((this.onEndVerificaryActualizarContabilidadDelegate == null)) {
                this.onEndVerificaryActualizarContabilidadDelegate = new EndOperationDelegate(this.OnEndVerificaryActualizarContabilidad);
            }
            if ((this.onVerificaryActualizarContabilidadCompletedDelegate == null)) {
                this.onVerificaryActualizarContabilidadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerificaryActualizarContabilidadCompleted);
            }
            base.InvokeAsync(this.onBeginVerificaryActualizarContabilidadDelegate, null, this.onEndVerificaryActualizarContabilidadDelegate, this.onVerificaryActualizarContabilidadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginInsertarGastoenEgreso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarGastoenEgreso(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarGastoenEgreso(string NombreContable, int anio_contable, int mes_contable, string descripcion, int dia, int valor, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequestBody();
            inValue.Body.NombreContable = NombreContable;
            inValue.Body.anio_contable = anio_contable;
            inValue.Body.mes_contable = mes_contable;
            inValue.Body.descripcion = descripcion;
            inValue.Body.dia = dia;
            inValue.Body.valor = valor;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginInsertarGastoenEgreso(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndInsertarGastoenEgreso(System.IAsyncResult result) {
            return base.Channel.EndInsertarGastoenEgreso(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarGastoenEgreso(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndInsertarGastoenEgreso(result);
            return retVal.Body.InsertarGastoenEgresoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarGastoenEgreso(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string NombreContable = ((string)(inValues[0]));
            int anio_contable = ((int)(inValues[1]));
            int mes_contable = ((int)(inValues[2]));
            string descripcion = ((string)(inValues[3]));
            int dia = ((int)(inValues[4]));
            int valor = ((int)(inValues[5]));
            return this.BeginInsertarGastoenEgreso(NombreContable, anio_contable, mes_contable, descripcion, dia, valor, callback, asyncState);
        }
        
        private object[] OnEndInsertarGastoenEgreso(System.IAsyncResult result) {
            bool retVal = this.EndInsertarGastoenEgreso(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarGastoenEgresoCompleted(object state) {
            if ((this.InsertarGastoenEgresoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarGastoenEgresoCompleted(this, new InsertarGastoenEgresoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarGastoenEgresoAsync(string NombreContable, int anio_contable, int mes_contable, string descripcion, int dia, int valor) {
            this.InsertarGastoenEgresoAsync(NombreContable, anio_contable, mes_contable, descripcion, dia, valor, null);
        }
        
        public void InsertarGastoenEgresoAsync(string NombreContable, int anio_contable, int mes_contable, string descripcion, int dia, int valor, object userState) {
            if ((this.onBeginInsertarGastoenEgresoDelegate == null)) {
                this.onBeginInsertarGastoenEgresoDelegate = new BeginOperationDelegate(this.OnBeginInsertarGastoenEgreso);
            }
            if ((this.onEndInsertarGastoenEgresoDelegate == null)) {
                this.onEndInsertarGastoenEgresoDelegate = new EndOperationDelegate(this.OnEndInsertarGastoenEgreso);
            }
            if ((this.onInsertarGastoenEgresoCompletedDelegate == null)) {
                this.onInsertarGastoenEgresoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarGastoenEgresoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarGastoenEgresoDelegate, new object[] {
                        NombreContable,
                        anio_contable,
                        mes_contable,
                        descripcion,
                        dia,
                        valor}, this.onEndInsertarGastoenEgresoDelegate, this.onInsertarGastoenEgresoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetTodosLosGastos(BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetTodosLosGastos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetTodosLosGastos(int anio, int mes, string categoria, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequestBody();
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            inValue.Body.categoria = categoria;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetTodosLosGastos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetTodosLosGastos(System.IAsyncResult result) {
            return base.Channel.EndgetTodosLosGastos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetTodosLosGastos(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetTodosLosGastos(result);
            return retVal.Body.getTodosLosGastosResult;
        }
        
        private System.IAsyncResult OnBegingetTodosLosGastos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int anio = ((int)(inValues[0]));
            int mes = ((int)(inValues[1]));
            string categoria = ((string)(inValues[2]));
            return this.BegingetTodosLosGastos(anio, mes, categoria, callback, asyncState);
        }
        
        private object[] OnEndgetTodosLosGastos(System.IAsyncResult result) {
            string retVal = this.EndgetTodosLosGastos(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetTodosLosGastosCompleted(object state) {
            if ((this.getTodosLosGastosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getTodosLosGastosCompleted(this, new getTodosLosGastosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getTodosLosGastosAsync(int anio, int mes, string categoria) {
            this.getTodosLosGastosAsync(anio, mes, categoria, null);
        }
        
        public void getTodosLosGastosAsync(int anio, int mes, string categoria, object userState) {
            if ((this.onBegingetTodosLosGastosDelegate == null)) {
                this.onBegingetTodosLosGastosDelegate = new BeginOperationDelegate(this.OnBegingetTodosLosGastos);
            }
            if ((this.onEndgetTodosLosGastosDelegate == null)) {
                this.onEndgetTodosLosGastosDelegate = new EndOperationDelegate(this.OnEndgetTodosLosGastos);
            }
            if ((this.ongetTodosLosGastosCompletedDelegate == null)) {
                this.ongetTodosLosGastosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetTodosLosGastosCompleted);
            }
            base.InvokeAsync(this.onBegingetTodosLosGastosDelegate, new object[] {
                        anio,
                        mes,
                        categoria}, this.onEndgetTodosLosGastosDelegate, this.ongetTodosLosGastosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetIngresosCitologia(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIngresosCitologia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIngresosCitologia(string fechainicial, string fechafinal, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequestBody();
            inValue.Body.fechainicial = fechainicial;
            inValue.Body.fechafinal = fechafinal;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetIngresosCitologia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetIngresosCitologia(System.IAsyncResult result) {
            return base.Channel.EndgetIngresosCitologia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetIngresosCitologia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetIngresosCitologia(result);
            return retVal.Body.getIngresosCitologiaResult;
        }
        
        private System.IAsyncResult OnBegingetIngresosCitologia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fechainicial = ((string)(inValues[0]));
            string fechafinal = ((string)(inValues[1]));
            return this.BegingetIngresosCitologia(fechainicial, fechafinal, callback, asyncState);
        }
        
        private object[] OnEndgetIngresosCitologia(System.IAsyncResult result) {
            string retVal = this.EndgetIngresosCitologia(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIngresosCitologiaCompleted(object state) {
            if ((this.getIngresosCitologiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIngresosCitologiaCompleted(this, new getIngresosCitologiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIngresosCitologiaAsync(string fechainicial, string fechafinal) {
            this.getIngresosCitologiaAsync(fechainicial, fechafinal, null);
        }
        
        public void getIngresosCitologiaAsync(string fechainicial, string fechafinal, object userState) {
            if ((this.onBegingetIngresosCitologiaDelegate == null)) {
                this.onBegingetIngresosCitologiaDelegate = new BeginOperationDelegate(this.OnBegingetIngresosCitologia);
            }
            if ((this.onEndgetIngresosCitologiaDelegate == null)) {
                this.onEndgetIngresosCitologiaDelegate = new EndOperationDelegate(this.OnEndgetIngresosCitologia);
            }
            if ((this.ongetIngresosCitologiaCompletedDelegate == null)) {
                this.ongetIngresosCitologiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIngresosCitologiaCompleted);
            }
            base.InvokeAsync(this.onBegingetIngresosCitologiaDelegate, new object[] {
                        fechainicial,
                        fechafinal}, this.onEndgetIngresosCitologiaDelegate, this.ongetIngresosCitologiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetIngresosBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIngresosBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIngresosBiopsia(string fechainicial, string fechafinal, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequestBody();
            inValue.Body.fechainicial = fechainicial;
            inValue.Body.fechafinal = fechafinal;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetIngresosBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetIngresosBiopsia(System.IAsyncResult result) {
            return base.Channel.EndgetIngresosBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetIngresosBiopsia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetIngresosBiopsia(result);
            return retVal.Body.getIngresosBiopsiaResult;
        }
        
        private System.IAsyncResult OnBegingetIngresosBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fechainicial = ((string)(inValues[0]));
            string fechafinal = ((string)(inValues[1]));
            return this.BegingetIngresosBiopsia(fechainicial, fechafinal, callback, asyncState);
        }
        
        private object[] OnEndgetIngresosBiopsia(System.IAsyncResult result) {
            string retVal = this.EndgetIngresosBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIngresosBiopsiaCompleted(object state) {
            if ((this.getIngresosBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIngresosBiopsiaCompleted(this, new getIngresosBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIngresosBiopsiaAsync(string fechainicial, string fechafinal) {
            this.getIngresosBiopsiaAsync(fechainicial, fechafinal, null);
        }
        
        public void getIngresosBiopsiaAsync(string fechainicial, string fechafinal, object userState) {
            if ((this.onBegingetIngresosBiopsiaDelegate == null)) {
                this.onBegingetIngresosBiopsiaDelegate = new BeginOperationDelegate(this.OnBegingetIngresosBiopsia);
            }
            if ((this.onEndgetIngresosBiopsiaDelegate == null)) {
                this.onEndgetIngresosBiopsiaDelegate = new EndOperationDelegate(this.OnEndgetIngresosBiopsia);
            }
            if ((this.ongetIngresosBiopsiaCompletedDelegate == null)) {
                this.ongetIngresosBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIngresosBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBegingetIngresosBiopsiaDelegate, new object[] {
                        fechainicial,
                        fechafinal}, this.onEndgetIngresosBiopsiaDelegate, this.ongetIngresosBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMuestraGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMuestraGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMuestraGinecologica(string idMuestra, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMuestraGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMuestraGinecologica(System.IAsyncResult result) {
            return base.Channel.EndgetMuestraGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMuestraGinecologica(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMuestraGinecologica(result);
            return retVal.Body.getMuestraGinecologicaResult;
        }
        
        private System.IAsyncResult OnBegingetMuestraGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BegingetMuestraGinecologica(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndgetMuestraGinecologica(System.IAsyncResult result) {
            string retVal = this.EndgetMuestraGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMuestraGinecologicaCompleted(object state) {
            if ((this.getMuestraGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMuestraGinecologicaCompleted(this, new getMuestraGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMuestraGinecologicaAsync(string idMuestra) {
            this.getMuestraGinecologicaAsync(idMuestra, null);
        }
        
        public void getMuestraGinecologicaAsync(string idMuestra, object userState) {
            if ((this.onBegingetMuestraGinecologicaDelegate == null)) {
                this.onBegingetMuestraGinecologicaDelegate = new BeginOperationDelegate(this.OnBegingetMuestraGinecologica);
            }
            if ((this.onEndgetMuestraGinecologicaDelegate == null)) {
                this.onEndgetMuestraGinecologicaDelegate = new EndOperationDelegate(this.OnEndgetMuestraGinecologica);
            }
            if ((this.ongetMuestraGinecologicaCompletedDelegate == null)) {
                this.ongetMuestraGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMuestraGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBegingetMuestraGinecologicaDelegate, new object[] {
                        idMuestra}, this.onEndgetMuestraGinecologicaDelegate, this.ongetMuestraGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMuestraNo_Ginecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMuestraNo_Ginecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMuestraNo_Ginecologica(string idMuestra, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMuestraNo_Ginecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
            return base.Channel.EndgetMuestraNo_Ginecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMuestraNo_Ginecologica(result);
            return retVal.Body.getMuestraNo_GinecologicaResult;
        }
        
        private System.IAsyncResult OnBegingetMuestraNo_Ginecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BegingetMuestraNo_Ginecologica(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
            string retVal = this.EndgetMuestraNo_Ginecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMuestraNo_GinecologicaCompleted(object state) {
            if ((this.getMuestraNo_GinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMuestraNo_GinecologicaCompleted(this, new getMuestraNo_GinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMuestraNo_GinecologicaAsync(string idMuestra) {
            this.getMuestraNo_GinecologicaAsync(idMuestra, null);
        }
        
        public void getMuestraNo_GinecologicaAsync(string idMuestra, object userState) {
            if ((this.onBegingetMuestraNo_GinecologicaDelegate == null)) {
                this.onBegingetMuestraNo_GinecologicaDelegate = new BeginOperationDelegate(this.OnBegingetMuestraNo_Ginecologica);
            }
            if ((this.onEndgetMuestraNo_GinecologicaDelegate == null)) {
                this.onEndgetMuestraNo_GinecologicaDelegate = new EndOperationDelegate(this.OnEndgetMuestraNo_Ginecologica);
            }
            if ((this.ongetMuestraNo_GinecologicaCompletedDelegate == null)) {
                this.ongetMuestraNo_GinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMuestraNo_GinecologicaCompleted);
            }
            base.InvokeAsync(this.onBegingetMuestraNo_GinecologicaDelegate, new object[] {
                        idMuestra}, this.onEndgetMuestraNo_GinecologicaDelegate, this.ongetMuestraNo_GinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMuestraBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMuestraBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMuestraBiopsia(string idMuestra, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMuestraBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMuestraBiopsia(System.IAsyncResult result) {
            return base.Channel.EndgetMuestraBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMuestraBiopsia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMuestraBiopsia(result);
            return retVal.Body.getMuestraBiopsiaResult;
        }
        
        private System.IAsyncResult OnBegingetMuestraBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BegingetMuestraBiopsia(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndgetMuestraBiopsia(System.IAsyncResult result) {
            string retVal = this.EndgetMuestraBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMuestraBiopsiaCompleted(object state) {
            if ((this.getMuestraBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMuestraBiopsiaCompleted(this, new getMuestraBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMuestraBiopsiaAsync(string idMuestra) {
            this.getMuestraBiopsiaAsync(idMuestra, null);
        }
        
        public void getMuestraBiopsiaAsync(string idMuestra, object userState) {
            if ((this.onBegingetMuestraBiopsiaDelegate == null)) {
                this.onBegingetMuestraBiopsiaDelegate = new BeginOperationDelegate(this.OnBegingetMuestraBiopsia);
            }
            if ((this.onEndgetMuestraBiopsiaDelegate == null)) {
                this.onEndgetMuestraBiopsiaDelegate = new EndOperationDelegate(this.OnEndgetMuestraBiopsia);
            }
            if ((this.ongetMuestraBiopsiaCompletedDelegate == null)) {
                this.ongetMuestraBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMuestraBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBegingetMuestraBiopsiaDelegate, new object[] {
                        idMuestra}, this.onEndgetMuestraBiopsiaDelegate, this.ongetMuestraBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetMaterialEnviadoBiopsiaImprimir(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMaterialEnviadoBiopsiaImprimir(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMaterialEnviadoBiopsiaImprimir(string idMuestra, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetMaterialEnviadoBiopsiaImprimir(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
            return base.Channel.EndgetMaterialEnviadoBiopsiaImprimir(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetMaterialEnviadoBiopsiaImprimir(result);
            return retVal.Body.getMaterialEnviadoBiopsiaImprimirResult;
        }
        
        private System.IAsyncResult OnBegingetMaterialEnviadoBiopsiaImprimir(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BegingetMaterialEnviadoBiopsiaImprimir(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
            string retVal = this.EndgetMaterialEnviadoBiopsiaImprimir(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMaterialEnviadoBiopsiaImprimirCompleted(object state) {
            if ((this.getMaterialEnviadoBiopsiaImprimirCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMaterialEnviadoBiopsiaImprimirCompleted(this, new getMaterialEnviadoBiopsiaImprimirCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMaterialEnviadoBiopsiaImprimirAsync(string idMuestra) {
            this.getMaterialEnviadoBiopsiaImprimirAsync(idMuestra, null);
        }
        
        public void getMaterialEnviadoBiopsiaImprimirAsync(string idMuestra, object userState) {
            if ((this.onBegingetMaterialEnviadoBiopsiaImprimirDelegate == null)) {
                this.onBegingetMaterialEnviadoBiopsiaImprimirDelegate = new BeginOperationDelegate(this.OnBegingetMaterialEnviadoBiopsiaImprimir);
            }
            if ((this.onEndgetMaterialEnviadoBiopsiaImprimirDelegate == null)) {
                this.onEndgetMaterialEnviadoBiopsiaImprimirDelegate = new EndOperationDelegate(this.OnEndgetMaterialEnviadoBiopsiaImprimir);
            }
            if ((this.ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate == null)) {
                this.ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMaterialEnviadoBiopsiaImprimirCompleted);
            }
            base.InvokeAsync(this.onBegingetMaterialEnviadoBiopsiaImprimirDelegate, new object[] {
                        idMuestra}, this.onEndgetMaterialEnviadoBiopsiaImprimirDelegate, this.ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BegingetIdExamenes(BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIdExamenes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIdExamenes(System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequestBody();
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BegingetIdExamenes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndgetIdExamenes(System.IAsyncResult result) {
            return base.Channel.EndgetIdExamenes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetIdExamenes(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndgetIdExamenes(result);
            return retVal.Body.getIdExamenesResult;
        }
        
        private System.IAsyncResult OnBegingetIdExamenes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetIdExamenes(callback, asyncState);
        }
        
        private object[] OnEndgetIdExamenes(System.IAsyncResult result) {
            string retVal = this.EndgetIdExamenes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIdExamenesCompleted(object state) {
            if ((this.getIdExamenesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIdExamenesCompleted(this, new getIdExamenesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIdExamenesAsync() {
            this.getIdExamenesAsync(null);
        }
        
        public void getIdExamenesAsync(object userState) {
            if ((this.onBegingetIdExamenesDelegate == null)) {
                this.onBegingetIdExamenesDelegate = new BeginOperationDelegate(this.OnBegingetIdExamenes);
            }
            if ((this.onEndgetIdExamenesDelegate == null)) {
                this.onEndgetIdExamenesDelegate = new EndOperationDelegate(this.OnEndgetIdExamenes);
            }
            if ((this.ongetIdExamenesCompletedDelegate == null)) {
                this.ongetIdExamenesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIdExamenesCompleted);
            }
            base.InvokeAsync(this.onBegingetIdExamenesDelegate, null, this.onEndgetIdExamenesDelegate, this.ongetIdExamenesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginbuscarCitologia(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginbuscarCitologia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginbuscarCitologia(string idMuestra, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginbuscarCitologia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndbuscarCitologia(System.IAsyncResult result) {
            return base.Channel.EndbuscarCitologia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndbuscarCitologia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndbuscarCitologia(result);
            return retVal.Body.buscarCitologiaResult;
        }
        
        private System.IAsyncResult OnBeginbuscarCitologia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BeginbuscarCitologia(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndbuscarCitologia(System.IAsyncResult result) {
            string retVal = this.EndbuscarCitologia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnbuscarCitologiaCompleted(object state) {
            if ((this.buscarCitologiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.buscarCitologiaCompleted(this, new buscarCitologiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void buscarCitologiaAsync(string idMuestra) {
            this.buscarCitologiaAsync(idMuestra, null);
        }
        
        public void buscarCitologiaAsync(string idMuestra, object userState) {
            if ((this.onBeginbuscarCitologiaDelegate == null)) {
                this.onBeginbuscarCitologiaDelegate = new BeginOperationDelegate(this.OnBeginbuscarCitologia);
            }
            if ((this.onEndbuscarCitologiaDelegate == null)) {
                this.onEndbuscarCitologiaDelegate = new EndOperationDelegate(this.OnEndbuscarCitologia);
            }
            if ((this.onbuscarCitologiaCompletedDelegate == null)) {
                this.onbuscarCitologiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnbuscarCitologiaCompleted);
            }
            base.InvokeAsync(this.onBeginbuscarCitologiaDelegate, new object[] {
                        idMuestra}, this.onEndbuscarCitologiaDelegate, this.onbuscarCitologiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginbuscarCitologiaLiquidos(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginbuscarCitologiaLiquidos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginbuscarCitologiaLiquidos(string idMuestra, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginbuscarCitologiaLiquidos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndbuscarCitologiaLiquidos(System.IAsyncResult result) {
            return base.Channel.EndbuscarCitologiaLiquidos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndbuscarCitologiaLiquidos(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndbuscarCitologiaLiquidos(result);
            return retVal.Body.buscarCitologiaLiquidosResult;
        }
        
        private System.IAsyncResult OnBeginbuscarCitologiaLiquidos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BeginbuscarCitologiaLiquidos(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndbuscarCitologiaLiquidos(System.IAsyncResult result) {
            string retVal = this.EndbuscarCitologiaLiquidos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnbuscarCitologiaLiquidosCompleted(object state) {
            if ((this.buscarCitologiaLiquidosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.buscarCitologiaLiquidosCompleted(this, new buscarCitologiaLiquidosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void buscarCitologiaLiquidosAsync(string idMuestra) {
            this.buscarCitologiaLiquidosAsync(idMuestra, null);
        }
        
        public void buscarCitologiaLiquidosAsync(string idMuestra, object userState) {
            if ((this.onBeginbuscarCitologiaLiquidosDelegate == null)) {
                this.onBeginbuscarCitologiaLiquidosDelegate = new BeginOperationDelegate(this.OnBeginbuscarCitologiaLiquidos);
            }
            if ((this.onEndbuscarCitologiaLiquidosDelegate == null)) {
                this.onEndbuscarCitologiaLiquidosDelegate = new EndOperationDelegate(this.OnEndbuscarCitologiaLiquidos);
            }
            if ((this.onbuscarCitologiaLiquidosCompletedDelegate == null)) {
                this.onbuscarCitologiaLiquidosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnbuscarCitologiaLiquidosCompleted);
            }
            base.InvokeAsync(this.onBeginbuscarCitologiaLiquidosDelegate, new object[] {
                        idMuestra}, this.onEndbuscarCitologiaLiquidosDelegate, this.onbuscarCitologiaLiquidosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.BeginbuscarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginbuscarBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginbuscarBiopsia(string idMuestra, System.AsyncCallback callback, object asyncState) {
            BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequest inValue = new BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequest();
            inValue.Body = new BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).BeginbuscarBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponse BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap.EndbuscarBiopsia(System.IAsyncResult result) {
            return base.Channel.EndbuscarBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndbuscarBiopsia(System.IAsyncResult result) {
            BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponse retVal = ((BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap)(this)).EndbuscarBiopsia(result);
            return retVal.Body.buscarBiopsiaResult;
        }
        
        private System.IAsyncResult OnBeginbuscarBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BeginbuscarBiopsia(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndbuscarBiopsia(System.IAsyncResult result) {
            string retVal = this.EndbuscarBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnbuscarBiopsiaCompleted(object state) {
            if ((this.buscarBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.buscarBiopsiaCompleted(this, new buscarBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void buscarBiopsiaAsync(string idMuestra) {
            this.buscarBiopsiaAsync(idMuestra, null);
        }
        
        public void buscarBiopsiaAsync(string idMuestra, object userState) {
            if ((this.onBeginbuscarBiopsiaDelegate == null)) {
                this.onBeginbuscarBiopsiaDelegate = new BeginOperationDelegate(this.OnBeginbuscarBiopsia);
            }
            if ((this.onEndbuscarBiopsiaDelegate == null)) {
                this.onEndbuscarBiopsiaDelegate = new EndOperationDelegate(this.OnEndbuscarBiopsia);
            }
            if ((this.onbuscarBiopsiaCompletedDelegate == null)) {
                this.onbuscarBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnbuscarBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBeginbuscarBiopsiaDelegate, new object[] {
                        idMuestra}, this.onEndbuscarBiopsiaDelegate, this.onbuscarBiopsiaCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap CreateChannel() {
            return new clinicaPatologiaWebServiceSoapClientChannel(this);
        }
        
        private class clinicaPatologiaWebServiceSoapClientChannel : ChannelBase<BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap>, BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap {
            
            public clinicaPatologiaWebServiceSoapClientChannel(System.ServiceModel.ClientBase<BaseDeDatosClinicaPatologica.MyWebReference.clinicaPatologiaWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginHelloWorld(BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("HelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponse EndHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.HelloWorldResponse)(base.EndInvoke("HelloWorld", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginseEjecutoComando(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("seEjecutoComando", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndseEjecutoComando(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("seEjecutoComando", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginConectar(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Conectar", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndConectar(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("Conectar", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginQuerry(BaseDeDatosClinicaPatologica.MyWebReference.QuerryRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Querry", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponse EndQuerry(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.QuerryResponse)(base.EndInvoke("Querry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarMedico(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarMedico", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponse EndInsertarMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarMedicoResponse)(base.EndInvoke("InsertarMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponse EndInsertarEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarEmpleadoResponse)(base.EndInvoke("InsertarEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarModulo(BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarModulo", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponse EndInsertarModulo(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarModuloResponse)(base.EndInvoke("InsertarModulo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarAcceso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarAcceso", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponse EndInsertarAcceso(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarAccesoResponse)(base.EndInvoke("InsertarAcceso", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarContabilidad(BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarContabilidad", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponse EndInsertarContabilidad(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarContabilidadResponse)(base.EndInvoke("InsertarContabilidad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarEgreso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarEgreso", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponse EndInsertarEgreso(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarEgresoResponse)(base.EndInvoke("InsertarEgreso", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarGasto(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarGasto", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponse EndInsertarGasto(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoResponse)(base.EndInvoke("InsertarGasto", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarMaterial(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarMaterial", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponse EndInsertarMaterial(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialResponse)(base.EndInvoke("InsertarMaterial", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarMaterialEnviado(BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarMaterialEnviado", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponse EndInsertarMaterialEnviado(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarMaterialEnviadoResponse)(base.EndInvoke("InsertarMaterialEnviado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarPaciente(BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarPaciente", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponse EndInsertarPaciente(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarPacienteResponse)(base.EndInvoke("InsertarPaciente", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponse EndInsertarBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarBiopsiaResponse)(base.EndInvoke("InsertarBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarCitologiaNoGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarCitologiaNoGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponse EndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaNoGinecologicaResponse)(base.EndInvoke("InsertarCitologiaNoGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarCitologiaGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarCitologiaGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponse EndInsertarCitologiaGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarCitologiaGinecologicaResponse)(base.EndInvoke("InsertarCitologiaGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIDdeMedico(BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIDdeMedico", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponse EndgetIDdeMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getIDdeMedicoResponse)(base.EndInvoke("getIDdeMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIDdePaciente(BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIDdePaciente", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponse EndgetIDdePaciente(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getIDdePacienteResponse)(base.EndInvoke("getIDdePaciente", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetPaciente(BaseDeDatosClinicaPatologica.MyWebReference.getPacienteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getPaciente", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponse EndgetPaciente(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getPacienteResponse)(base.EndInvoke("getPaciente", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetExamen(BaseDeDatosClinicaPatologica.MyWebReference.getExamenRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getExamen", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponse EndgetExamen(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getExamenResponse)(base.EndInvoke("getExamen", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMedico(BaseDeDatosClinicaPatologica.MyWebReference.getMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMedico", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponse EndgetMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMedicoResponse)(base.EndInvoke("getMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponse EndgetEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadoResponse)(base.EndInvoke("getEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEmpleados(BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEmpleados", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponse EndgetEmpleados(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getEmpleadosResponse)(base.EndInvoke("getEmpleados", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarCitologia(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarCitologia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponse EndActualizarCitologia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaResponse)(base.EndInvoke("ActualizarCitologia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponse EndActualizarBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.ActualizarBiopsiaResponse)(base.EndInvoke("ActualizarBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarCitologiaLiquidos(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarCitologiaLiquidos", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponse EndActualizarCitologiaLiquidos(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.ActualizarCitologiaLiquidosResponse)(base.EndInvoke("ActualizarCitologiaLiquidos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarMedico(BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarMedico", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponse EndActualizarMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.ActualizarMedicoResponse)(base.EndInvoke("ActualizarMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarEmpleado(BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponse EndBorrarEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.BorrarEmpleadoResponse)(base.EndInvoke("BorrarEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarMaterial(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarMaterial", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponse EndBorrarMaterial(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.BorrarMaterialResponse)(base.EndInvoke("BorrarMaterial", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginesUsuarioValido(BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("esUsuarioValido", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponse EndesUsuarioValido(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.esUsuarioValidoResponse)(base.EndInvoke("esUsuarioValido", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIngresosPorMes(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIngresosPorMes", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponse EndgetIngresosPorMes(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getIngresosPorMesResponse)(base.EndInvoke("getIngresosPorMes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEgresosPorMes(BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getEgresosPorMes", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponse EndgetEgresosPorMes(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getEgresosPorMesResponse)(base.EndInvoke("getEgresosPorMes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCitologiasGinecologicas(BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getCitologiasGinecologicas", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponse EndgetCitologiasGinecologicas(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getCitologiasGinecologicasResponse)(base.EndInvoke("getCitologiasGinecologicas", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetBiopsias(BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getBiopsias", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponse EndgetBiopsias(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getBiopsiasResponse)(base.EndInvoke("getBiopsias", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetPacientes(BaseDeDatosClinicaPatologica.MyWebReference.getPacientesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getPacientes", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponse EndgetPacientes(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getPacientesResponse)(base.EndInvoke("getPacientes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMedicos(BaseDeDatosClinicaPatologica.MyWebReference.getMedicosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMedicos", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponse EndgetMedicos(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMedicosResponse)(base.EndInvoke("getMedicos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMaterialEnviado_Biopsia(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMaterialEnviado_Biopsia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponse EndgetMaterialEnviado_Biopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_BiopsiaResponse)(base.EndInvoke("getMaterialEnviado_Biopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMaterialEnviado_CitologiaNoGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMaterialEnviado_CitologiaNoGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponse EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviado_CitologiaNoGinecologicaResponse)(base.EndInvoke("getMaterialEnviado_CitologiaNoGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginconsultaMedicoBiopsias(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("consultaMedicoBiopsias", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponse EndconsultaMedicoBiopsias(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoBiopsiasResponse)(base.EndInvoke("consultaMedicoBiopsias", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginconsultaMedicoCitologia(BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("consultaMedicoCitologia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponse EndconsultaMedicoCitologia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.consultaMedicoCitologiaResponse)(base.EndInvoke("consultaMedicoCitologia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAccesos(BaseDeDatosClinicaPatologica.MyWebReference.getAccesosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getAccesos", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponse EndgetAccesos(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getAccesosResponse)(base.EndInvoke("getAccesos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCantidadDeExamenes(BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getCantidadDeExamenes", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponse EndgetCantidadDeExamenes(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getCantidadDeExamenesResponse)(base.EndInvoke("getCantidadDeExamenes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetExamenesFiltrados(BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getExamenesFiltrados", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponse EndgetExamenesFiltrados(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getExamenesFiltradosResponse)(base.EndInvoke("getExamenesFiltrados", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMedicos_Nombres(BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMedicos_Nombres", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponse EndgetMedicos_Nombres(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMedicos_NombresResponse)(base.EndInvoke("getMedicos_Nombres", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarMedico(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarMedico", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponse EndBorrarMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.BorrarMedicoResponse)(base.EndInvoke("BorrarMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarMuestra(BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarMuestra", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponse EndBorrarMuestra(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.BorrarMuestraResponse)(base.EndInvoke("BorrarMuestra", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVerificaryActualizarContabilidad(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("VerificaryActualizarContabilidad", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndVerificaryActualizarContabilidad(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("VerificaryActualizarContabilidad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarGastoenEgreso(BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarGastoenEgreso", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponse EndInsertarGastoenEgreso(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.InsertarGastoenEgresoResponse)(base.EndInvoke("InsertarGastoenEgreso", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetTodosLosGastos(BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getTodosLosGastos", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponse EndgetTodosLosGastos(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getTodosLosGastosResponse)(base.EndInvoke("getTodosLosGastos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIngresosCitologia(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIngresosCitologia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponse EndgetIngresosCitologia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getIngresosCitologiaResponse)(base.EndInvoke("getIngresosCitologia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIngresosBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIngresosBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponse EndgetIngresosBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getIngresosBiopsiaResponse)(base.EndInvoke("getIngresosBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMuestraGinecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMuestraGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponse EndgetMuestraGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMuestraGinecologicaResponse)(base.EndInvoke("getMuestraGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMuestraNo_Ginecologica(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMuestraNo_Ginecologica", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponse EndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMuestraNo_GinecologicaResponse)(base.EndInvoke("getMuestraNo_Ginecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMuestraBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMuestraBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponse EndgetMuestraBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMuestraBiopsiaResponse)(base.EndInvoke("getMuestraBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMaterialEnviadoBiopsiaImprimir(BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMaterialEnviadoBiopsiaImprimir", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponse EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getMaterialEnviadoBiopsiaImprimirResponse)(base.EndInvoke("getMaterialEnviadoBiopsiaImprimir", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIdExamenes(BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIdExamenes", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponse EndgetIdExamenes(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.getIdExamenesResponse)(base.EndInvoke("getIdExamenes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginbuscarCitologia(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("buscarCitologia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponse EndbuscarCitologia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaResponse)(base.EndInvoke("buscarCitologia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginbuscarCitologiaLiquidos(BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("buscarCitologiaLiquidos", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponse EndbuscarCitologiaLiquidos(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.buscarCitologiaLiquidosResponse)(base.EndInvoke("buscarCitologiaLiquidos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginbuscarBiopsia(BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("buscarBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponse EndbuscarBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponse _result = ((BaseDeDatosClinicaPatologica.MyWebReference.buscarBiopsiaResponse)(base.EndInvoke("buscarBiopsia", _args, result)));
                return _result;
            }
        }
    }
}
