//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace Sistema_BD_Clinica_Patologica.ServiceReferenceClinica {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NombreCompleto", Namespace="http://tempuri.org/")]
    public partial class NombreCompleto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PrimerNombreField;
        
        private string SegundoNombreField;
        
        private string PrimerApellidoField;
        
        private string SegundoApellidoField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string PrimerNombre {
            get {
                return this.PrimerNombreField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimerNombreField, value) != true)) {
                    this.PrimerNombreField = value;
                    this.RaisePropertyChanged("PrimerNombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SegundoNombre {
            get {
                return this.SegundoNombreField;
            }
            set {
                if ((object.ReferenceEquals(this.SegundoNombreField, value) != true)) {
                    this.SegundoNombreField = value;
                    this.RaisePropertyChanged("SegundoNombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string PrimerApellido {
            get {
                return this.PrimerApellidoField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimerApellidoField, value) != true)) {
                    this.PrimerApellidoField = value;
                    this.RaisePropertyChanged("PrimerApellido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string SegundoApellido {
            get {
                return this.SegundoApellidoField;
            }
            set {
                if ((object.ReferenceEquals(this.SegundoApellidoField, value) != true)) {
                    this.SegundoApellidoField = value;
                    this.RaisePropertyChanged("SegundoApellido");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceClinica.WSClinicaSoap")]
    public interface WSClinicaSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/esUsuarioValido", ReplyAction="*")]
        System.IAsyncResult BeginesUsuarioValido(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponse EndesUsuarioValido(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIDdeMedico", ReplyAction="*")]
        System.IAsyncResult BegingetIDdeMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponse EndgetIDdeMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIDdePaciente", ReplyAction="*")]
        System.IAsyncResult BegingetIDdePaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponse EndgetIDdePaciente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMedicos_Nombres", ReplyAction="*")]
        System.IAsyncResult BegingetMedicos_Nombres(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponse EndgetMedicos_Nombres(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMedicosTodos", ReplyAction="*")]
        System.IAsyncResult BegingetMedicosTodos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponse EndgetMedicosTodos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMaterialEnviadoBiopsiaImprimir", ReplyAction="*")]
        System.IAsyncResult BegingetMaterialEnviadoBiopsiaImprimir(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponse EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMaterialEnviado_CitologiaNoGinecologica", ReplyAction="*")]
        System.IAsyncResult BegingetMaterialEnviado_CitologiaNoGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponse EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMedico", ReplyAction="*")]
        System.IAsyncResult BegingetMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponse EndgetMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMuestraGinecologica", ReplyAction="*")]
        System.IAsyncResult BegingetMuestraGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponse EndgetMuestraGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMuestraNo_Ginecologica", ReplyAction="*")]
        System.IAsyncResult BegingetMuestraNo_Ginecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponse EndgetMuestraNo_Ginecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getMuestraBiopsia", ReplyAction="*")]
        System.IAsyncResult BegingetMuestraBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponse EndgetMuestraBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getIdExamenes", ReplyAction="*")]
        System.IAsyncResult BegingetIdExamenes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponse EndgetIdExamenes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getCantidadDeExamenes", ReplyAction="*")]
        System.IAsyncResult BegingetCantidadDeExamenes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponse EndgetCantidadDeExamenes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getExamenesFiltrados", ReplyAction="*")]
        System.IAsyncResult BegingetExamenesFiltrados(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponse EndgetExamenesFiltrados(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/consultaMedicoBiopsias", ReplyAction="*")]
        System.IAsyncResult BeginconsultaMedicoBiopsias(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponse EndconsultaMedicoBiopsias(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/consultaMedicoCitologia", ReplyAction="*")]
        System.IAsyncResult BeginconsultaMedicoCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponse EndconsultaMedicoCitologia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getNombresPacientes", ReplyAction="*")]
        System.IAsyncResult BegingetNombresPacientes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponse EndgetNombresPacientes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getUsuarios", ReplyAction="*")]
        System.IAsyncResult BegingetUsuarios(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponse EndgetUsuarios(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getDatosEmpleado", ReplyAction="*")]
        System.IAsyncResult BegingetDatosEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponse EndgetDatosEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getAccesosDeUsuario", ReplyAction="*")]
        System.IAsyncResult BegingetAccesosDeUsuario(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponse EndgetAccesosDeUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarMedico", ReplyAction="*")]
        System.IAsyncResult BeginInsertarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponse EndInsertarMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarMaterial", ReplyAction="*")]
        System.IAsyncResult BeginInsertarMaterial(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponse EndInsertarMaterial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarPaciente", ReplyAction="*")]
        System.IAsyncResult BeginInsertarPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponse EndInsertarPaciente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarBiopsia", ReplyAction="*")]
        System.IAsyncResult BeginInsertarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponse EndInsertarBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarCitologiaNoGinecologica", ReplyAction="*")]
        System.IAsyncResult BeginInsertarCitologiaNoGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponse EndInsertarCitologiaNoGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarCitologiaGinecologica", ReplyAction="*")]
        System.IAsyncResult BeginInsertarCitologiaGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponse EndInsertarCitologiaGinecologica(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarMaterialEnviado", ReplyAction="*")]
        System.IAsyncResult BeginInsertarMaterialEnviado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponse EndInsertarMaterialEnviado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertarEmpleado", ReplyAction="*")]
        System.IAsyncResult BeginInsertarEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponse EndInsertarEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/buscarCitologia", ReplyAction="*")]
        System.IAsyncResult BeginbuscarCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponse EndbuscarCitologia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/buscarCitologiaLiquidos", ReplyAction="*")]
        System.IAsyncResult BeginbuscarCitologiaLiquidos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponse EndbuscarCitologiaLiquidos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/buscarBiopsia", ReplyAction="*")]
        System.IAsyncResult BeginbuscarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponse EndbuscarBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/buscarMuestraPorPaciente", ReplyAction="*")]
        System.IAsyncResult BeginbuscarMuestraPorPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponse EndbuscarMuestraPorPaciente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarMedico", ReplyAction="*")]
        System.IAsyncResult BeginBorrarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponse EndBorrarMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarMuestra", ReplyAction="*")]
        System.IAsyncResult BeginBorrarMuestra(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponse EndBorrarMuestra(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarMaterial", ReplyAction="*")]
        System.IAsyncResult BeginBorrarMaterial(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponse EndBorrarMaterial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BorrarEmpleado", ReplyAction="*")]
        System.IAsyncResult BeginBorrarEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponse EndBorrarEmpleado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarCitologia", ReplyAction="*")]
        System.IAsyncResult BeginActualizarCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponse EndActualizarCitologia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarBiopsia", ReplyAction="*")]
        System.IAsyncResult BeginActualizarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponse EndActualizarBiopsia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarCitologiaLiquidos", ReplyAction="*")]
        System.IAsyncResult BeginActualizarCitologiaLiquidos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponse EndActualizarCitologiaLiquidos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarMedico", ReplyAction="*")]
        System.IAsyncResult BeginActualizarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponse EndActualizarMedico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarPaciente", ReplyAction="*")]
        System.IAsyncResult BeginActualizarPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponse EndActualizarPaciente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarUsuario", ReplyAction="*")]
        System.IAsyncResult BeginActualizarUsuario(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequest request, System.AsyncCallback callback, object asyncState);
        
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponse EndActualizarUsuario(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class esUsuarioValidoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="esUsuarioValido", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequestBody Body;
        
        public esUsuarioValidoRequest() {
        }
        
        public esUsuarioValidoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class esUsuarioValidoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public esUsuarioValidoRequestBody() {
        }
        
        public esUsuarioValidoRequestBody(string usuario, string password) {
            this.usuario = usuario;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class esUsuarioValidoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="esUsuarioValidoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponseBody Body;
        
        public esUsuarioValidoResponse() {
        }
        
        public esUsuarioValidoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class esUsuarioValidoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string esUsuarioValidoResult;
        
        public esUsuarioValidoResponseBody() {
        }
        
        public esUsuarioValidoResponseBody(string esUsuarioValidoResult) {
            this.esUsuarioValidoResult = esUsuarioValidoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdeMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdeMedico", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequestBody Body;
        
        public getIDdeMedicoRequest() {
        }
        
        public getIDdeMedicoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdeMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_Medico;
        
        public getIDdeMedicoRequestBody() {
        }
        
        public getIDdeMedicoRequestBody(string nombre_Medico) {
            this.nombre_Medico = nombre_Medico;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdeMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdeMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponseBody Body;
        
        public getIDdeMedicoResponse() {
        }
        
        public getIDdeMedicoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdeMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int getIDdeMedicoResult;
        
        public getIDdeMedicoResponseBody() {
        }
        
        public getIDdeMedicoResponseBody(int getIDdeMedicoResult) {
            this.getIDdeMedicoResult = getIDdeMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdePacienteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdePaciente", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequestBody Body;
        
        public getIDdePacienteRequest() {
        }
        
        public getIDdePacienteRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdePacienteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre_Paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string s_nombre_Paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string apellido_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string s_apellido_paciente;
        
        public getIDdePacienteRequestBody() {
        }
        
        public getIDdePacienteRequestBody(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente) {
            this.nombre_Paciente = nombre_Paciente;
            this.s_nombre_Paciente = s_nombre_Paciente;
            this.apellido_paciente = apellido_paciente;
            this.s_apellido_paciente = s_apellido_paciente;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIDdePacienteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIDdePacienteResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponseBody Body;
        
        public getIDdePacienteResponse() {
        }
        
        public getIDdePacienteResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIDdePacienteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int getIDdePacienteResult;
        
        public getIDdePacienteResponseBody() {
        }
        
        public getIDdePacienteResponseBody(int getIDdePacienteResult) {
            this.getIDdePacienteResult = getIDdePacienteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicos_NombresRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicos_Nombres", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequestBody Body;
        
        public getMedicos_NombresRequest() {
        }
        
        public getMedicos_NombresRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getMedicos_NombresRequestBody {
        
        public getMedicos_NombresRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicos_NombresResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicos_NombresResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponseBody Body;
        
        public getMedicos_NombresResponse() {
        }
        
        public getMedicos_NombresResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicos_NombresResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMedicos_NombresResult;
        
        public getMedicos_NombresResponseBody() {
        }
        
        public getMedicos_NombresResponseBody(string getMedicos_NombresResult) {
            this.getMedicos_NombresResult = getMedicos_NombresResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicosTodosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicosTodos", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequestBody Body;
        
        public getMedicosTodosRequest() {
        }
        
        public getMedicosTodosRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getMedicosTodosRequestBody {
        
        public getMedicosTodosRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicosTodosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicosTodosResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponseBody Body;
        
        public getMedicosTodosResponse() {
        }
        
        public getMedicosTodosResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicosTodosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMedicosTodosResult;
        
        public getMedicosTodosResponseBody() {
        }
        
        public getMedicosTodosResponseBody(string getMedicosTodosResult) {
            this.getMedicosTodosResult = getMedicosTodosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviadoBiopsiaImprimirRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviadoBiopsiaImprimir", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequestBody Body;
        
        public getMaterialEnviadoBiopsiaImprimirRequest() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMaterialEnviadoBiopsiaImprimirRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string tabla;
        
        public getMaterialEnviadoBiopsiaImprimirRequestBody() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirRequestBody(string idMuestra, string tabla) {
            this.idMuestra = idMuestra;
            this.tabla = tabla;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviadoBiopsiaImprimirResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviadoBiopsiaImprimirResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponseBody Body;
        
        public getMaterialEnviadoBiopsiaImprimirResponse() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMaterialEnviadoBiopsiaImprimirResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMaterialEnviadoBiopsiaImprimirResult;
        
        public getMaterialEnviadoBiopsiaImprimirResponseBody() {
        }
        
        public getMaterialEnviadoBiopsiaImprimirResponseBody(string getMaterialEnviadoBiopsiaImprimirResult) {
            this.getMaterialEnviadoBiopsiaImprimirResult = getMaterialEnviadoBiopsiaImprimirResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviado_CitologiaNoGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequestBody Body;
        
        public getMaterialEnviado_CitologiaNoGinecologicaRequest() {
        }
        
        public getMaterialEnviado_CitologiaNoGinecologicaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaRequestBody {
        
        public getMaterialEnviado_CitologiaNoGinecologicaRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMaterialEnviado_CitologiaNoGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponseBody Body;
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponse() {
        }
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMaterialEnviado_CitologiaNoGinecologicaResult;
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponseBody() {
        }
        
        public getMaterialEnviado_CitologiaNoGinecologicaResponseBody(string getMaterialEnviado_CitologiaNoGinecologicaResult) {
            this.getMaterialEnviado_CitologiaNoGinecologicaResult = getMaterialEnviado_CitologiaNoGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedico", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequestBody Body;
        
        public getMedicoRequest() {
        }
        
        public getMedicoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int id_medico;
        
        public getMedicoRequestBody() {
        }
        
        public getMedicoRequestBody(int id_medico) {
            this.id_medico = id_medico;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponseBody Body;
        
        public getMedicoResponse() {
        }
        
        public getMedicoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMedicoResult;
        
        public getMedicoResponseBody() {
        }
        
        public getMedicoResponseBody(string getMedicoResult) {
            this.getMedicoResult = getMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequestBody Body;
        
        public getMuestraGinecologicaRequest() {
        }
        
        public getMuestraGinecologicaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraGinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public getMuestraGinecologicaRequestBody() {
        }
        
        public getMuestraGinecologicaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponseBody Body;
        
        public getMuestraGinecologicaResponse() {
        }
        
        public getMuestraGinecologicaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMuestraGinecologicaResult;
        
        public getMuestraGinecologicaResponseBody() {
        }
        
        public getMuestraGinecologicaResponseBody(string getMuestraGinecologicaResult) {
            this.getMuestraGinecologicaResult = getMuestraGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraNo_GinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraNo_Ginecologica", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequestBody Body;
        
        public getMuestraNo_GinecologicaRequest() {
        }
        
        public getMuestraNo_GinecologicaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraNo_GinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public getMuestraNo_GinecologicaRequestBody() {
        }
        
        public getMuestraNo_GinecologicaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraNo_GinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraNo_GinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponseBody Body;
        
        public getMuestraNo_GinecologicaResponse() {
        }
        
        public getMuestraNo_GinecologicaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraNo_GinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMuestraNo_GinecologicaResult;
        
        public getMuestraNo_GinecologicaResponseBody() {
        }
        
        public getMuestraNo_GinecologicaResponseBody(string getMuestraNo_GinecologicaResult) {
            this.getMuestraNo_GinecologicaResult = getMuestraNo_GinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequestBody Body;
        
        public getMuestraBiopsiaRequest() {
        }
        
        public getMuestraBiopsiaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public getMuestraBiopsiaRequestBody() {
        }
        
        public getMuestraBiopsiaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getMuestraBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getMuestraBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponseBody Body;
        
        public getMuestraBiopsiaResponse() {
        }
        
        public getMuestraBiopsiaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getMuestraBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getMuestraBiopsiaResult;
        
        public getMuestraBiopsiaResponseBody() {
        }
        
        public getMuestraBiopsiaResponseBody(string getMuestraBiopsiaResult) {
            this.getMuestraBiopsiaResult = getMuestraBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIdExamenesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIdExamenes", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequestBody Body;
        
        public getIdExamenesRequest() {
        }
        
        public getIdExamenesRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getIdExamenesRequestBody {
        
        public getIdExamenesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getIdExamenesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getIdExamenesResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponseBody Body;
        
        public getIdExamenesResponse() {
        }
        
        public getIdExamenesResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getIdExamenesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getIdExamenesResult;
        
        public getIdExamenesResponseBody() {
        }
        
        public getIdExamenesResponseBody(string getIdExamenesResult) {
            this.getIdExamenesResult = getIdExamenesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCantidadDeExamenesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getCantidadDeExamenes", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequestBody Body;
        
        public getCantidadDeExamenesRequest() {
        }
        
        public getCantidadDeExamenesRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getCantidadDeExamenesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string tabla;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string filtroedad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fechainicial;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fechafinal;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string filtroCategoria;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string doctor;
        
        public getCantidadDeExamenesRequestBody() {
        }
        
        public getCantidadDeExamenesRequestBody(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor) {
            this.tabla = tabla;
            this.filtroedad = filtroedad;
            this.fechainicial = fechainicial;
            this.fechafinal = fechafinal;
            this.filtroCategoria = filtroCategoria;
            this.doctor = doctor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCantidadDeExamenesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getCantidadDeExamenesResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponseBody Body;
        
        public getCantidadDeExamenesResponse() {
        }
        
        public getCantidadDeExamenesResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getCantidadDeExamenesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int getCantidadDeExamenesResult;
        
        public getCantidadDeExamenesResponseBody() {
        }
        
        public getCantidadDeExamenesResponseBody(int getCantidadDeExamenesResult) {
            this.getCantidadDeExamenesResult = getCantidadDeExamenesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getExamenesFiltradosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getExamenesFiltrados", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequestBody Body;
        
        public getExamenesFiltradosRequest() {
        }
        
        public getExamenesFiltradosRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getExamenesFiltradosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string tabla;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string filtroedad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fechainicial;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fechafinal;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string filtroCategoria;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string doctor;
        
        public getExamenesFiltradosRequestBody() {
        }
        
        public getExamenesFiltradosRequestBody(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor) {
            this.tabla = tabla;
            this.filtroedad = filtroedad;
            this.fechainicial = fechainicial;
            this.fechafinal = fechafinal;
            this.filtroCategoria = filtroCategoria;
            this.doctor = doctor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getExamenesFiltradosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getExamenesFiltradosResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponseBody Body;
        
        public getExamenesFiltradosResponse() {
        }
        
        public getExamenesFiltradosResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getExamenesFiltradosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getExamenesFiltradosResult;
        
        public getExamenesFiltradosResponseBody() {
        }
        
        public getExamenesFiltradosResponseBody(string getExamenesFiltradosResult) {
            this.getExamenesFiltradosResult = getExamenesFiltradosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoBiopsiasRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoBiopsias", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequestBody Body;
        
        public consultaMedicoBiopsiasRequest() {
        }
        
        public consultaMedicoBiopsiasRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoBiopsiasRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int mes;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string doctor;
        
        public consultaMedicoBiopsiasRequestBody() {
        }
        
        public consultaMedicoBiopsiasRequestBody(int anio, int mes, string doctor) {
            this.anio = anio;
            this.mes = mes;
            this.doctor = doctor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoBiopsiasResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoBiopsiasResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponseBody Body;
        
        public consultaMedicoBiopsiasResponse() {
        }
        
        public consultaMedicoBiopsiasResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoBiopsiasResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string consultaMedicoBiopsiasResult;
        
        public consultaMedicoBiopsiasResponseBody() {
        }
        
        public consultaMedicoBiopsiasResponseBody(string consultaMedicoBiopsiasResult) {
            this.consultaMedicoBiopsiasResult = consultaMedicoBiopsiasResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoCitologiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoCitologia", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequestBody Body;
        
        public consultaMedicoCitologiaRequest() {
        }
        
        public consultaMedicoCitologiaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoCitologiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int anio;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int mes;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string doctor;
        
        public consultaMedicoCitologiaRequestBody() {
        }
        
        public consultaMedicoCitologiaRequestBody(int anio, int mes, string doctor) {
            this.anio = anio;
            this.mes = mes;
            this.doctor = doctor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultaMedicoCitologiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultaMedicoCitologiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponseBody Body;
        
        public consultaMedicoCitologiaResponse() {
        }
        
        public consultaMedicoCitologiaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class consultaMedicoCitologiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string consultaMedicoCitologiaResult;
        
        public consultaMedicoCitologiaResponseBody() {
        }
        
        public consultaMedicoCitologiaResponseBody(string consultaMedicoCitologiaResult) {
            this.consultaMedicoCitologiaResult = consultaMedicoCitologiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getNombresPacientesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getNombresPacientes", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequestBody Body;
        
        public getNombresPacientesRequest() {
        }
        
        public getNombresPacientesRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getNombresPacientesRequestBody {
        
        public getNombresPacientesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getNombresPacientesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getNombresPacientesResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponseBody Body;
        
        public getNombresPacientesResponse() {
        }
        
        public getNombresPacientesResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getNombresPacientesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.NombreCompleto> getNombresPacientesResult;
        
        public getNombresPacientesResponseBody() {
        }
        
        public getNombresPacientesResponseBody(System.Collections.ObjectModel.ObservableCollection<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.NombreCompleto> getNombresPacientesResult) {
            this.getNombresPacientesResult = getNombresPacientesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getUsuariosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getUsuarios", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequestBody Body;
        
        public getUsuariosRequest() {
        }
        
        public getUsuariosRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getUsuariosRequestBody {
        
        public getUsuariosRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getUsuariosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getUsuariosResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponseBody Body;
        
        public getUsuariosResponse() {
        }
        
        public getUsuariosResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getUsuariosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getUsuariosResult;
        
        public getUsuariosResponseBody() {
        }
        
        public getUsuariosResponseBody(string getUsuariosResult) {
            this.getUsuariosResult = getUsuariosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getDatosEmpleadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getDatosEmpleado", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequestBody Body;
        
        public getDatosEmpleadoRequest() {
        }
        
        public getDatosEmpleadoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getDatosEmpleadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        public getDatosEmpleadoRequestBody() {
        }
        
        public getDatosEmpleadoRequestBody(string usuario) {
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getDatosEmpleadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getDatosEmpleadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponseBody Body;
        
        public getDatosEmpleadoResponse() {
        }
        
        public getDatosEmpleadoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getDatosEmpleadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getDatosEmpleadoResult;
        
        public getDatosEmpleadoResponseBody() {
        }
        
        public getDatosEmpleadoResponseBody(string getDatosEmpleadoResult) {
            this.getDatosEmpleadoResult = getDatosEmpleadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAccesosDeUsuarioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAccesosDeUsuario", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequestBody Body;
        
        public getAccesosDeUsuarioRequest() {
        }
        
        public getAccesosDeUsuarioRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAccesosDeUsuarioRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        public getAccesosDeUsuarioRequestBody() {
        }
        
        public getAccesosDeUsuarioRequestBody(string usuario) {
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAccesosDeUsuarioResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAccesosDeUsuarioResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponseBody Body;
        
        public getAccesosDeUsuarioResponse() {
        }
        
        public getAccesosDeUsuarioResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAccesosDeUsuarioResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getAccesosDeUsuarioResult;
        
        public getAccesosDeUsuarioResponseBody() {
        }
        
        public getAccesosDeUsuarioResponseBody(string getAccesosDeUsuarioResult) {
            this.getAccesosDeUsuarioResult = getAccesosDeUsuarioResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMedico", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequestBody Body;
        
        public InsertarMedicoRequest() {
        }
        
        public InsertarMedicoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string Nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string telefono;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string celular;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string direccion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string compania;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string numeroCol;
        
        public InsertarMedicoRequestBody() {
        }
        
        public InsertarMedicoRequestBody(string Nombre, string telefono, string celular, string direccion, string compania, string numeroCol) {
            this.Nombre = Nombre;
            this.telefono = telefono;
            this.celular = celular;
            this.direccion = direccion;
            this.compania = compania;
            this.numeroCol = numeroCol;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponseBody Body;
        
        public InsertarMedicoResponse() {
        }
        
        public InsertarMedicoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarMedicoResult;
        
        public InsertarMedicoResponseBody() {
        }
        
        public InsertarMedicoResponseBody(bool InsertarMedicoResult) {
            this.InsertarMedicoResult = InsertarMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterial", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequestBody Body;
        
        public InsertarMaterialRequest() {
        }
        
        public InsertarMaterialRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string material_enviado;
        
        public InsertarMaterialRequestBody() {
        }
        
        public InsertarMaterialRequestBody(string material_enviado) {
            this.material_enviado = material_enviado;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterialResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponseBody Body;
        
        public InsertarMaterialResponse() {
        }
        
        public InsertarMaterialResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarMaterialResult;
        
        public InsertarMaterialResponseBody() {
        }
        
        public InsertarMaterialResponseBody(bool InsertarMaterialResult) {
            this.InsertarMaterialResult = InsertarMaterialResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarPacienteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarPaciente", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequestBody Body;
        
        public InsertarPacienteRequest() {
        }
        
        public InsertarPacienteRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarPacienteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool DIU;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fur;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fup;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string pnombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string snombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string papellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string sapellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int edad;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool anticonceptivos;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string expediente;
        
        public InsertarPacienteRequestBody() {
        }
        
        public InsertarPacienteRequestBody(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente) {
            this.DIU = DIU;
            this.fur = fur;
            this.fup = fup;
            this.pnombre = pnombre;
            this.snombre = snombre;
            this.papellido = papellido;
            this.sapellido = sapellido;
            this.edad = edad;
            this.anticonceptivos = anticonceptivos;
            this.expediente = expediente;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarPacienteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarPacienteResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponseBody Body;
        
        public InsertarPacienteResponse() {
        }
        
        public InsertarPacienteResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarPacienteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarPacienteResult;
        
        public InsertarPacienteResponseBody() {
        }
        
        public InsertarPacienteResponseBody(bool InsertarPacienteResult) {
            this.InsertarPacienteResult = InsertarPacienteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequestBody Body;
        
        public InsertarBiopsiaRequest() {
        }
        
        public InsertarBiopsiaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fecha;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Id_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int id_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Nombre_Contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int anio_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int mes_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string usuario_empleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string descripcion_macros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string descripcion_micros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string codificacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string fechaHoy;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string fechaHoySQL;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string fechaRecibido;
        
        public InsertarBiopsiaRequestBody() {
        }
        
        public InsertarBiopsiaRequestBody(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido) {
            this.cod_examen = cod_examen;
            this.fecha = fecha;
            this.precio = precio;
            this.Diagnostico = Diagnostico;
            this.diagnostico_medico = diagnostico_medico;
            this.Id_paciente = Id_paciente;
            this.id_medico = id_medico;
            this.Nombre_Contable = Nombre_Contable;
            this.anio_contable = anio_contable;
            this.mes_contable = mes_contable;
            this.usuario_empleado = usuario_empleado;
            this.descripcion_macros = descripcion_macros;
            this.descripcion_micros = descripcion_micros;
            this.codificacion = codificacion;
            this.fechaHoy = fechaHoy;
            this.fechaHoySQL = fechaHoySQL;
            this.fechaRecibido = fechaRecibido;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponseBody Body;
        
        public InsertarBiopsiaResponse() {
        }
        
        public InsertarBiopsiaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarBiopsiaResult;
        
        public InsertarBiopsiaResponseBody() {
        }
        
        public InsertarBiopsiaResponseBody(bool InsertarBiopsiaResult) {
            this.InsertarBiopsiaResult = InsertarBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaNoGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaNoGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequestBody Body;
        
        public InsertarCitologiaNoGinecologicaRequest() {
        }
        
        public InsertarCitologiaNoGinecologicaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaNoGinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fecha;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Id_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int id_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Nombre_Contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int anio_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int mes_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string usuario_empleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string descripcion_macros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string descripcion_micros;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string comentario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string fechaHoy;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string fechaHoySQL;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string fechaRecibido;
        
        public InsertarCitologiaNoGinecologicaRequestBody() {
        }
        
        public InsertarCitologiaNoGinecologicaRequestBody(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido) {
            this.cod_examen = cod_examen;
            this.fecha = fecha;
            this.precio = precio;
            this.Diagnostico = Diagnostico;
            this.diagnostico_medico = diagnostico_medico;
            this.Id_paciente = Id_paciente;
            this.id_medico = id_medico;
            this.Nombre_Contable = Nombre_Contable;
            this.anio_contable = anio_contable;
            this.mes_contable = mes_contable;
            this.usuario_empleado = usuario_empleado;
            this.descripcion_macros = descripcion_macros;
            this.descripcion_micros = descripcion_micros;
            this.comentario = comentario;
            this.fechaHoy = fechaHoy;
            this.fechaHoySQL = fechaHoySQL;
            this.fechaRecibido = fechaRecibido;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaNoGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaNoGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponseBody Body;
        
        public InsertarCitologiaNoGinecologicaResponse() {
        }
        
        public InsertarCitologiaNoGinecologicaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaNoGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarCitologiaNoGinecologicaResult;
        
        public InsertarCitologiaNoGinecologicaResponseBody() {
        }
        
        public InsertarCitologiaNoGinecologicaResponseBody(bool InsertarCitologiaNoGinecologicaResult) {
            this.InsertarCitologiaNoGinecologicaResult = InsertarCitologiaNoGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaGinecologicaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaGinecologica", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequestBody Body;
        
        public InsertarCitologiaGinecologicaRequest() {
        }
        
        public InsertarCitologiaGinecologicaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaGinecologicaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fecha;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Id_paciente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int id_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Nombre_Contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int anio_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int mes_contable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string usuario_empleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string comentario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string inflamacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string calidadFrotis_causa;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public bool calidadFrotisAdecuado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public bool anticonceptivos;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public bool candida_sp;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public bool gardnerela;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public bool vaginosis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public bool herpes;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public bool tricomonas;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public string otroAgenteInfeccioso;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int evaluacionHormonal_basales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public int evaluacionhormonal_intermedias;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public int evaluacionhormonal_superficiales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public bool Colposcopia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public int repetir;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=27)]
        public string recomendaciones_otra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public bool recomendaciones_biopsia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public bool recomendaciones_tratamientos;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public bool NIC_I;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public bool NIC_II;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public bool NIC_III;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=33)]
        public string origen_muestra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=34)]
        public bool negativo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=35)]
        public bool VPH;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=36)]
        public bool glandular;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=37)]
        public bool escamoza;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=38)]
        public bool adenocarcinomana;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=39)]
        public bool carcinomana_celula;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=40)]
        public bool celula_atipica;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=41)]
        public bool lesion_escamosa_AltoGrado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=42)]
        public bool lesion_escamosa_BajoGrado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=43)]
        public string fechaHoy;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=44)]
        public string fechaHoySQL;
        
        public InsertarCitologiaGinecologicaRequestBody() {
        }
        
        public InsertarCitologiaGinecologicaRequestBody(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.cod_examen = cod_examen;
            this.fecha = fecha;
            this.precio = precio;
            this.Diagnostico = Diagnostico;
            this.diagnostico_medico = diagnostico_medico;
            this.Id_paciente = Id_paciente;
            this.id_medico = id_medico;
            this.Nombre_Contable = Nombre_Contable;
            this.anio_contable = anio_contable;
            this.mes_contable = mes_contable;
            this.usuario_empleado = usuario_empleado;
            this.comentario = comentario;
            this.inflamacion = inflamacion;
            this.calidadFrotis_causa = calidadFrotis_causa;
            this.calidadFrotisAdecuado = calidadFrotisAdecuado;
            this.anticonceptivos = anticonceptivos;
            this.candida_sp = candida_sp;
            this.gardnerela = gardnerela;
            this.vaginosis = vaginosis;
            this.herpes = herpes;
            this.tricomonas = tricomonas;
            this.otroAgenteInfeccioso = otroAgenteInfeccioso;
            this.evaluacionHormonal_basales = evaluacionHormonal_basales;
            this.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            this.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            this.Colposcopia = Colposcopia;
            this.repetir = repetir;
            this.recomendaciones_otra = recomendaciones_otra;
            this.recomendaciones_biopsia = recomendaciones_biopsia;
            this.recomendaciones_tratamientos = recomendaciones_tratamientos;
            this.NIC_I = NIC_I;
            this.NIC_II = NIC_II;
            this.NIC_III = NIC_III;
            this.origen_muestra = origen_muestra;
            this.negativo = negativo;
            this.VPH = VPH;
            this.glandular = glandular;
            this.escamoza = escamoza;
            this.adenocarcinomana = adenocarcinomana;
            this.carcinomana_celula = carcinomana_celula;
            this.celula_atipica = celula_atipica;
            this.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            this.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
            this.fechaHoy = fechaHoy;
            this.fechaHoySQL = fechaHoySQL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarCitologiaGinecologicaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarCitologiaGinecologicaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponseBody Body;
        
        public InsertarCitologiaGinecologicaResponse() {
        }
        
        public InsertarCitologiaGinecologicaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarCitologiaGinecologicaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarCitologiaGinecologicaResult;
        
        public InsertarCitologiaGinecologicaResponseBody() {
        }
        
        public InsertarCitologiaGinecologicaResponseBody(bool InsertarCitologiaGinecologicaResult) {
            this.InsertarCitologiaGinecologicaResult = InsertarCitologiaGinecologicaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialEnviadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterialEnviado", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequestBody Body;
        
        public InsertarMaterialEnviadoRequest() {
        }
        
        public InsertarMaterialEnviadoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialEnviadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string material_enviado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string tabla;
        
        public InsertarMaterialEnviadoRequestBody() {
        }
        
        public InsertarMaterialEnviadoRequestBody(string cod_examen, string material_enviado, string tabla) {
            this.cod_examen = cod_examen;
            this.material_enviado = material_enviado;
            this.tabla = tabla;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarMaterialEnviadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarMaterialEnviadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponseBody Body;
        
        public InsertarMaterialEnviadoResponse() {
        }
        
        public InsertarMaterialEnviadoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarMaterialEnviadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarMaterialEnviadoResult;
        
        public InsertarMaterialEnviadoResponseBody() {
        }
        
        public InsertarMaterialEnviadoResponseBody(bool InsertarMaterialEnviadoResult) {
            this.InsertarMaterialEnviadoResult = InsertarMaterialEnviadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarEmpleadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarEmpleado", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequestBody Body;
        
        public InsertarEmpleadoRequest() {
        }
        
        public InsertarEmpleadoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarEmpleadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string tipoEmpleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string p_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string s_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string p_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string s_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string contrasena;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string correo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string accesos;
        
        public InsertarEmpleadoRequestBody() {
        }
        
        public InsertarEmpleadoRequestBody(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos) {
            this.usuario = usuario;
            this.tipoEmpleado = tipoEmpleado;
            this.p_nombre = p_nombre;
            this.s_nombre = s_nombre;
            this.p_apellido = p_apellido;
            this.s_apellido = s_apellido;
            this.contrasena = contrasena;
            this.correo = correo;
            this.accesos = accesos;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertarEmpleadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertarEmpleadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponseBody Body;
        
        public InsertarEmpleadoResponse() {
        }
        
        public InsertarEmpleadoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertarEmpleadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertarEmpleadoResult;
        
        public InsertarEmpleadoResponseBody() {
        }
        
        public InsertarEmpleadoResponseBody(bool InsertarEmpleadoResult) {
            this.InsertarEmpleadoResult = InsertarEmpleadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologia", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequestBody Body;
        
        public buscarCitologiaRequest() {
        }
        
        public buscarCitologiaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public buscarCitologiaRequestBody() {
        }
        
        public buscarCitologiaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponseBody Body;
        
        public buscarCitologiaResponse() {
        }
        
        public buscarCitologiaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string buscarCitologiaResult;
        
        public buscarCitologiaResponseBody() {
        }
        
        public buscarCitologiaResponseBody(string buscarCitologiaResult) {
            this.buscarCitologiaResult = buscarCitologiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaLiquidosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologiaLiquidos", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequestBody Body;
        
        public buscarCitologiaLiquidosRequest() {
        }
        
        public buscarCitologiaLiquidosRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaLiquidosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public buscarCitologiaLiquidosRequestBody() {
        }
        
        public buscarCitologiaLiquidosRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarCitologiaLiquidosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarCitologiaLiquidosResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponseBody Body;
        
        public buscarCitologiaLiquidosResponse() {
        }
        
        public buscarCitologiaLiquidosResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarCitologiaLiquidosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string buscarCitologiaLiquidosResult;
        
        public buscarCitologiaLiquidosResponseBody() {
        }
        
        public buscarCitologiaLiquidosResponseBody(string buscarCitologiaLiquidosResult) {
            this.buscarCitologiaLiquidosResult = buscarCitologiaLiquidosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequestBody Body;
        
        public buscarBiopsiaRequest() {
        }
        
        public buscarBiopsiaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string idMuestra;
        
        public buscarBiopsiaRequestBody() {
        }
        
        public buscarBiopsiaRequestBody(string idMuestra) {
            this.idMuestra = idMuestra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponseBody Body;
        
        public buscarBiopsiaResponse() {
        }
        
        public buscarBiopsiaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string buscarBiopsiaResult;
        
        public buscarBiopsiaResponseBody() {
        }
        
        public buscarBiopsiaResponseBody(string buscarBiopsiaResult) {
            this.buscarBiopsiaResult = buscarBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarMuestraPorPacienteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarMuestraPorPaciente", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequestBody Body;
        
        public buscarMuestraPorPacienteRequest() {
        }
        
        public buscarMuestraPorPacienteRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarMuestraPorPacienteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string pNombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sNombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string pApellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string sApellido;
        
        public buscarMuestraPorPacienteRequestBody() {
        }
        
        public buscarMuestraPorPacienteRequestBody(string pNombre, string sNombre, string pApellido, string sApellido) {
            this.pNombre = pNombre;
            this.sNombre = sNombre;
            this.pApellido = pApellido;
            this.sApellido = sApellido;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class buscarMuestraPorPacienteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="buscarMuestraPorPacienteResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponseBody Body;
        
        public buscarMuestraPorPacienteResponse() {
        }
        
        public buscarMuestraPorPacienteResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class buscarMuestraPorPacienteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string buscarMuestraPorPacienteResult;
        
        public buscarMuestraPorPacienteResponseBody() {
        }
        
        public buscarMuestraPorPacienteResponseBody(string buscarMuestraPorPacienteResult) {
            this.buscarMuestraPorPacienteResult = buscarMuestraPorPacienteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMedico", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequestBody Body;
        
        public BorrarMedicoRequest() {
        }
        
        public BorrarMedicoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre;
        
        public BorrarMedicoRequestBody() {
        }
        
        public BorrarMedicoRequestBody(string nombre) {
            this.nombre = nombre;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponseBody Body;
        
        public BorrarMedicoResponse() {
        }
        
        public BorrarMedicoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarMedicoResult;
        
        public BorrarMedicoResponseBody() {
        }
        
        public BorrarMedicoResponseBody(bool BorrarMedicoResult) {
            this.BorrarMedicoResult = BorrarMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMuestraRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMuestra", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequestBody Body;
        
        public BorrarMuestraRequest() {
        }
        
        public BorrarMuestraRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMuestraRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string codigo;
        
        public BorrarMuestraRequestBody() {
        }
        
        public BorrarMuestraRequestBody(string codigo) {
            this.codigo = codigo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMuestraResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMuestraResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponseBody Body;
        
        public BorrarMuestraResponse() {
        }
        
        public BorrarMuestraResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMuestraResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarMuestraResult;
        
        public BorrarMuestraResponseBody() {
        }
        
        public BorrarMuestraResponseBody(bool BorrarMuestraResult) {
            this.BorrarMuestraResult = BorrarMuestraResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMaterialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMaterial", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequestBody Body;
        
        public BorrarMaterialRequest() {
        }
        
        public BorrarMaterialRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMaterialRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string material;
        
        public BorrarMaterialRequestBody() {
        }
        
        public BorrarMaterialRequestBody(string material) {
            this.material = material;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarMaterialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarMaterialResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponseBody Body;
        
        public BorrarMaterialResponse() {
        }
        
        public BorrarMaterialResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarMaterialResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarMaterialResult;
        
        public BorrarMaterialResponseBody() {
        }
        
        public BorrarMaterialResponseBody(bool BorrarMaterialResult) {
            this.BorrarMaterialResult = BorrarMaterialResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarEmpleadoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarEmpleado", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequestBody Body;
        
        public BorrarEmpleadoRequest() {
        }
        
        public BorrarEmpleadoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarEmpleadoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        public BorrarEmpleadoRequestBody() {
        }
        
        public BorrarEmpleadoRequestBody(string usuario) {
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BorrarEmpleadoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BorrarEmpleadoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponseBody Body;
        
        public BorrarEmpleadoResponse() {
        }
        
        public BorrarEmpleadoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class BorrarEmpleadoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool BorrarEmpleadoResult;
        
        public BorrarEmpleadoResponseBody() {
        }
        
        public BorrarEmpleadoResponseBody(bool BorrarEmpleadoResult) {
            this.BorrarEmpleadoResult = BorrarEmpleadoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologia", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequestBody Body;
        
        public ActualizarCitologiaRequest() {
        }
        
        public ActualizarCitologiaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string comentario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string inflamacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string calidadFrotis_causa;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool calidadFrotisAdecuado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool candida_sp;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool gardnerela;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool vaginosis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool herpes;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public bool tricomonas;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string otroAgenteInfeccioso;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int evaluacionHormonal_basales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public int evaluacionhormonal_intermedias;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int evaluacionhormonal_superficiales;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public bool Colposcopia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int repetir;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string recomendaciones_otra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public bool recomendaciones_biopsia;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public bool recomendaciones_tratamientos;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public bool NIC_I;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public bool NIC_II;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public bool NIC_III;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string origen_muestra;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public bool negativo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public bool VPH;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public bool glandular;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public bool escamosa;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public bool adenocarcinomana;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public bool carcinomana_celula;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public bool celula_atipica;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public bool lesion_escamosa_AltoGrado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public bool lesion_escamosa_BajoGrado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=33)]
        public bool anticonceptivos_orales;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=34)]
        public string fecha_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=35)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=36)]
        public bool diu;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=37)]
        public string fur;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=38)]
        public string fup;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=39)]
        public string p_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=40)]
        public string s_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=41)]
        public string p_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=42)]
        public string s_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=43)]
        public int edad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=44)]
        public string expediente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=45)]
        public int precio;
        
        public ActualizarCitologiaRequestBody() {
        }
        
        public ActualizarCitologiaRequestBody(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    bool anticonceptivos_orales, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio) {
            this.cod_examen = cod_examen;
            this.Diagnostico = Diagnostico;
            this.comentario = comentario;
            this.inflamacion = inflamacion;
            this.calidadFrotis_causa = calidadFrotis_causa;
            this.calidadFrotisAdecuado = calidadFrotisAdecuado;
            this.candida_sp = candida_sp;
            this.gardnerela = gardnerela;
            this.vaginosis = vaginosis;
            this.herpes = herpes;
            this.tricomonas = tricomonas;
            this.otroAgenteInfeccioso = otroAgenteInfeccioso;
            this.evaluacionHormonal_basales = evaluacionHormonal_basales;
            this.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            this.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            this.Colposcopia = Colposcopia;
            this.repetir = repetir;
            this.recomendaciones_otra = recomendaciones_otra;
            this.recomendaciones_biopsia = recomendaciones_biopsia;
            this.recomendaciones_tratamientos = recomendaciones_tratamientos;
            this.NIC_I = NIC_I;
            this.NIC_II = NIC_II;
            this.NIC_III = NIC_III;
            this.origen_muestra = origen_muestra;
            this.negativo = negativo;
            this.VPH = VPH;
            this.glandular = glandular;
            this.escamosa = escamosa;
            this.adenocarcinomana = adenocarcinomana;
            this.carcinomana_celula = carcinomana_celula;
            this.celula_atipica = celula_atipica;
            this.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            this.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
            this.anticonceptivos_orales = anticonceptivos_orales;
            this.fecha_examen = fecha_examen;
            this.diagnostico_medico = diagnostico_medico;
            this.diu = diu;
            this.fur = fur;
            this.fup = fup;
            this.p_nombre = p_nombre;
            this.s_nombre = s_nombre;
            this.p_apellido = p_apellido;
            this.s_apellido = s_apellido;
            this.edad = edad;
            this.expediente = expediente;
            this.precio = precio;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponseBody Body;
        
        public ActualizarCitologiaResponse() {
        }
        
        public ActualizarCitologiaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarCitologiaResult;
        
        public ActualizarCitologiaResponseBody() {
        }
        
        public ActualizarCitologiaResponseBody(bool ActualizarCitologiaResult) {
            this.ActualizarCitologiaResult = ActualizarCitologiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarBiopsiaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarBiopsia", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequestBody Body;
        
        public ActualizarBiopsiaRequest() {
        }
        
        public ActualizarBiopsiaRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarBiopsiaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string macroscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string microscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string codificacion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string fecha_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool diu;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string fur;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string fup;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string p_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string s_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string p_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string s_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int edad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string expediente;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string materialEnviado;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string fechaRecibido;
        
        public ActualizarBiopsiaRequestBody() {
        }
        
        public ActualizarBiopsiaRequestBody(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string codificacion, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    string materialEnviado, 
                    int precio, 
                    string fechaRecibido) {
            this.cod_examen = cod_examen;
            this.macroscopica = macroscopica;
            this.microscopica = microscopica;
            this.codificacion = codificacion;
            this.diagnostico = diagnostico;
            this.fecha_examen = fecha_examen;
            this.diagnostico_medico = diagnostico_medico;
            this.diu = diu;
            this.fur = fur;
            this.fup = fup;
            this.p_nombre = p_nombre;
            this.s_nombre = s_nombre;
            this.p_apellido = p_apellido;
            this.s_apellido = s_apellido;
            this.edad = edad;
            this.expediente = expediente;
            this.materialEnviado = materialEnviado;
            this.precio = precio;
            this.fechaRecibido = fechaRecibido;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarBiopsiaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarBiopsiaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponseBody Body;
        
        public ActualizarBiopsiaResponse() {
        }
        
        public ActualizarBiopsiaResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarBiopsiaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarBiopsiaResult;
        
        public ActualizarBiopsiaResponseBody() {
        }
        
        public ActualizarBiopsiaResponseBody(bool ActualizarBiopsiaResult) {
            this.ActualizarBiopsiaResult = ActualizarBiopsiaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaLiquidosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologiaLiquidos", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequestBody Body;
        
        public ActualizarCitologiaLiquidosRequest() {
        }
        
        public ActualizarCitologiaLiquidosRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaLiquidosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cod_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string macroscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string microscopica;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string diagnostico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string fecha_examen;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string diagnostico_medico;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool diu;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string fur;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string fup;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string p_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string s_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string p_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string s_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public int edad;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string expediente;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public int precio;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string material_enviado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string fechaRecibido;
        
        public ActualizarCitologiaLiquidosRequestBody() {
        }
        
        public ActualizarCitologiaLiquidosRequestBody(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio, 
                    string material_enviado, 
                    string fechaRecibido) {
            this.cod_examen = cod_examen;
            this.macroscopica = macroscopica;
            this.microscopica = microscopica;
            this.diagnostico = diagnostico;
            this.fecha_examen = fecha_examen;
            this.diagnostico_medico = diagnostico_medico;
            this.diu = diu;
            this.fur = fur;
            this.fup = fup;
            this.p_nombre = p_nombre;
            this.s_nombre = s_nombre;
            this.p_apellido = p_apellido;
            this.s_apellido = s_apellido;
            this.edad = edad;
            this.expediente = expediente;
            this.precio = precio;
            this.material_enviado = material_enviado;
            this.fechaRecibido = fechaRecibido;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarCitologiaLiquidosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarCitologiaLiquidosResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponseBody Body;
        
        public ActualizarCitologiaLiquidosResponse() {
        }
        
        public ActualizarCitologiaLiquidosResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarCitologiaLiquidosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarCitologiaLiquidosResult;
        
        public ActualizarCitologiaLiquidosResponseBody() {
        }
        
        public ActualizarCitologiaLiquidosResponseBody(bool ActualizarCitologiaLiquidosResult) {
            this.ActualizarCitologiaLiquidosResult = ActualizarCitologiaLiquidosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarMedicoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarMedico", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequestBody Body;
        
        public ActualizarMedicoRequest() {
        }
        
        public ActualizarMedicoRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarMedicoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string telefono;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string celular;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string direccion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string compania;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string numeroCol;
        
        public ActualizarMedicoRequestBody() {
        }
        
        public ActualizarMedicoRequestBody(string nombre, string telefono, string celular, string direccion, string compania, string numeroCol) {
            this.nombre = nombre;
            this.telefono = telefono;
            this.celular = celular;
            this.direccion = direccion;
            this.compania = compania;
            this.numeroCol = numeroCol;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarMedicoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarMedicoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponseBody Body;
        
        public ActualizarMedicoResponse() {
        }
        
        public ActualizarMedicoResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarMedicoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarMedicoResult;
        
        public ActualizarMedicoResponseBody() {
        }
        
        public ActualizarMedicoResponseBody(bool ActualizarMedicoResult) {
            this.ActualizarMedicoResult = ActualizarMedicoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarPacienteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarPaciente", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequestBody Body;
        
        public ActualizarPacienteRequest() {
        }
        
        public ActualizarPacienteRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarPacienteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int id;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool DIU;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fur;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fup;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string pnombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string snombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string papellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string sapellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int edad;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool anticonceptivos;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string Expediente;
        
        public ActualizarPacienteRequestBody() {
        }
        
        public ActualizarPacienteRequestBody(int id, bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string Expediente) {
            this.id = id;
            this.DIU = DIU;
            this.fur = fur;
            this.fup = fup;
            this.pnombre = pnombre;
            this.snombre = snombre;
            this.papellido = papellido;
            this.sapellido = sapellido;
            this.edad = edad;
            this.anticonceptivos = anticonceptivos;
            this.Expediente = Expediente;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarPacienteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarPacienteResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponseBody Body;
        
        public ActualizarPacienteResponse() {
        }
        
        public ActualizarPacienteResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarPacienteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarPacienteResult;
        
        public ActualizarPacienteResponseBody() {
        }
        
        public ActualizarPacienteResponseBody(bool ActualizarPacienteResult) {
            this.ActualizarPacienteResult = ActualizarPacienteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarUsuarioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarUsuario", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequestBody Body;
        
        public ActualizarUsuarioRequest() {
        }
        
        public ActualizarUsuarioRequest(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarUsuarioRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string usuario;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string tipoEmpleado;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string p_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string s_nombre;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string p_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string s_apellido;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string contrasena;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string correo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string accesos;
        
        public ActualizarUsuarioRequestBody() {
        }
        
        public ActualizarUsuarioRequestBody(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos) {
            this.usuario = usuario;
            this.tipoEmpleado = tipoEmpleado;
            this.p_nombre = p_nombre;
            this.s_nombre = s_nombre;
            this.p_apellido = p_apellido;
            this.s_apellido = s_apellido;
            this.contrasena = contrasena;
            this.correo = correo;
            this.accesos = accesos;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActualizarUsuarioResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActualizarUsuarioResponse", Namespace="http://tempuri.org/", Order=0)]
        public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponseBody Body;
        
        public ActualizarUsuarioResponse() {
        }
        
        public ActualizarUsuarioResponse(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActualizarUsuarioResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ActualizarUsuarioResult;
        
        public ActualizarUsuarioResponseBody() {
        }
        
        public ActualizarUsuarioResponseBody(bool ActualizarUsuarioResult) {
            this.ActualizarUsuarioResult = ActualizarUsuarioResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSClinicaSoapChannel : Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class esUsuarioValidoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public esUsuarioValidoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIDdeMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIDdeMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIDdePacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIDdePacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMedicos_NombresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMedicos_NombresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMedicosTodosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMedicosTodosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMaterialEnviadoBiopsiaImprimirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMaterialEnviadoBiopsiaImprimirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMuestraGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMuestraGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMuestraNo_GinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMuestraNo_GinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMuestraBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMuestraBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getIdExamenesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getIdExamenesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCantidadDeExamenesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCantidadDeExamenesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getExamenesFiltradosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getExamenesFiltradosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class consultaMedicoBiopsiasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public consultaMedicoBiopsiasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class consultaMedicoCitologiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public consultaMedicoCitologiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getNombresPacientesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getNombresPacientesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.NombreCompleto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.NombreCompleto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getUsuariosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getUsuariosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDatosEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDatosEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAccesosDeUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAccesosDeUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarCitologiaNoGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarCitologiaNoGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarCitologiaGinecologicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarCitologiaGinecologicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarMaterialEnviadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarMaterialEnviadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class buscarCitologiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public buscarCitologiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class buscarCitologiaLiquidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public buscarCitologiaLiquidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class buscarBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public buscarBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class buscarMuestraPorPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public buscarMuestraPorPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarMuestraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarMuestraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrarEmpleadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrarEmpleadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarCitologiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarCitologiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarBiopsiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarBiopsiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarCitologiaLiquidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarCitologiaLiquidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSClinicaSoapClient : System.ServiceModel.ClientBase<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap>, Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap {
        
        private BeginOperationDelegate onBeginesUsuarioValidoDelegate;
        
        private EndOperationDelegate onEndesUsuarioValidoDelegate;
        
        private System.Threading.SendOrPostCallback onesUsuarioValidoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIDdeMedicoDelegate;
        
        private EndOperationDelegate onEndgetIDdeMedicoDelegate;
        
        private System.Threading.SendOrPostCallback ongetIDdeMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIDdePacienteDelegate;
        
        private EndOperationDelegate onEndgetIDdePacienteDelegate;
        
        private System.Threading.SendOrPostCallback ongetIDdePacienteCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMedicos_NombresDelegate;
        
        private EndOperationDelegate onEndgetMedicos_NombresDelegate;
        
        private System.Threading.SendOrPostCallback ongetMedicos_NombresCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMedicosTodosDelegate;
        
        private EndOperationDelegate onEndgetMedicosTodosDelegate;
        
        private System.Threading.SendOrPostCallback ongetMedicosTodosCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMaterialEnviadoBiopsiaImprimirDelegate;
        
        private EndOperationDelegate onEndgetMaterialEnviadoBiopsiaImprimirDelegate;
        
        private System.Threading.SendOrPostCallback ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate;
        
        private EndOperationDelegate onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMedicoDelegate;
        
        private EndOperationDelegate onEndgetMedicoDelegate;
        
        private System.Threading.SendOrPostCallback ongetMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMuestraGinecologicaDelegate;
        
        private EndOperationDelegate onEndgetMuestraGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMuestraGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMuestraNo_GinecologicaDelegate;
        
        private EndOperationDelegate onEndgetMuestraNo_GinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMuestraNo_GinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMuestraBiopsiaDelegate;
        
        private EndOperationDelegate onEndgetMuestraBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback ongetMuestraBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetIdExamenesDelegate;
        
        private EndOperationDelegate onEndgetIdExamenesDelegate;
        
        private System.Threading.SendOrPostCallback ongetIdExamenesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCantidadDeExamenesDelegate;
        
        private EndOperationDelegate onEndgetCantidadDeExamenesDelegate;
        
        private System.Threading.SendOrPostCallback ongetCantidadDeExamenesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetExamenesFiltradosDelegate;
        
        private EndOperationDelegate onEndgetExamenesFiltradosDelegate;
        
        private System.Threading.SendOrPostCallback ongetExamenesFiltradosCompletedDelegate;
        
        private BeginOperationDelegate onBeginconsultaMedicoBiopsiasDelegate;
        
        private EndOperationDelegate onEndconsultaMedicoBiopsiasDelegate;
        
        private System.Threading.SendOrPostCallback onconsultaMedicoBiopsiasCompletedDelegate;
        
        private BeginOperationDelegate onBeginconsultaMedicoCitologiaDelegate;
        
        private EndOperationDelegate onEndconsultaMedicoCitologiaDelegate;
        
        private System.Threading.SendOrPostCallback onconsultaMedicoCitologiaCompletedDelegate;
        
        private BeginOperationDelegate onBegingetNombresPacientesDelegate;
        
        private EndOperationDelegate onEndgetNombresPacientesDelegate;
        
        private System.Threading.SendOrPostCallback ongetNombresPacientesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetUsuariosDelegate;
        
        private EndOperationDelegate onEndgetUsuariosDelegate;
        
        private System.Threading.SendOrPostCallback ongetUsuariosCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDatosEmpleadoDelegate;
        
        private EndOperationDelegate onEndgetDatosEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback ongetDatosEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAccesosDeUsuarioDelegate;
        
        private EndOperationDelegate onEndgetAccesosDeUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback ongetAccesosDeUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarMedicoDelegate;
        
        private EndOperationDelegate onEndInsertarMedicoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarMaterialDelegate;
        
        private EndOperationDelegate onEndInsertarMaterialDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarMaterialCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarPacienteDelegate;
        
        private EndOperationDelegate onEndInsertarPacienteDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarPacienteCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarBiopsiaDelegate;
        
        private EndOperationDelegate onEndInsertarBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarCitologiaNoGinecologicaDelegate;
        
        private EndOperationDelegate onEndInsertarCitologiaNoGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarCitologiaNoGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarCitologiaGinecologicaDelegate;
        
        private EndOperationDelegate onEndInsertarCitologiaGinecologicaDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarCitologiaGinecologicaCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarMaterialEnviadoDelegate;
        
        private EndOperationDelegate onEndInsertarMaterialEnviadoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarMaterialEnviadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarEmpleadoDelegate;
        
        private EndOperationDelegate onEndInsertarEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginbuscarCitologiaDelegate;
        
        private EndOperationDelegate onEndbuscarCitologiaDelegate;
        
        private System.Threading.SendOrPostCallback onbuscarCitologiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginbuscarCitologiaLiquidosDelegate;
        
        private EndOperationDelegate onEndbuscarCitologiaLiquidosDelegate;
        
        private System.Threading.SendOrPostCallback onbuscarCitologiaLiquidosCompletedDelegate;
        
        private BeginOperationDelegate onBeginbuscarBiopsiaDelegate;
        
        private EndOperationDelegate onEndbuscarBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback onbuscarBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginbuscarMuestraPorPacienteDelegate;
        
        private EndOperationDelegate onEndbuscarMuestraPorPacienteDelegate;
        
        private System.Threading.SendOrPostCallback onbuscarMuestraPorPacienteCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarMedicoDelegate;
        
        private EndOperationDelegate onEndBorrarMedicoDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarMuestraDelegate;
        
        private EndOperationDelegate onEndBorrarMuestraDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarMuestraCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarMaterialDelegate;
        
        private EndOperationDelegate onEndBorrarMaterialDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarMaterialCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrarEmpleadoDelegate;
        
        private EndOperationDelegate onEndBorrarEmpleadoDelegate;
        
        private System.Threading.SendOrPostCallback onBorrarEmpleadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarCitologiaDelegate;
        
        private EndOperationDelegate onEndActualizarCitologiaDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarCitologiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarBiopsiaDelegate;
        
        private EndOperationDelegate onEndActualizarBiopsiaDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarBiopsiaCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarCitologiaLiquidosDelegate;
        
        private EndOperationDelegate onEndActualizarCitologiaLiquidosDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarCitologiaLiquidosCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarMedicoDelegate;
        
        private EndOperationDelegate onEndActualizarMedicoDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarMedicoCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarPacienteDelegate;
        
        private EndOperationDelegate onEndActualizarPacienteDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarPacienteCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarUsuarioDelegate;
        
        private EndOperationDelegate onEndActualizarUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WSClinicaSoapClient() {
        }
        
        public WSClinicaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSClinicaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSClinicaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSClinicaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<esUsuarioValidoCompletedEventArgs> esUsuarioValidoCompleted;
        
        public event System.EventHandler<getIDdeMedicoCompletedEventArgs> getIDdeMedicoCompleted;
        
        public event System.EventHandler<getIDdePacienteCompletedEventArgs> getIDdePacienteCompleted;
        
        public event System.EventHandler<getMedicos_NombresCompletedEventArgs> getMedicos_NombresCompleted;
        
        public event System.EventHandler<getMedicosTodosCompletedEventArgs> getMedicosTodosCompleted;
        
        public event System.EventHandler<getMaterialEnviadoBiopsiaImprimirCompletedEventArgs> getMaterialEnviadoBiopsiaImprimirCompleted;
        
        public event System.EventHandler<getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs> getMaterialEnviado_CitologiaNoGinecologicaCompleted;
        
        public event System.EventHandler<getMedicoCompletedEventArgs> getMedicoCompleted;
        
        public event System.EventHandler<getMuestraGinecologicaCompletedEventArgs> getMuestraGinecologicaCompleted;
        
        public event System.EventHandler<getMuestraNo_GinecologicaCompletedEventArgs> getMuestraNo_GinecologicaCompleted;
        
        public event System.EventHandler<getMuestraBiopsiaCompletedEventArgs> getMuestraBiopsiaCompleted;
        
        public event System.EventHandler<getIdExamenesCompletedEventArgs> getIdExamenesCompleted;
        
        public event System.EventHandler<getCantidadDeExamenesCompletedEventArgs> getCantidadDeExamenesCompleted;
        
        public event System.EventHandler<getExamenesFiltradosCompletedEventArgs> getExamenesFiltradosCompleted;
        
        public event System.EventHandler<consultaMedicoBiopsiasCompletedEventArgs> consultaMedicoBiopsiasCompleted;
        
        public event System.EventHandler<consultaMedicoCitologiaCompletedEventArgs> consultaMedicoCitologiaCompleted;
        
        public event System.EventHandler<getNombresPacientesCompletedEventArgs> getNombresPacientesCompleted;
        
        public event System.EventHandler<getUsuariosCompletedEventArgs> getUsuariosCompleted;
        
        public event System.EventHandler<getDatosEmpleadoCompletedEventArgs> getDatosEmpleadoCompleted;
        
        public event System.EventHandler<getAccesosDeUsuarioCompletedEventArgs> getAccesosDeUsuarioCompleted;
        
        public event System.EventHandler<InsertarMedicoCompletedEventArgs> InsertarMedicoCompleted;
        
        public event System.EventHandler<InsertarMaterialCompletedEventArgs> InsertarMaterialCompleted;
        
        public event System.EventHandler<InsertarPacienteCompletedEventArgs> InsertarPacienteCompleted;
        
        public event System.EventHandler<InsertarBiopsiaCompletedEventArgs> InsertarBiopsiaCompleted;
        
        public event System.EventHandler<InsertarCitologiaNoGinecologicaCompletedEventArgs> InsertarCitologiaNoGinecologicaCompleted;
        
        public event System.EventHandler<InsertarCitologiaGinecologicaCompletedEventArgs> InsertarCitologiaGinecologicaCompleted;
        
        public event System.EventHandler<InsertarMaterialEnviadoCompletedEventArgs> InsertarMaterialEnviadoCompleted;
        
        public event System.EventHandler<InsertarEmpleadoCompletedEventArgs> InsertarEmpleadoCompleted;
        
        public event System.EventHandler<buscarCitologiaCompletedEventArgs> buscarCitologiaCompleted;
        
        public event System.EventHandler<buscarCitologiaLiquidosCompletedEventArgs> buscarCitologiaLiquidosCompleted;
        
        public event System.EventHandler<buscarBiopsiaCompletedEventArgs> buscarBiopsiaCompleted;
        
        public event System.EventHandler<buscarMuestraPorPacienteCompletedEventArgs> buscarMuestraPorPacienteCompleted;
        
        public event System.EventHandler<BorrarMedicoCompletedEventArgs> BorrarMedicoCompleted;
        
        public event System.EventHandler<BorrarMuestraCompletedEventArgs> BorrarMuestraCompleted;
        
        public event System.EventHandler<BorrarMaterialCompletedEventArgs> BorrarMaterialCompleted;
        
        public event System.EventHandler<BorrarEmpleadoCompletedEventArgs> BorrarEmpleadoCompleted;
        
        public event System.EventHandler<ActualizarCitologiaCompletedEventArgs> ActualizarCitologiaCompleted;
        
        public event System.EventHandler<ActualizarBiopsiaCompletedEventArgs> ActualizarBiopsiaCompleted;
        
        public event System.EventHandler<ActualizarCitologiaLiquidosCompletedEventArgs> ActualizarCitologiaLiquidosCompleted;
        
        public event System.EventHandler<ActualizarMedicoCompletedEventArgs> ActualizarMedicoCompleted;
        
        public event System.EventHandler<ActualizarPacienteCompletedEventArgs> ActualizarPacienteCompleted;
        
        public event System.EventHandler<ActualizarUsuarioCompletedEventArgs> ActualizarUsuarioCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginesUsuarioValido(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginesUsuarioValido(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginesUsuarioValido(string usuario, string password, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequestBody();
            inValue.Body.usuario = usuario;
            inValue.Body.password = password;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginesUsuarioValido(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndesUsuarioValido(System.IAsyncResult result) {
            return base.Channel.EndesUsuarioValido(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndesUsuarioValido(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndesUsuarioValido(result);
            return retVal.Body.esUsuarioValidoResult;
        }
        
        private System.IAsyncResult OnBeginesUsuarioValido(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginesUsuarioValido(usuario, password, callback, asyncState);
        }
        
        private object[] OnEndesUsuarioValido(System.IAsyncResult result) {
            string retVal = this.EndesUsuarioValido(result);
            return new object[] {
                    retVal};
        }
        
        private void OnesUsuarioValidoCompleted(object state) {
            if ((this.esUsuarioValidoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.esUsuarioValidoCompleted(this, new esUsuarioValidoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void esUsuarioValidoAsync(string usuario, string password) {
            this.esUsuarioValidoAsync(usuario, password, null);
        }
        
        public void esUsuarioValidoAsync(string usuario, string password, object userState) {
            if ((this.onBeginesUsuarioValidoDelegate == null)) {
                this.onBeginesUsuarioValidoDelegate = new BeginOperationDelegate(this.OnBeginesUsuarioValido);
            }
            if ((this.onEndesUsuarioValidoDelegate == null)) {
                this.onEndesUsuarioValidoDelegate = new EndOperationDelegate(this.OnEndesUsuarioValido);
            }
            if ((this.onesUsuarioValidoCompletedDelegate == null)) {
                this.onesUsuarioValidoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnesUsuarioValidoCompleted);
            }
            base.InvokeAsync(this.onBeginesUsuarioValidoDelegate, new object[] {
                        usuario,
                        password}, this.onEndesUsuarioValidoDelegate, this.onesUsuarioValidoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetIDdeMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIDdeMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIDdeMedico(string nombre_Medico, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequestBody();
            inValue.Body.nombre_Medico = nombre_Medico;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetIDdeMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetIDdeMedico(System.IAsyncResult result) {
            return base.Channel.EndgetIDdeMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndgetIDdeMedico(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetIDdeMedico(result);
            return retVal.Body.getIDdeMedicoResult;
        }
        
        private System.IAsyncResult OnBegingetIDdeMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_Medico = ((string)(inValues[0]));
            return this.BegingetIDdeMedico(nombre_Medico, callback, asyncState);
        }
        
        private object[] OnEndgetIDdeMedico(System.IAsyncResult result) {
            int retVal = this.EndgetIDdeMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIDdeMedicoCompleted(object state) {
            if ((this.getIDdeMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIDdeMedicoCompleted(this, new getIDdeMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIDdeMedicoAsync(string nombre_Medico) {
            this.getIDdeMedicoAsync(nombre_Medico, null);
        }
        
        public void getIDdeMedicoAsync(string nombre_Medico, object userState) {
            if ((this.onBegingetIDdeMedicoDelegate == null)) {
                this.onBegingetIDdeMedicoDelegate = new BeginOperationDelegate(this.OnBegingetIDdeMedico);
            }
            if ((this.onEndgetIDdeMedicoDelegate == null)) {
                this.onEndgetIDdeMedicoDelegate = new EndOperationDelegate(this.OnEndgetIDdeMedico);
            }
            if ((this.ongetIDdeMedicoCompletedDelegate == null)) {
                this.ongetIDdeMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIDdeMedicoCompleted);
            }
            base.InvokeAsync(this.onBegingetIDdeMedicoDelegate, new object[] {
                        nombre_Medico}, this.onEndgetIDdeMedicoDelegate, this.ongetIDdeMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetIDdePaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIDdePaciente(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIDdePaciente(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequestBody();
            inValue.Body.nombre_Paciente = nombre_Paciente;
            inValue.Body.s_nombre_Paciente = s_nombre_Paciente;
            inValue.Body.apellido_paciente = apellido_paciente;
            inValue.Body.s_apellido_paciente = s_apellido_paciente;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetIDdePaciente(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetIDdePaciente(System.IAsyncResult result) {
            return base.Channel.EndgetIDdePaciente(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndgetIDdePaciente(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetIDdePaciente(result);
            return retVal.Body.getIDdePacienteResult;
        }
        
        private System.IAsyncResult OnBegingetIDdePaciente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre_Paciente = ((string)(inValues[0]));
            string s_nombre_Paciente = ((string)(inValues[1]));
            string apellido_paciente = ((string)(inValues[2]));
            string s_apellido_paciente = ((string)(inValues[3]));
            return this.BegingetIDdePaciente(nombre_Paciente, s_nombre_Paciente, apellido_paciente, s_apellido_paciente, callback, asyncState);
        }
        
        private object[] OnEndgetIDdePaciente(System.IAsyncResult result) {
            int retVal = this.EndgetIDdePaciente(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIDdePacienteCompleted(object state) {
            if ((this.getIDdePacienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIDdePacienteCompleted(this, new getIDdePacienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIDdePacienteAsync(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente) {
            this.getIDdePacienteAsync(nombre_Paciente, s_nombre_Paciente, apellido_paciente, s_apellido_paciente, null);
        }
        
        public void getIDdePacienteAsync(string nombre_Paciente, string s_nombre_Paciente, string apellido_paciente, string s_apellido_paciente, object userState) {
            if ((this.onBegingetIDdePacienteDelegate == null)) {
                this.onBegingetIDdePacienteDelegate = new BeginOperationDelegate(this.OnBegingetIDdePaciente);
            }
            if ((this.onEndgetIDdePacienteDelegate == null)) {
                this.onEndgetIDdePacienteDelegate = new EndOperationDelegate(this.OnEndgetIDdePaciente);
            }
            if ((this.ongetIDdePacienteCompletedDelegate == null)) {
                this.ongetIDdePacienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIDdePacienteCompleted);
            }
            base.InvokeAsync(this.onBegingetIDdePacienteDelegate, new object[] {
                        nombre_Paciente,
                        s_nombre_Paciente,
                        apellido_paciente,
                        s_apellido_paciente}, this.onEndgetIDdePacienteDelegate, this.ongetIDdePacienteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMedicos_Nombres(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMedicos_Nombres(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMedicos_Nombres(System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequestBody();
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMedicos_Nombres(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMedicos_Nombres(System.IAsyncResult result) {
            return base.Channel.EndgetMedicos_Nombres(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMedicos_Nombres(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMedicos_Nombres(result);
            return retVal.Body.getMedicos_NombresResult;
        }
        
        private System.IAsyncResult OnBegingetMedicos_Nombres(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetMedicos_Nombres(callback, asyncState);
        }
        
        private object[] OnEndgetMedicos_Nombres(System.IAsyncResult result) {
            string retVal = this.EndgetMedicos_Nombres(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMedicos_NombresCompleted(object state) {
            if ((this.getMedicos_NombresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMedicos_NombresCompleted(this, new getMedicos_NombresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMedicos_NombresAsync() {
            this.getMedicos_NombresAsync(null);
        }
        
        public void getMedicos_NombresAsync(object userState) {
            if ((this.onBegingetMedicos_NombresDelegate == null)) {
                this.onBegingetMedicos_NombresDelegate = new BeginOperationDelegate(this.OnBegingetMedicos_Nombres);
            }
            if ((this.onEndgetMedicos_NombresDelegate == null)) {
                this.onEndgetMedicos_NombresDelegate = new EndOperationDelegate(this.OnEndgetMedicos_Nombres);
            }
            if ((this.ongetMedicos_NombresCompletedDelegate == null)) {
                this.ongetMedicos_NombresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMedicos_NombresCompleted);
            }
            base.InvokeAsync(this.onBegingetMedicos_NombresDelegate, null, this.onEndgetMedicos_NombresDelegate, this.ongetMedicos_NombresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMedicosTodos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMedicosTodos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMedicosTodos(System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequestBody();
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMedicosTodos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMedicosTodos(System.IAsyncResult result) {
            return base.Channel.EndgetMedicosTodos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMedicosTodos(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMedicosTodos(result);
            return retVal.Body.getMedicosTodosResult;
        }
        
        private System.IAsyncResult OnBegingetMedicosTodos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetMedicosTodos(callback, asyncState);
        }
        
        private object[] OnEndgetMedicosTodos(System.IAsyncResult result) {
            string retVal = this.EndgetMedicosTodos(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMedicosTodosCompleted(object state) {
            if ((this.getMedicosTodosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMedicosTodosCompleted(this, new getMedicosTodosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMedicosTodosAsync() {
            this.getMedicosTodosAsync(null);
        }
        
        public void getMedicosTodosAsync(object userState) {
            if ((this.onBegingetMedicosTodosDelegate == null)) {
                this.onBegingetMedicosTodosDelegate = new BeginOperationDelegate(this.OnBegingetMedicosTodos);
            }
            if ((this.onEndgetMedicosTodosDelegate == null)) {
                this.onEndgetMedicosTodosDelegate = new EndOperationDelegate(this.OnEndgetMedicosTodos);
            }
            if ((this.ongetMedicosTodosCompletedDelegate == null)) {
                this.ongetMedicosTodosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMedicosTodosCompleted);
            }
            base.InvokeAsync(this.onBegingetMedicosTodosDelegate, null, this.onEndgetMedicosTodosDelegate, this.ongetMedicosTodosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMaterialEnviadoBiopsiaImprimir(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMaterialEnviadoBiopsiaImprimir(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMaterialEnviadoBiopsiaImprimir(string idMuestra, string tabla, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequestBody();
            inValue.Body.idMuestra = idMuestra;
            inValue.Body.tabla = tabla;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMaterialEnviadoBiopsiaImprimir(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
            return base.Channel.EndgetMaterialEnviadoBiopsiaImprimir(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMaterialEnviadoBiopsiaImprimir(result);
            return retVal.Body.getMaterialEnviadoBiopsiaImprimirResult;
        }
        
        private System.IAsyncResult OnBegingetMaterialEnviadoBiopsiaImprimir(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            string tabla = ((string)(inValues[1]));
            return this.BegingetMaterialEnviadoBiopsiaImprimir(idMuestra, tabla, callback, asyncState);
        }
        
        private object[] OnEndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
            string retVal = this.EndgetMaterialEnviadoBiopsiaImprimir(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMaterialEnviadoBiopsiaImprimirCompleted(object state) {
            if ((this.getMaterialEnviadoBiopsiaImprimirCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMaterialEnviadoBiopsiaImprimirCompleted(this, new getMaterialEnviadoBiopsiaImprimirCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMaterialEnviadoBiopsiaImprimirAsync(string idMuestra, string tabla) {
            this.getMaterialEnviadoBiopsiaImprimirAsync(idMuestra, tabla, null);
        }
        
        public void getMaterialEnviadoBiopsiaImprimirAsync(string idMuestra, string tabla, object userState) {
            if ((this.onBegingetMaterialEnviadoBiopsiaImprimirDelegate == null)) {
                this.onBegingetMaterialEnviadoBiopsiaImprimirDelegate = new BeginOperationDelegate(this.OnBegingetMaterialEnviadoBiopsiaImprimir);
            }
            if ((this.onEndgetMaterialEnviadoBiopsiaImprimirDelegate == null)) {
                this.onEndgetMaterialEnviadoBiopsiaImprimirDelegate = new EndOperationDelegate(this.OnEndgetMaterialEnviadoBiopsiaImprimir);
            }
            if ((this.ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate == null)) {
                this.ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMaterialEnviadoBiopsiaImprimirCompleted);
            }
            base.InvokeAsync(this.onBegingetMaterialEnviadoBiopsiaImprimirDelegate, new object[] {
                        idMuestra,
                        tabla}, this.onEndgetMaterialEnviadoBiopsiaImprimirDelegate, this.ongetMaterialEnviadoBiopsiaImprimirCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMaterialEnviado_CitologiaNoGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMaterialEnviado_CitologiaNoGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMaterialEnviado_CitologiaNoGinecologica(System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequestBody();
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMaterialEnviado_CitologiaNoGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
            return base.Channel.EndgetMaterialEnviado_CitologiaNoGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMaterialEnviado_CitologiaNoGinecologica(result);
            return retVal.Body.getMaterialEnviado_CitologiaNoGinecologicaResult;
        }
        
        private System.IAsyncResult OnBegingetMaterialEnviado_CitologiaNoGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetMaterialEnviado_CitologiaNoGinecologica(callback, asyncState);
        }
        
        private object[] OnEndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
            string retVal = this.EndgetMaterialEnviado_CitologiaNoGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMaterialEnviado_CitologiaNoGinecologicaCompleted(object state) {
            if ((this.getMaterialEnviado_CitologiaNoGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMaterialEnviado_CitologiaNoGinecologicaCompleted(this, new getMaterialEnviado_CitologiaNoGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMaterialEnviado_CitologiaNoGinecologicaAsync() {
            this.getMaterialEnviado_CitologiaNoGinecologicaAsync(null);
        }
        
        public void getMaterialEnviado_CitologiaNoGinecologicaAsync(object userState) {
            if ((this.onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate == null)) {
                this.onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate = new BeginOperationDelegate(this.OnBegingetMaterialEnviado_CitologiaNoGinecologica);
            }
            if ((this.onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate == null)) {
                this.onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate = new EndOperationDelegate(this.OnEndgetMaterialEnviado_CitologiaNoGinecologica);
            }
            if ((this.ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate == null)) {
                this.ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMaterialEnviado_CitologiaNoGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBegingetMaterialEnviado_CitologiaNoGinecologicaDelegate, null, this.onEndgetMaterialEnviado_CitologiaNoGinecologicaDelegate, this.ongetMaterialEnviado_CitologiaNoGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMedico(int id_medico, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequestBody();
            inValue.Body.id_medico = id_medico;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMedico(System.IAsyncResult result) {
            return base.Channel.EndgetMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMedico(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMedico(result);
            return retVal.Body.getMedicoResult;
        }
        
        private System.IAsyncResult OnBegingetMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_medico = ((int)(inValues[0]));
            return this.BegingetMedico(id_medico, callback, asyncState);
        }
        
        private object[] OnEndgetMedico(System.IAsyncResult result) {
            string retVal = this.EndgetMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMedicoCompleted(object state) {
            if ((this.getMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMedicoCompleted(this, new getMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMedicoAsync(int id_medico) {
            this.getMedicoAsync(id_medico, null);
        }
        
        public void getMedicoAsync(int id_medico, object userState) {
            if ((this.onBegingetMedicoDelegate == null)) {
                this.onBegingetMedicoDelegate = new BeginOperationDelegate(this.OnBegingetMedico);
            }
            if ((this.onEndgetMedicoDelegate == null)) {
                this.onEndgetMedicoDelegate = new EndOperationDelegate(this.OnEndgetMedico);
            }
            if ((this.ongetMedicoCompletedDelegate == null)) {
                this.ongetMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMedicoCompleted);
            }
            base.InvokeAsync(this.onBegingetMedicoDelegate, new object[] {
                        id_medico}, this.onEndgetMedicoDelegate, this.ongetMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMuestraGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMuestraGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMuestraGinecologica(string idMuestra, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMuestraGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMuestraGinecologica(System.IAsyncResult result) {
            return base.Channel.EndgetMuestraGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMuestraGinecologica(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMuestraGinecologica(result);
            return retVal.Body.getMuestraGinecologicaResult;
        }
        
        private System.IAsyncResult OnBegingetMuestraGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BegingetMuestraGinecologica(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndgetMuestraGinecologica(System.IAsyncResult result) {
            string retVal = this.EndgetMuestraGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMuestraGinecologicaCompleted(object state) {
            if ((this.getMuestraGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMuestraGinecologicaCompleted(this, new getMuestraGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMuestraGinecologicaAsync(string idMuestra) {
            this.getMuestraGinecologicaAsync(idMuestra, null);
        }
        
        public void getMuestraGinecologicaAsync(string idMuestra, object userState) {
            if ((this.onBegingetMuestraGinecologicaDelegate == null)) {
                this.onBegingetMuestraGinecologicaDelegate = new BeginOperationDelegate(this.OnBegingetMuestraGinecologica);
            }
            if ((this.onEndgetMuestraGinecologicaDelegate == null)) {
                this.onEndgetMuestraGinecologicaDelegate = new EndOperationDelegate(this.OnEndgetMuestraGinecologica);
            }
            if ((this.ongetMuestraGinecologicaCompletedDelegate == null)) {
                this.ongetMuestraGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMuestraGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBegingetMuestraGinecologicaDelegate, new object[] {
                        idMuestra}, this.onEndgetMuestraGinecologicaDelegate, this.ongetMuestraGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMuestraNo_Ginecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMuestraNo_Ginecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMuestraNo_Ginecologica(string idMuestra, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMuestraNo_Ginecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
            return base.Channel.EndgetMuestraNo_Ginecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMuestraNo_Ginecologica(result);
            return retVal.Body.getMuestraNo_GinecologicaResult;
        }
        
        private System.IAsyncResult OnBegingetMuestraNo_Ginecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BegingetMuestraNo_Ginecologica(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
            string retVal = this.EndgetMuestraNo_Ginecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMuestraNo_GinecologicaCompleted(object state) {
            if ((this.getMuestraNo_GinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMuestraNo_GinecologicaCompleted(this, new getMuestraNo_GinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMuestraNo_GinecologicaAsync(string idMuestra) {
            this.getMuestraNo_GinecologicaAsync(idMuestra, null);
        }
        
        public void getMuestraNo_GinecologicaAsync(string idMuestra, object userState) {
            if ((this.onBegingetMuestraNo_GinecologicaDelegate == null)) {
                this.onBegingetMuestraNo_GinecologicaDelegate = new BeginOperationDelegate(this.OnBegingetMuestraNo_Ginecologica);
            }
            if ((this.onEndgetMuestraNo_GinecologicaDelegate == null)) {
                this.onEndgetMuestraNo_GinecologicaDelegate = new EndOperationDelegate(this.OnEndgetMuestraNo_Ginecologica);
            }
            if ((this.ongetMuestraNo_GinecologicaCompletedDelegate == null)) {
                this.ongetMuestraNo_GinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMuestraNo_GinecologicaCompleted);
            }
            base.InvokeAsync(this.onBegingetMuestraNo_GinecologicaDelegate, new object[] {
                        idMuestra}, this.onEndgetMuestraNo_GinecologicaDelegate, this.ongetMuestraNo_GinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetMuestraBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMuestraBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetMuestraBiopsia(string idMuestra, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetMuestraBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetMuestraBiopsia(System.IAsyncResult result) {
            return base.Channel.EndgetMuestraBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetMuestraBiopsia(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetMuestraBiopsia(result);
            return retVal.Body.getMuestraBiopsiaResult;
        }
        
        private System.IAsyncResult OnBegingetMuestraBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BegingetMuestraBiopsia(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndgetMuestraBiopsia(System.IAsyncResult result) {
            string retVal = this.EndgetMuestraBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMuestraBiopsiaCompleted(object state) {
            if ((this.getMuestraBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMuestraBiopsiaCompleted(this, new getMuestraBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMuestraBiopsiaAsync(string idMuestra) {
            this.getMuestraBiopsiaAsync(idMuestra, null);
        }
        
        public void getMuestraBiopsiaAsync(string idMuestra, object userState) {
            if ((this.onBegingetMuestraBiopsiaDelegate == null)) {
                this.onBegingetMuestraBiopsiaDelegate = new BeginOperationDelegate(this.OnBegingetMuestraBiopsia);
            }
            if ((this.onEndgetMuestraBiopsiaDelegate == null)) {
                this.onEndgetMuestraBiopsiaDelegate = new EndOperationDelegate(this.OnEndgetMuestraBiopsia);
            }
            if ((this.ongetMuestraBiopsiaCompletedDelegate == null)) {
                this.ongetMuestraBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMuestraBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBegingetMuestraBiopsiaDelegate, new object[] {
                        idMuestra}, this.onEndgetMuestraBiopsiaDelegate, this.ongetMuestraBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetIdExamenes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetIdExamenes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetIdExamenes(System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequestBody();
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetIdExamenes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetIdExamenes(System.IAsyncResult result) {
            return base.Channel.EndgetIdExamenes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetIdExamenes(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetIdExamenes(result);
            return retVal.Body.getIdExamenesResult;
        }
        
        private System.IAsyncResult OnBegingetIdExamenes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetIdExamenes(callback, asyncState);
        }
        
        private object[] OnEndgetIdExamenes(System.IAsyncResult result) {
            string retVal = this.EndgetIdExamenes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetIdExamenesCompleted(object state) {
            if ((this.getIdExamenesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getIdExamenesCompleted(this, new getIdExamenesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getIdExamenesAsync() {
            this.getIdExamenesAsync(null);
        }
        
        public void getIdExamenesAsync(object userState) {
            if ((this.onBegingetIdExamenesDelegate == null)) {
                this.onBegingetIdExamenesDelegate = new BeginOperationDelegate(this.OnBegingetIdExamenes);
            }
            if ((this.onEndgetIdExamenesDelegate == null)) {
                this.onEndgetIdExamenesDelegate = new EndOperationDelegate(this.OnEndgetIdExamenes);
            }
            if ((this.ongetIdExamenesCompletedDelegate == null)) {
                this.ongetIdExamenesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetIdExamenesCompleted);
            }
            base.InvokeAsync(this.onBegingetIdExamenesDelegate, null, this.onEndgetIdExamenesDelegate, this.ongetIdExamenesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetCantidadDeExamenes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCantidadDeExamenes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetCantidadDeExamenes(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequestBody();
            inValue.Body.tabla = tabla;
            inValue.Body.filtroedad = filtroedad;
            inValue.Body.fechainicial = fechainicial;
            inValue.Body.fechafinal = fechafinal;
            inValue.Body.filtroCategoria = filtroCategoria;
            inValue.Body.doctor = doctor;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetCantidadDeExamenes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetCantidadDeExamenes(System.IAsyncResult result) {
            return base.Channel.EndgetCantidadDeExamenes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndgetCantidadDeExamenes(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetCantidadDeExamenes(result);
            return retVal.Body.getCantidadDeExamenesResult;
        }
        
        private System.IAsyncResult OnBegingetCantidadDeExamenes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tabla = ((string)(inValues[0]));
            string filtroedad = ((string)(inValues[1]));
            string fechainicial = ((string)(inValues[2]));
            string fechafinal = ((string)(inValues[3]));
            string filtroCategoria = ((string)(inValues[4]));
            string doctor = ((string)(inValues[5]));
            return this.BegingetCantidadDeExamenes(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, doctor, callback, asyncState);
        }
        
        private object[] OnEndgetCantidadDeExamenes(System.IAsyncResult result) {
            int retVal = this.EndgetCantidadDeExamenes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCantidadDeExamenesCompleted(object state) {
            if ((this.getCantidadDeExamenesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCantidadDeExamenesCompleted(this, new getCantidadDeExamenesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCantidadDeExamenesAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor) {
            this.getCantidadDeExamenesAsync(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, doctor, null);
        }
        
        public void getCantidadDeExamenesAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor, object userState) {
            if ((this.onBegingetCantidadDeExamenesDelegate == null)) {
                this.onBegingetCantidadDeExamenesDelegate = new BeginOperationDelegate(this.OnBegingetCantidadDeExamenes);
            }
            if ((this.onEndgetCantidadDeExamenesDelegate == null)) {
                this.onEndgetCantidadDeExamenesDelegate = new EndOperationDelegate(this.OnEndgetCantidadDeExamenes);
            }
            if ((this.ongetCantidadDeExamenesCompletedDelegate == null)) {
                this.ongetCantidadDeExamenesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCantidadDeExamenesCompleted);
            }
            base.InvokeAsync(this.onBegingetCantidadDeExamenesDelegate, new object[] {
                        tabla,
                        filtroedad,
                        fechainicial,
                        fechafinal,
                        filtroCategoria,
                        doctor}, this.onEndgetCantidadDeExamenesDelegate, this.ongetCantidadDeExamenesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetExamenesFiltrados(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetExamenesFiltrados(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetExamenesFiltrados(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequestBody();
            inValue.Body.tabla = tabla;
            inValue.Body.filtroedad = filtroedad;
            inValue.Body.fechainicial = fechainicial;
            inValue.Body.fechafinal = fechafinal;
            inValue.Body.filtroCategoria = filtroCategoria;
            inValue.Body.doctor = doctor;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetExamenesFiltrados(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetExamenesFiltrados(System.IAsyncResult result) {
            return base.Channel.EndgetExamenesFiltrados(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetExamenesFiltrados(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetExamenesFiltrados(result);
            return retVal.Body.getExamenesFiltradosResult;
        }
        
        private System.IAsyncResult OnBegingetExamenesFiltrados(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tabla = ((string)(inValues[0]));
            string filtroedad = ((string)(inValues[1]));
            string fechainicial = ((string)(inValues[2]));
            string fechafinal = ((string)(inValues[3]));
            string filtroCategoria = ((string)(inValues[4]));
            string doctor = ((string)(inValues[5]));
            return this.BegingetExamenesFiltrados(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, doctor, callback, asyncState);
        }
        
        private object[] OnEndgetExamenesFiltrados(System.IAsyncResult result) {
            string retVal = this.EndgetExamenesFiltrados(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetExamenesFiltradosCompleted(object state) {
            if ((this.getExamenesFiltradosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getExamenesFiltradosCompleted(this, new getExamenesFiltradosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getExamenesFiltradosAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor) {
            this.getExamenesFiltradosAsync(tabla, filtroedad, fechainicial, fechafinal, filtroCategoria, doctor, null);
        }
        
        public void getExamenesFiltradosAsync(string tabla, string filtroedad, string fechainicial, string fechafinal, string filtroCategoria, string doctor, object userState) {
            if ((this.onBegingetExamenesFiltradosDelegate == null)) {
                this.onBegingetExamenesFiltradosDelegate = new BeginOperationDelegate(this.OnBegingetExamenesFiltrados);
            }
            if ((this.onEndgetExamenesFiltradosDelegate == null)) {
                this.onEndgetExamenesFiltradosDelegate = new EndOperationDelegate(this.OnEndgetExamenesFiltrados);
            }
            if ((this.ongetExamenesFiltradosCompletedDelegate == null)) {
                this.ongetExamenesFiltradosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetExamenesFiltradosCompleted);
            }
            base.InvokeAsync(this.onBegingetExamenesFiltradosDelegate, new object[] {
                        tabla,
                        filtroedad,
                        fechainicial,
                        fechafinal,
                        filtroCategoria,
                        doctor}, this.onEndgetExamenesFiltradosDelegate, this.ongetExamenesFiltradosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginconsultaMedicoBiopsias(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginconsultaMedicoBiopsias(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginconsultaMedicoBiopsias(int anio, int mes, string doctor, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequestBody();
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            inValue.Body.doctor = doctor;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginconsultaMedicoBiopsias(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndconsultaMedicoBiopsias(System.IAsyncResult result) {
            return base.Channel.EndconsultaMedicoBiopsias(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndconsultaMedicoBiopsias(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndconsultaMedicoBiopsias(result);
            return retVal.Body.consultaMedicoBiopsiasResult;
        }
        
        private System.IAsyncResult OnBeginconsultaMedicoBiopsias(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int anio = ((int)(inValues[0]));
            int mes = ((int)(inValues[1]));
            string doctor = ((string)(inValues[2]));
            return this.BeginconsultaMedicoBiopsias(anio, mes, doctor, callback, asyncState);
        }
        
        private object[] OnEndconsultaMedicoBiopsias(System.IAsyncResult result) {
            string retVal = this.EndconsultaMedicoBiopsias(result);
            return new object[] {
                    retVal};
        }
        
        private void OnconsultaMedicoBiopsiasCompleted(object state) {
            if ((this.consultaMedicoBiopsiasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.consultaMedicoBiopsiasCompleted(this, new consultaMedicoBiopsiasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void consultaMedicoBiopsiasAsync(int anio, int mes, string doctor) {
            this.consultaMedicoBiopsiasAsync(anio, mes, doctor, null);
        }
        
        public void consultaMedicoBiopsiasAsync(int anio, int mes, string doctor, object userState) {
            if ((this.onBeginconsultaMedicoBiopsiasDelegate == null)) {
                this.onBeginconsultaMedicoBiopsiasDelegate = new BeginOperationDelegate(this.OnBeginconsultaMedicoBiopsias);
            }
            if ((this.onEndconsultaMedicoBiopsiasDelegate == null)) {
                this.onEndconsultaMedicoBiopsiasDelegate = new EndOperationDelegate(this.OnEndconsultaMedicoBiopsias);
            }
            if ((this.onconsultaMedicoBiopsiasCompletedDelegate == null)) {
                this.onconsultaMedicoBiopsiasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnconsultaMedicoBiopsiasCompleted);
            }
            base.InvokeAsync(this.onBeginconsultaMedicoBiopsiasDelegate, new object[] {
                        anio,
                        mes,
                        doctor}, this.onEndconsultaMedicoBiopsiasDelegate, this.onconsultaMedicoBiopsiasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginconsultaMedicoCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginconsultaMedicoCitologia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginconsultaMedicoCitologia(int anio, int mes, string doctor, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequestBody();
            inValue.Body.anio = anio;
            inValue.Body.mes = mes;
            inValue.Body.doctor = doctor;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginconsultaMedicoCitologia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndconsultaMedicoCitologia(System.IAsyncResult result) {
            return base.Channel.EndconsultaMedicoCitologia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndconsultaMedicoCitologia(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndconsultaMedicoCitologia(result);
            return retVal.Body.consultaMedicoCitologiaResult;
        }
        
        private System.IAsyncResult OnBeginconsultaMedicoCitologia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int anio = ((int)(inValues[0]));
            int mes = ((int)(inValues[1]));
            string doctor = ((string)(inValues[2]));
            return this.BeginconsultaMedicoCitologia(anio, mes, doctor, callback, asyncState);
        }
        
        private object[] OnEndconsultaMedicoCitologia(System.IAsyncResult result) {
            string retVal = this.EndconsultaMedicoCitologia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnconsultaMedicoCitologiaCompleted(object state) {
            if ((this.consultaMedicoCitologiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.consultaMedicoCitologiaCompleted(this, new consultaMedicoCitologiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void consultaMedicoCitologiaAsync(int anio, int mes, string doctor) {
            this.consultaMedicoCitologiaAsync(anio, mes, doctor, null);
        }
        
        public void consultaMedicoCitologiaAsync(int anio, int mes, string doctor, object userState) {
            if ((this.onBeginconsultaMedicoCitologiaDelegate == null)) {
                this.onBeginconsultaMedicoCitologiaDelegate = new BeginOperationDelegate(this.OnBeginconsultaMedicoCitologia);
            }
            if ((this.onEndconsultaMedicoCitologiaDelegate == null)) {
                this.onEndconsultaMedicoCitologiaDelegate = new EndOperationDelegate(this.OnEndconsultaMedicoCitologia);
            }
            if ((this.onconsultaMedicoCitologiaCompletedDelegate == null)) {
                this.onconsultaMedicoCitologiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnconsultaMedicoCitologiaCompleted);
            }
            base.InvokeAsync(this.onBeginconsultaMedicoCitologiaDelegate, new object[] {
                        anio,
                        mes,
                        doctor}, this.onEndconsultaMedicoCitologiaDelegate, this.onconsultaMedicoCitologiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetNombresPacientes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetNombresPacientes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetNombresPacientes(System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequestBody();
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetNombresPacientes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetNombresPacientes(System.IAsyncResult result) {
            return base.Channel.EndgetNombresPacientes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.NombreCompleto> EndgetNombresPacientes(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetNombresPacientes(result);
            return retVal.Body.getNombresPacientesResult;
        }
        
        private System.IAsyncResult OnBegingetNombresPacientes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetNombresPacientes(callback, asyncState);
        }
        
        private object[] OnEndgetNombresPacientes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.NombreCompleto> retVal = this.EndgetNombresPacientes(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetNombresPacientesCompleted(object state) {
            if ((this.getNombresPacientesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getNombresPacientesCompleted(this, new getNombresPacientesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getNombresPacientesAsync() {
            this.getNombresPacientesAsync(null);
        }
        
        public void getNombresPacientesAsync(object userState) {
            if ((this.onBegingetNombresPacientesDelegate == null)) {
                this.onBegingetNombresPacientesDelegate = new BeginOperationDelegate(this.OnBegingetNombresPacientes);
            }
            if ((this.onEndgetNombresPacientesDelegate == null)) {
                this.onEndgetNombresPacientesDelegate = new EndOperationDelegate(this.OnEndgetNombresPacientes);
            }
            if ((this.ongetNombresPacientesCompletedDelegate == null)) {
                this.ongetNombresPacientesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetNombresPacientesCompleted);
            }
            base.InvokeAsync(this.onBegingetNombresPacientesDelegate, null, this.onEndgetNombresPacientesDelegate, this.ongetNombresPacientesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetUsuarios(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetUsuarios(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetUsuarios(System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequestBody();
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetUsuarios(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetUsuarios(System.IAsyncResult result) {
            return base.Channel.EndgetUsuarios(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetUsuarios(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetUsuarios(result);
            return retVal.Body.getUsuariosResult;
        }
        
        private System.IAsyncResult OnBegingetUsuarios(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetUsuarios(callback, asyncState);
        }
        
        private object[] OnEndgetUsuarios(System.IAsyncResult result) {
            string retVal = this.EndgetUsuarios(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetUsuariosCompleted(object state) {
            if ((this.getUsuariosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getUsuariosCompleted(this, new getUsuariosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getUsuariosAsync() {
            this.getUsuariosAsync(null);
        }
        
        public void getUsuariosAsync(object userState) {
            if ((this.onBegingetUsuariosDelegate == null)) {
                this.onBegingetUsuariosDelegate = new BeginOperationDelegate(this.OnBegingetUsuarios);
            }
            if ((this.onEndgetUsuariosDelegate == null)) {
                this.onEndgetUsuariosDelegate = new EndOperationDelegate(this.OnEndgetUsuarios);
            }
            if ((this.ongetUsuariosCompletedDelegate == null)) {
                this.ongetUsuariosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetUsuariosCompleted);
            }
            base.InvokeAsync(this.onBegingetUsuariosDelegate, null, this.onEndgetUsuariosDelegate, this.ongetUsuariosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetDatosEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDatosEmpleado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetDatosEmpleado(string usuario, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequestBody();
            inValue.Body.usuario = usuario;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetDatosEmpleado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetDatosEmpleado(System.IAsyncResult result) {
            return base.Channel.EndgetDatosEmpleado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetDatosEmpleado(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetDatosEmpleado(result);
            return retVal.Body.getDatosEmpleadoResult;
        }
        
        private System.IAsyncResult OnBegingetDatosEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            return this.BegingetDatosEmpleado(usuario, callback, asyncState);
        }
        
        private object[] OnEndgetDatosEmpleado(System.IAsyncResult result) {
            string retVal = this.EndgetDatosEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDatosEmpleadoCompleted(object state) {
            if ((this.getDatosEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDatosEmpleadoCompleted(this, new getDatosEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDatosEmpleadoAsync(string usuario) {
            this.getDatosEmpleadoAsync(usuario, null);
        }
        
        public void getDatosEmpleadoAsync(string usuario, object userState) {
            if ((this.onBegingetDatosEmpleadoDelegate == null)) {
                this.onBegingetDatosEmpleadoDelegate = new BeginOperationDelegate(this.OnBegingetDatosEmpleado);
            }
            if ((this.onEndgetDatosEmpleadoDelegate == null)) {
                this.onEndgetDatosEmpleadoDelegate = new EndOperationDelegate(this.OnEndgetDatosEmpleado);
            }
            if ((this.ongetDatosEmpleadoCompletedDelegate == null)) {
                this.ongetDatosEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDatosEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBegingetDatosEmpleadoDelegate, new object[] {
                        usuario}, this.onEndgetDatosEmpleadoDelegate, this.ongetDatosEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BegingetAccesosDeUsuario(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAccesosDeUsuario(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetAccesosDeUsuario(string usuario, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequestBody();
            inValue.Body.usuario = usuario;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BegingetAccesosDeUsuario(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndgetAccesosDeUsuario(System.IAsyncResult result) {
            return base.Channel.EndgetAccesosDeUsuario(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndgetAccesosDeUsuario(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndgetAccesosDeUsuario(result);
            return retVal.Body.getAccesosDeUsuarioResult;
        }
        
        private System.IAsyncResult OnBegingetAccesosDeUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            return this.BegingetAccesosDeUsuario(usuario, callback, asyncState);
        }
        
        private object[] OnEndgetAccesosDeUsuario(System.IAsyncResult result) {
            string retVal = this.EndgetAccesosDeUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAccesosDeUsuarioCompleted(object state) {
            if ((this.getAccesosDeUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAccesosDeUsuarioCompleted(this, new getAccesosDeUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAccesosDeUsuarioAsync(string usuario) {
            this.getAccesosDeUsuarioAsync(usuario, null);
        }
        
        public void getAccesosDeUsuarioAsync(string usuario, object userState) {
            if ((this.onBegingetAccesosDeUsuarioDelegate == null)) {
                this.onBegingetAccesosDeUsuarioDelegate = new BeginOperationDelegate(this.OnBegingetAccesosDeUsuario);
            }
            if ((this.onEndgetAccesosDeUsuarioDelegate == null)) {
                this.onEndgetAccesosDeUsuarioDelegate = new EndOperationDelegate(this.OnEndgetAccesosDeUsuario);
            }
            if ((this.ongetAccesosDeUsuarioCompletedDelegate == null)) {
                this.ongetAccesosDeUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAccesosDeUsuarioCompleted);
            }
            base.InvokeAsync(this.onBegingetAccesosDeUsuarioDelegate, new object[] {
                        usuario}, this.onEndgetAccesosDeUsuarioDelegate, this.ongetAccesosDeUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarMedico(string Nombre, string telefono, string celular, string direccion, string compania, string numeroCol, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequestBody();
            inValue.Body.Nombre = Nombre;
            inValue.Body.telefono = telefono;
            inValue.Body.celular = celular;
            inValue.Body.direccion = direccion;
            inValue.Body.compania = compania;
            inValue.Body.numeroCol = numeroCol;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarMedico(System.IAsyncResult result) {
            return base.Channel.EndInsertarMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarMedico(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarMedico(result);
            return retVal.Body.InsertarMedicoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Nombre = ((string)(inValues[0]));
            string telefono = ((string)(inValues[1]));
            string celular = ((string)(inValues[2]));
            string direccion = ((string)(inValues[3]));
            string compania = ((string)(inValues[4]));
            string numeroCol = ((string)(inValues[5]));
            return this.BeginInsertarMedico(Nombre, telefono, celular, direccion, compania, numeroCol, callback, asyncState);
        }
        
        private object[] OnEndInsertarMedico(System.IAsyncResult result) {
            bool retVal = this.EndInsertarMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarMedicoCompleted(object state) {
            if ((this.InsertarMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarMedicoCompleted(this, new InsertarMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarMedicoAsync(string Nombre, string telefono, string celular, string direccion, string compania, string numeroCol) {
            this.InsertarMedicoAsync(Nombre, telefono, celular, direccion, compania, numeroCol, null);
        }
        
        public void InsertarMedicoAsync(string Nombre, string telefono, string celular, string direccion, string compania, string numeroCol, object userState) {
            if ((this.onBeginInsertarMedicoDelegate == null)) {
                this.onBeginInsertarMedicoDelegate = new BeginOperationDelegate(this.OnBeginInsertarMedico);
            }
            if ((this.onEndInsertarMedicoDelegate == null)) {
                this.onEndInsertarMedicoDelegate = new EndOperationDelegate(this.OnEndInsertarMedico);
            }
            if ((this.onInsertarMedicoCompletedDelegate == null)) {
                this.onInsertarMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarMedicoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarMedicoDelegate, new object[] {
                        Nombre,
                        telefono,
                        celular,
                        direccion,
                        compania,
                        numeroCol}, this.onEndInsertarMedicoDelegate, this.onInsertarMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarMaterial(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarMaterial(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarMaterial(string material_enviado, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequestBody();
            inValue.Body.material_enviado = material_enviado;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarMaterial(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarMaterial(System.IAsyncResult result) {
            return base.Channel.EndInsertarMaterial(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarMaterial(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarMaterial(result);
            return retVal.Body.InsertarMaterialResult;
        }
        
        private System.IAsyncResult OnBeginInsertarMaterial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string material_enviado = ((string)(inValues[0]));
            return this.BeginInsertarMaterial(material_enviado, callback, asyncState);
        }
        
        private object[] OnEndInsertarMaterial(System.IAsyncResult result) {
            bool retVal = this.EndInsertarMaterial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarMaterialCompleted(object state) {
            if ((this.InsertarMaterialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarMaterialCompleted(this, new InsertarMaterialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarMaterialAsync(string material_enviado) {
            this.InsertarMaterialAsync(material_enviado, null);
        }
        
        public void InsertarMaterialAsync(string material_enviado, object userState) {
            if ((this.onBeginInsertarMaterialDelegate == null)) {
                this.onBeginInsertarMaterialDelegate = new BeginOperationDelegate(this.OnBeginInsertarMaterial);
            }
            if ((this.onEndInsertarMaterialDelegate == null)) {
                this.onEndInsertarMaterialDelegate = new EndOperationDelegate(this.OnEndInsertarMaterial);
            }
            if ((this.onInsertarMaterialCompletedDelegate == null)) {
                this.onInsertarMaterialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarMaterialCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarMaterialDelegate, new object[] {
                        material_enviado}, this.onEndInsertarMaterialDelegate, this.onInsertarMaterialCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarPaciente(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarPaciente(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequestBody();
            inValue.Body.DIU = DIU;
            inValue.Body.fur = fur;
            inValue.Body.fup = fup;
            inValue.Body.pnombre = pnombre;
            inValue.Body.snombre = snombre;
            inValue.Body.papellido = papellido;
            inValue.Body.sapellido = sapellido;
            inValue.Body.edad = edad;
            inValue.Body.anticonceptivos = anticonceptivos;
            inValue.Body.expediente = expediente;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarPaciente(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarPaciente(System.IAsyncResult result) {
            return base.Channel.EndInsertarPaciente(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarPaciente(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarPaciente(result);
            return retVal.Body.InsertarPacienteResult;
        }
        
        private System.IAsyncResult OnBeginInsertarPaciente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool DIU = ((bool)(inValues[0]));
            string fur = ((string)(inValues[1]));
            string fup = ((string)(inValues[2]));
            string pnombre = ((string)(inValues[3]));
            string snombre = ((string)(inValues[4]));
            string papellido = ((string)(inValues[5]));
            string sapellido = ((string)(inValues[6]));
            int edad = ((int)(inValues[7]));
            bool anticonceptivos = ((bool)(inValues[8]));
            string expediente = ((string)(inValues[9]));
            return this.BeginInsertarPaciente(DIU, fur, fup, pnombre, snombre, papellido, sapellido, edad, anticonceptivos, expediente, callback, asyncState);
        }
        
        private object[] OnEndInsertarPaciente(System.IAsyncResult result) {
            bool retVal = this.EndInsertarPaciente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarPacienteCompleted(object state) {
            if ((this.InsertarPacienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarPacienteCompleted(this, new InsertarPacienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarPacienteAsync(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente) {
            this.InsertarPacienteAsync(DIU, fur, fup, pnombre, snombre, papellido, sapellido, edad, anticonceptivos, expediente, null);
        }
        
        public void InsertarPacienteAsync(bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string expediente, object userState) {
            if ((this.onBeginInsertarPacienteDelegate == null)) {
                this.onBeginInsertarPacienteDelegate = new BeginOperationDelegate(this.OnBeginInsertarPaciente);
            }
            if ((this.onEndInsertarPacienteDelegate == null)) {
                this.onEndInsertarPacienteDelegate = new EndOperationDelegate(this.OnEndInsertarPaciente);
            }
            if ((this.onInsertarPacienteCompletedDelegate == null)) {
                this.onInsertarPacienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarPacienteCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarPacienteDelegate, new object[] {
                        DIU,
                        fur,
                        fup,
                        pnombre,
                        snombre,
                        papellido,
                        sapellido,
                        edad,
                        anticonceptivos,
                        expediente}, this.onEndInsertarPacienteDelegate, this.onInsertarPacienteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarBiopsia(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.fecha = fecha;
            inValue.Body.precio = precio;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.Id_paciente = Id_paciente;
            inValue.Body.id_medico = id_medico;
            inValue.Body.Nombre_Contable = Nombre_Contable;
            inValue.Body.anio_contable = anio_contable;
            inValue.Body.mes_contable = mes_contable;
            inValue.Body.usuario_empleado = usuario_empleado;
            inValue.Body.descripcion_macros = descripcion_macros;
            inValue.Body.descripcion_micros = descripcion_micros;
            inValue.Body.codificacion = codificacion;
            inValue.Body.fechaHoy = fechaHoy;
            inValue.Body.fechaHoySQL = fechaHoySQL;
            inValue.Body.fechaRecibido = fechaRecibido;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarBiopsia(System.IAsyncResult result) {
            return base.Channel.EndInsertarBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarBiopsia(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarBiopsia(result);
            return retVal.Body.InsertarBiopsiaResult;
        }
        
        private System.IAsyncResult OnBeginInsertarBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string fecha = ((string)(inValues[1]));
            int precio = ((int)(inValues[2]));
            string Diagnostico = ((string)(inValues[3]));
            string diagnostico_medico = ((string)(inValues[4]));
            int Id_paciente = ((int)(inValues[5]));
            int id_medico = ((int)(inValues[6]));
            string Nombre_Contable = ((string)(inValues[7]));
            int anio_contable = ((int)(inValues[8]));
            int mes_contable = ((int)(inValues[9]));
            string usuario_empleado = ((string)(inValues[10]));
            string descripcion_macros = ((string)(inValues[11]));
            string descripcion_micros = ((string)(inValues[12]));
            string codificacion = ((string)(inValues[13]));
            string fechaHoy = ((string)(inValues[14]));
            string fechaHoySQL = ((string)(inValues[15]));
            string fechaRecibido = ((string)(inValues[16]));
            return this.BeginInsertarBiopsia(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, codificacion, fechaHoy, fechaHoySQL, fechaRecibido, callback, asyncState);
        }
        
        private object[] OnEndInsertarBiopsia(System.IAsyncResult result) {
            bool retVal = this.EndInsertarBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarBiopsiaCompleted(object state) {
            if ((this.InsertarBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarBiopsiaCompleted(this, new InsertarBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarBiopsiaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido) {
            this.InsertarBiopsiaAsync(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, codificacion, fechaHoy, fechaHoySQL, fechaRecibido, null);
        }
        
        public void InsertarBiopsiaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string codificacion, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido, 
                    object userState) {
            if ((this.onBeginInsertarBiopsiaDelegate == null)) {
                this.onBeginInsertarBiopsiaDelegate = new BeginOperationDelegate(this.OnBeginInsertarBiopsia);
            }
            if ((this.onEndInsertarBiopsiaDelegate == null)) {
                this.onEndInsertarBiopsiaDelegate = new EndOperationDelegate(this.OnEndInsertarBiopsia);
            }
            if ((this.onInsertarBiopsiaCompletedDelegate == null)) {
                this.onInsertarBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarBiopsiaDelegate, new object[] {
                        cod_examen,
                        fecha,
                        precio,
                        Diagnostico,
                        diagnostico_medico,
                        Id_paciente,
                        id_medico,
                        Nombre_Contable,
                        anio_contable,
                        mes_contable,
                        usuario_empleado,
                        descripcion_macros,
                        descripcion_micros,
                        codificacion,
                        fechaHoy,
                        fechaHoySQL,
                        fechaRecibido}, this.onEndInsertarBiopsiaDelegate, this.onInsertarBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarCitologiaNoGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarCitologiaNoGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarCitologiaNoGinecologica(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.fecha = fecha;
            inValue.Body.precio = precio;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.Id_paciente = Id_paciente;
            inValue.Body.id_medico = id_medico;
            inValue.Body.Nombre_Contable = Nombre_Contable;
            inValue.Body.anio_contable = anio_contable;
            inValue.Body.mes_contable = mes_contable;
            inValue.Body.usuario_empleado = usuario_empleado;
            inValue.Body.descripcion_macros = descripcion_macros;
            inValue.Body.descripcion_micros = descripcion_micros;
            inValue.Body.comentario = comentario;
            inValue.Body.fechaHoy = fechaHoy;
            inValue.Body.fechaHoySQL = fechaHoySQL;
            inValue.Body.fechaRecibido = fechaRecibido;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarCitologiaNoGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
            return base.Channel.EndInsertarCitologiaNoGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarCitologiaNoGinecologica(result);
            return retVal.Body.InsertarCitologiaNoGinecologicaResult;
        }
        
        private System.IAsyncResult OnBeginInsertarCitologiaNoGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string fecha = ((string)(inValues[1]));
            int precio = ((int)(inValues[2]));
            string Diagnostico = ((string)(inValues[3]));
            string diagnostico_medico = ((string)(inValues[4]));
            int Id_paciente = ((int)(inValues[5]));
            int id_medico = ((int)(inValues[6]));
            string Nombre_Contable = ((string)(inValues[7]));
            int anio_contable = ((int)(inValues[8]));
            int mes_contable = ((int)(inValues[9]));
            string usuario_empleado = ((string)(inValues[10]));
            string descripcion_macros = ((string)(inValues[11]));
            string descripcion_micros = ((string)(inValues[12]));
            string comentario = ((string)(inValues[13]));
            string fechaHoy = ((string)(inValues[14]));
            string fechaHoySQL = ((string)(inValues[15]));
            string fechaRecibido = ((string)(inValues[16]));
            return this.BeginInsertarCitologiaNoGinecologica(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, comentario, fechaHoy, fechaHoySQL, fechaRecibido, callback, asyncState);
        }
        
        private object[] OnEndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
            bool retVal = this.EndInsertarCitologiaNoGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarCitologiaNoGinecologicaCompleted(object state) {
            if ((this.InsertarCitologiaNoGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarCitologiaNoGinecologicaCompleted(this, new InsertarCitologiaNoGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarCitologiaNoGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido) {
            this.InsertarCitologiaNoGinecologicaAsync(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, descripcion_macros, descripcion_micros, comentario, fechaHoy, fechaHoySQL, fechaRecibido, null);
        }
        
        public void InsertarCitologiaNoGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string descripcion_macros, 
                    string descripcion_micros, 
                    string comentario, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    string fechaRecibido, 
                    object userState) {
            if ((this.onBeginInsertarCitologiaNoGinecologicaDelegate == null)) {
                this.onBeginInsertarCitologiaNoGinecologicaDelegate = new BeginOperationDelegate(this.OnBeginInsertarCitologiaNoGinecologica);
            }
            if ((this.onEndInsertarCitologiaNoGinecologicaDelegate == null)) {
                this.onEndInsertarCitologiaNoGinecologicaDelegate = new EndOperationDelegate(this.OnEndInsertarCitologiaNoGinecologica);
            }
            if ((this.onInsertarCitologiaNoGinecologicaCompletedDelegate == null)) {
                this.onInsertarCitologiaNoGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarCitologiaNoGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarCitologiaNoGinecologicaDelegate, new object[] {
                        cod_examen,
                        fecha,
                        precio,
                        Diagnostico,
                        diagnostico_medico,
                        Id_paciente,
                        id_medico,
                        Nombre_Contable,
                        anio_contable,
                        mes_contable,
                        usuario_empleado,
                        descripcion_macros,
                        descripcion_micros,
                        comentario,
                        fechaHoy,
                        fechaHoySQL,
                        fechaRecibido}, this.onEndInsertarCitologiaNoGinecologicaDelegate, this.onInsertarCitologiaNoGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarCitologiaGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarCitologiaGinecologica(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarCitologiaGinecologica(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.fecha = fecha;
            inValue.Body.precio = precio;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.Id_paciente = Id_paciente;
            inValue.Body.id_medico = id_medico;
            inValue.Body.Nombre_Contable = Nombre_Contable;
            inValue.Body.anio_contable = anio_contable;
            inValue.Body.mes_contable = mes_contable;
            inValue.Body.usuario_empleado = usuario_empleado;
            inValue.Body.comentario = comentario;
            inValue.Body.inflamacion = inflamacion;
            inValue.Body.calidadFrotis_causa = calidadFrotis_causa;
            inValue.Body.calidadFrotisAdecuado = calidadFrotisAdecuado;
            inValue.Body.anticonceptivos = anticonceptivos;
            inValue.Body.candida_sp = candida_sp;
            inValue.Body.gardnerela = gardnerela;
            inValue.Body.vaginosis = vaginosis;
            inValue.Body.herpes = herpes;
            inValue.Body.tricomonas = tricomonas;
            inValue.Body.otroAgenteInfeccioso = otroAgenteInfeccioso;
            inValue.Body.evaluacionHormonal_basales = evaluacionHormonal_basales;
            inValue.Body.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            inValue.Body.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            inValue.Body.Colposcopia = Colposcopia;
            inValue.Body.repetir = repetir;
            inValue.Body.recomendaciones_otra = recomendaciones_otra;
            inValue.Body.recomendaciones_biopsia = recomendaciones_biopsia;
            inValue.Body.recomendaciones_tratamientos = recomendaciones_tratamientos;
            inValue.Body.NIC_I = NIC_I;
            inValue.Body.NIC_II = NIC_II;
            inValue.Body.NIC_III = NIC_III;
            inValue.Body.origen_muestra = origen_muestra;
            inValue.Body.negativo = negativo;
            inValue.Body.VPH = VPH;
            inValue.Body.glandular = glandular;
            inValue.Body.escamoza = escamoza;
            inValue.Body.adenocarcinomana = adenocarcinomana;
            inValue.Body.carcinomana_celula = carcinomana_celula;
            inValue.Body.celula_atipica = celula_atipica;
            inValue.Body.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            inValue.Body.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
            inValue.Body.fechaHoy = fechaHoy;
            inValue.Body.fechaHoySQL = fechaHoySQL;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarCitologiaGinecologica(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarCitologiaGinecologica(System.IAsyncResult result) {
            return base.Channel.EndInsertarCitologiaGinecologica(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarCitologiaGinecologica(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarCitologiaGinecologica(result);
            return retVal.Body.InsertarCitologiaGinecologicaResult;
        }
        
        private System.IAsyncResult OnBeginInsertarCitologiaGinecologica(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string fecha = ((string)(inValues[1]));
            int precio = ((int)(inValues[2]));
            string Diagnostico = ((string)(inValues[3]));
            string diagnostico_medico = ((string)(inValues[4]));
            int Id_paciente = ((int)(inValues[5]));
            int id_medico = ((int)(inValues[6]));
            string Nombre_Contable = ((string)(inValues[7]));
            int anio_contable = ((int)(inValues[8]));
            int mes_contable = ((int)(inValues[9]));
            string usuario_empleado = ((string)(inValues[10]));
            string comentario = ((string)(inValues[11]));
            string inflamacion = ((string)(inValues[12]));
            string calidadFrotis_causa = ((string)(inValues[13]));
            bool calidadFrotisAdecuado = ((bool)(inValues[14]));
            bool anticonceptivos = ((bool)(inValues[15]));
            bool candida_sp = ((bool)(inValues[16]));
            bool gardnerela = ((bool)(inValues[17]));
            bool vaginosis = ((bool)(inValues[18]));
            bool herpes = ((bool)(inValues[19]));
            bool tricomonas = ((bool)(inValues[20]));
            string otroAgenteInfeccioso = ((string)(inValues[21]));
            int evaluacionHormonal_basales = ((int)(inValues[22]));
            int evaluacionhormonal_intermedias = ((int)(inValues[23]));
            int evaluacionhormonal_superficiales = ((int)(inValues[24]));
            bool Colposcopia = ((bool)(inValues[25]));
            int repetir = ((int)(inValues[26]));
            string recomendaciones_otra = ((string)(inValues[27]));
            bool recomendaciones_biopsia = ((bool)(inValues[28]));
            bool recomendaciones_tratamientos = ((bool)(inValues[29]));
            bool NIC_I = ((bool)(inValues[30]));
            bool NIC_II = ((bool)(inValues[31]));
            bool NIC_III = ((bool)(inValues[32]));
            string origen_muestra = ((string)(inValues[33]));
            bool negativo = ((bool)(inValues[34]));
            bool VPH = ((bool)(inValues[35]));
            bool glandular = ((bool)(inValues[36]));
            bool escamoza = ((bool)(inValues[37]));
            bool adenocarcinomana = ((bool)(inValues[38]));
            bool carcinomana_celula = ((bool)(inValues[39]));
            bool celula_atipica = ((bool)(inValues[40]));
            bool lesion_escamosa_AltoGrado = ((bool)(inValues[41]));
            bool lesion_escamosa_BajoGrado = ((bool)(inValues[42]));
            string fechaHoy = ((string)(inValues[43]));
            string fechaHoySQL = ((string)(inValues[44]));
            return this.BeginInsertarCitologiaGinecologica(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, anticonceptivos, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamoza, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, fechaHoy, fechaHoySQL, callback, asyncState);
        }
        
        private object[] OnEndInsertarCitologiaGinecologica(System.IAsyncResult result) {
            bool retVal = this.EndInsertarCitologiaGinecologica(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarCitologiaGinecologicaCompleted(object state) {
            if ((this.InsertarCitologiaGinecologicaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarCitologiaGinecologicaCompleted(this, new InsertarCitologiaGinecologicaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarCitologiaGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL) {
            this.InsertarCitologiaGinecologicaAsync(cod_examen, fecha, precio, Diagnostico, diagnostico_medico, Id_paciente, id_medico, Nombre_Contable, anio_contable, mes_contable, usuario_empleado, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, anticonceptivos, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamoza, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, fechaHoy, fechaHoySQL, null);
        }
        
        public void InsertarCitologiaGinecologicaAsync(
                    string cod_examen, 
                    string fecha, 
                    int precio, 
                    string Diagnostico, 
                    string diagnostico_medico, 
                    int Id_paciente, 
                    int id_medico, 
                    string Nombre_Contable, 
                    int anio_contable, 
                    int mes_contable, 
                    string usuario_empleado, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool anticonceptivos, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamoza, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    string fechaHoy, 
                    string fechaHoySQL, 
                    object userState) {
            if ((this.onBeginInsertarCitologiaGinecologicaDelegate == null)) {
                this.onBeginInsertarCitologiaGinecologicaDelegate = new BeginOperationDelegate(this.OnBeginInsertarCitologiaGinecologica);
            }
            if ((this.onEndInsertarCitologiaGinecologicaDelegate == null)) {
                this.onEndInsertarCitologiaGinecologicaDelegate = new EndOperationDelegate(this.OnEndInsertarCitologiaGinecologica);
            }
            if ((this.onInsertarCitologiaGinecologicaCompletedDelegate == null)) {
                this.onInsertarCitologiaGinecologicaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarCitologiaGinecologicaCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarCitologiaGinecologicaDelegate, new object[] {
                        cod_examen,
                        fecha,
                        precio,
                        Diagnostico,
                        diagnostico_medico,
                        Id_paciente,
                        id_medico,
                        Nombre_Contable,
                        anio_contable,
                        mes_contable,
                        usuario_empleado,
                        comentario,
                        inflamacion,
                        calidadFrotis_causa,
                        calidadFrotisAdecuado,
                        anticonceptivos,
                        candida_sp,
                        gardnerela,
                        vaginosis,
                        herpes,
                        tricomonas,
                        otroAgenteInfeccioso,
                        evaluacionHormonal_basales,
                        evaluacionhormonal_intermedias,
                        evaluacionhormonal_superficiales,
                        Colposcopia,
                        repetir,
                        recomendaciones_otra,
                        recomendaciones_biopsia,
                        recomendaciones_tratamientos,
                        NIC_I,
                        NIC_II,
                        NIC_III,
                        origen_muestra,
                        negativo,
                        VPH,
                        glandular,
                        escamoza,
                        adenocarcinomana,
                        carcinomana_celula,
                        celula_atipica,
                        lesion_escamosa_AltoGrado,
                        lesion_escamosa_BajoGrado,
                        fechaHoy,
                        fechaHoySQL}, this.onEndInsertarCitologiaGinecologicaDelegate, this.onInsertarCitologiaGinecologicaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarMaterialEnviado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarMaterialEnviado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarMaterialEnviado(string cod_examen, string material_enviado, string tabla, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.material_enviado = material_enviado;
            inValue.Body.tabla = tabla;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarMaterialEnviado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarMaterialEnviado(System.IAsyncResult result) {
            return base.Channel.EndInsertarMaterialEnviado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarMaterialEnviado(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarMaterialEnviado(result);
            return retVal.Body.InsertarMaterialEnviadoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarMaterialEnviado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string material_enviado = ((string)(inValues[1]));
            string tabla = ((string)(inValues[2]));
            return this.BeginInsertarMaterialEnviado(cod_examen, material_enviado, tabla, callback, asyncState);
        }
        
        private object[] OnEndInsertarMaterialEnviado(System.IAsyncResult result) {
            bool retVal = this.EndInsertarMaterialEnviado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarMaterialEnviadoCompleted(object state) {
            if ((this.InsertarMaterialEnviadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarMaterialEnviadoCompleted(this, new InsertarMaterialEnviadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarMaterialEnviadoAsync(string cod_examen, string material_enviado, string tabla) {
            this.InsertarMaterialEnviadoAsync(cod_examen, material_enviado, tabla, null);
        }
        
        public void InsertarMaterialEnviadoAsync(string cod_examen, string material_enviado, string tabla, object userState) {
            if ((this.onBeginInsertarMaterialEnviadoDelegate == null)) {
                this.onBeginInsertarMaterialEnviadoDelegate = new BeginOperationDelegate(this.OnBeginInsertarMaterialEnviado);
            }
            if ((this.onEndInsertarMaterialEnviadoDelegate == null)) {
                this.onEndInsertarMaterialEnviadoDelegate = new EndOperationDelegate(this.OnEndInsertarMaterialEnviado);
            }
            if ((this.onInsertarMaterialEnviadoCompletedDelegate == null)) {
                this.onInsertarMaterialEnviadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarMaterialEnviadoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarMaterialEnviadoDelegate, new object[] {
                        cod_examen,
                        material_enviado,
                        tabla}, this.onEndInsertarMaterialEnviadoDelegate, this.onInsertarMaterialEnviadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginInsertarEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarEmpleado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginInsertarEmpleado(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequestBody();
            inValue.Body.usuario = usuario;
            inValue.Body.tipoEmpleado = tipoEmpleado;
            inValue.Body.p_nombre = p_nombre;
            inValue.Body.s_nombre = s_nombre;
            inValue.Body.p_apellido = p_apellido;
            inValue.Body.s_apellido = s_apellido;
            inValue.Body.contrasena = contrasena;
            inValue.Body.correo = correo;
            inValue.Body.accesos = accesos;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginInsertarEmpleado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndInsertarEmpleado(System.IAsyncResult result) {
            return base.Channel.EndInsertarEmpleado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndInsertarEmpleado(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndInsertarEmpleado(result);
            return retVal.Body.InsertarEmpleadoResult;
        }
        
        private System.IAsyncResult OnBeginInsertarEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            string tipoEmpleado = ((string)(inValues[1]));
            string p_nombre = ((string)(inValues[2]));
            string s_nombre = ((string)(inValues[3]));
            string p_apellido = ((string)(inValues[4]));
            string s_apellido = ((string)(inValues[5]));
            string contrasena = ((string)(inValues[6]));
            string correo = ((string)(inValues[7]));
            string accesos = ((string)(inValues[8]));
            return this.BeginInsertarEmpleado(usuario, tipoEmpleado, p_nombre, s_nombre, p_apellido, s_apellido, contrasena, correo, accesos, callback, asyncState);
        }
        
        private object[] OnEndInsertarEmpleado(System.IAsyncResult result) {
            bool retVal = this.EndInsertarEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarEmpleadoCompleted(object state) {
            if ((this.InsertarEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarEmpleadoCompleted(this, new InsertarEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarEmpleadoAsync(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos) {
            this.InsertarEmpleadoAsync(usuario, tipoEmpleado, p_nombre, s_nombre, p_apellido, s_apellido, contrasena, correo, accesos, null);
        }
        
        public void InsertarEmpleadoAsync(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos, object userState) {
            if ((this.onBeginInsertarEmpleadoDelegate == null)) {
                this.onBeginInsertarEmpleadoDelegate = new BeginOperationDelegate(this.OnBeginInsertarEmpleado);
            }
            if ((this.onEndInsertarEmpleadoDelegate == null)) {
                this.onEndInsertarEmpleadoDelegate = new EndOperationDelegate(this.OnEndInsertarEmpleado);
            }
            if ((this.onInsertarEmpleadoCompletedDelegate == null)) {
                this.onInsertarEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarEmpleadoDelegate, new object[] {
                        usuario,
                        tipoEmpleado,
                        p_nombre,
                        s_nombre,
                        p_apellido,
                        s_apellido,
                        contrasena,
                        correo,
                        accesos}, this.onEndInsertarEmpleadoDelegate, this.onInsertarEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginbuscarCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginbuscarCitologia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginbuscarCitologia(string idMuestra, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginbuscarCitologia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndbuscarCitologia(System.IAsyncResult result) {
            return base.Channel.EndbuscarCitologia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndbuscarCitologia(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndbuscarCitologia(result);
            return retVal.Body.buscarCitologiaResult;
        }
        
        private System.IAsyncResult OnBeginbuscarCitologia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BeginbuscarCitologia(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndbuscarCitologia(System.IAsyncResult result) {
            string retVal = this.EndbuscarCitologia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnbuscarCitologiaCompleted(object state) {
            if ((this.buscarCitologiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.buscarCitologiaCompleted(this, new buscarCitologiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void buscarCitologiaAsync(string idMuestra) {
            this.buscarCitologiaAsync(idMuestra, null);
        }
        
        public void buscarCitologiaAsync(string idMuestra, object userState) {
            if ((this.onBeginbuscarCitologiaDelegate == null)) {
                this.onBeginbuscarCitologiaDelegate = new BeginOperationDelegate(this.OnBeginbuscarCitologia);
            }
            if ((this.onEndbuscarCitologiaDelegate == null)) {
                this.onEndbuscarCitologiaDelegate = new EndOperationDelegate(this.OnEndbuscarCitologia);
            }
            if ((this.onbuscarCitologiaCompletedDelegate == null)) {
                this.onbuscarCitologiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnbuscarCitologiaCompleted);
            }
            base.InvokeAsync(this.onBeginbuscarCitologiaDelegate, new object[] {
                        idMuestra}, this.onEndbuscarCitologiaDelegate, this.onbuscarCitologiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginbuscarCitologiaLiquidos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginbuscarCitologiaLiquidos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginbuscarCitologiaLiquidos(string idMuestra, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginbuscarCitologiaLiquidos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndbuscarCitologiaLiquidos(System.IAsyncResult result) {
            return base.Channel.EndbuscarCitologiaLiquidos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndbuscarCitologiaLiquidos(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndbuscarCitologiaLiquidos(result);
            return retVal.Body.buscarCitologiaLiquidosResult;
        }
        
        private System.IAsyncResult OnBeginbuscarCitologiaLiquidos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BeginbuscarCitologiaLiquidos(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndbuscarCitologiaLiquidos(System.IAsyncResult result) {
            string retVal = this.EndbuscarCitologiaLiquidos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnbuscarCitologiaLiquidosCompleted(object state) {
            if ((this.buscarCitologiaLiquidosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.buscarCitologiaLiquidosCompleted(this, new buscarCitologiaLiquidosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void buscarCitologiaLiquidosAsync(string idMuestra) {
            this.buscarCitologiaLiquidosAsync(idMuestra, null);
        }
        
        public void buscarCitologiaLiquidosAsync(string idMuestra, object userState) {
            if ((this.onBeginbuscarCitologiaLiquidosDelegate == null)) {
                this.onBeginbuscarCitologiaLiquidosDelegate = new BeginOperationDelegate(this.OnBeginbuscarCitologiaLiquidos);
            }
            if ((this.onEndbuscarCitologiaLiquidosDelegate == null)) {
                this.onEndbuscarCitologiaLiquidosDelegate = new EndOperationDelegate(this.OnEndbuscarCitologiaLiquidos);
            }
            if ((this.onbuscarCitologiaLiquidosCompletedDelegate == null)) {
                this.onbuscarCitologiaLiquidosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnbuscarCitologiaLiquidosCompleted);
            }
            base.InvokeAsync(this.onBeginbuscarCitologiaLiquidosDelegate, new object[] {
                        idMuestra}, this.onEndbuscarCitologiaLiquidosDelegate, this.onbuscarCitologiaLiquidosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginbuscarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginbuscarBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginbuscarBiopsia(string idMuestra, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequestBody();
            inValue.Body.idMuestra = idMuestra;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginbuscarBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndbuscarBiopsia(System.IAsyncResult result) {
            return base.Channel.EndbuscarBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndbuscarBiopsia(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndbuscarBiopsia(result);
            return retVal.Body.buscarBiopsiaResult;
        }
        
        private System.IAsyncResult OnBeginbuscarBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idMuestra = ((string)(inValues[0]));
            return this.BeginbuscarBiopsia(idMuestra, callback, asyncState);
        }
        
        private object[] OnEndbuscarBiopsia(System.IAsyncResult result) {
            string retVal = this.EndbuscarBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnbuscarBiopsiaCompleted(object state) {
            if ((this.buscarBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.buscarBiopsiaCompleted(this, new buscarBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void buscarBiopsiaAsync(string idMuestra) {
            this.buscarBiopsiaAsync(idMuestra, null);
        }
        
        public void buscarBiopsiaAsync(string idMuestra, object userState) {
            if ((this.onBeginbuscarBiopsiaDelegate == null)) {
                this.onBeginbuscarBiopsiaDelegate = new BeginOperationDelegate(this.OnBeginbuscarBiopsia);
            }
            if ((this.onEndbuscarBiopsiaDelegate == null)) {
                this.onEndbuscarBiopsiaDelegate = new EndOperationDelegate(this.OnEndbuscarBiopsia);
            }
            if ((this.onbuscarBiopsiaCompletedDelegate == null)) {
                this.onbuscarBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnbuscarBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBeginbuscarBiopsiaDelegate, new object[] {
                        idMuestra}, this.onEndbuscarBiopsiaDelegate, this.onbuscarBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginbuscarMuestraPorPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginbuscarMuestraPorPaciente(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginbuscarMuestraPorPaciente(string pNombre, string sNombre, string pApellido, string sApellido, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequestBody();
            inValue.Body.pNombre = pNombre;
            inValue.Body.sNombre = sNombre;
            inValue.Body.pApellido = pApellido;
            inValue.Body.sApellido = sApellido;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginbuscarMuestraPorPaciente(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndbuscarMuestraPorPaciente(System.IAsyncResult result) {
            return base.Channel.EndbuscarMuestraPorPaciente(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndbuscarMuestraPorPaciente(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndbuscarMuestraPorPaciente(result);
            return retVal.Body.buscarMuestraPorPacienteResult;
        }
        
        private System.IAsyncResult OnBeginbuscarMuestraPorPaciente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pNombre = ((string)(inValues[0]));
            string sNombre = ((string)(inValues[1]));
            string pApellido = ((string)(inValues[2]));
            string sApellido = ((string)(inValues[3]));
            return this.BeginbuscarMuestraPorPaciente(pNombre, sNombre, pApellido, sApellido, callback, asyncState);
        }
        
        private object[] OnEndbuscarMuestraPorPaciente(System.IAsyncResult result) {
            string retVal = this.EndbuscarMuestraPorPaciente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnbuscarMuestraPorPacienteCompleted(object state) {
            if ((this.buscarMuestraPorPacienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.buscarMuestraPorPacienteCompleted(this, new buscarMuestraPorPacienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void buscarMuestraPorPacienteAsync(string pNombre, string sNombre, string pApellido, string sApellido) {
            this.buscarMuestraPorPacienteAsync(pNombre, sNombre, pApellido, sApellido, null);
        }
        
        public void buscarMuestraPorPacienteAsync(string pNombre, string sNombre, string pApellido, string sApellido, object userState) {
            if ((this.onBeginbuscarMuestraPorPacienteDelegate == null)) {
                this.onBeginbuscarMuestraPorPacienteDelegate = new BeginOperationDelegate(this.OnBeginbuscarMuestraPorPaciente);
            }
            if ((this.onEndbuscarMuestraPorPacienteDelegate == null)) {
                this.onEndbuscarMuestraPorPacienteDelegate = new EndOperationDelegate(this.OnEndbuscarMuestraPorPaciente);
            }
            if ((this.onbuscarMuestraPorPacienteCompletedDelegate == null)) {
                this.onbuscarMuestraPorPacienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnbuscarMuestraPorPacienteCompleted);
            }
            base.InvokeAsync(this.onBeginbuscarMuestraPorPacienteDelegate, new object[] {
                        pNombre,
                        sNombre,
                        pApellido,
                        sApellido}, this.onEndbuscarMuestraPorPacienteDelegate, this.onbuscarMuestraPorPacienteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginBorrarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarMedico(string nombre, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequestBody();
            inValue.Body.nombre = nombre;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginBorrarMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndBorrarMedico(System.IAsyncResult result) {
            return base.Channel.EndBorrarMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarMedico(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndBorrarMedico(result);
            return retVal.Body.BorrarMedicoResult;
        }
        
        private System.IAsyncResult OnBeginBorrarMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre = ((string)(inValues[0]));
            return this.BeginBorrarMedico(nombre, callback, asyncState);
        }
        
        private object[] OnEndBorrarMedico(System.IAsyncResult result) {
            bool retVal = this.EndBorrarMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarMedicoCompleted(object state) {
            if ((this.BorrarMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarMedicoCompleted(this, new BorrarMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarMedicoAsync(string nombre) {
            this.BorrarMedicoAsync(nombre, null);
        }
        
        public void BorrarMedicoAsync(string nombre, object userState) {
            if ((this.onBeginBorrarMedicoDelegate == null)) {
                this.onBeginBorrarMedicoDelegate = new BeginOperationDelegate(this.OnBeginBorrarMedico);
            }
            if ((this.onEndBorrarMedicoDelegate == null)) {
                this.onEndBorrarMedicoDelegate = new EndOperationDelegate(this.OnEndBorrarMedico);
            }
            if ((this.onBorrarMedicoCompletedDelegate == null)) {
                this.onBorrarMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarMedicoCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarMedicoDelegate, new object[] {
                        nombre}, this.onEndBorrarMedicoDelegate, this.onBorrarMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginBorrarMuestra(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarMuestra(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarMuestra(string codigo, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequestBody();
            inValue.Body.codigo = codigo;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginBorrarMuestra(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndBorrarMuestra(System.IAsyncResult result) {
            return base.Channel.EndBorrarMuestra(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarMuestra(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndBorrarMuestra(result);
            return retVal.Body.BorrarMuestraResult;
        }
        
        private System.IAsyncResult OnBeginBorrarMuestra(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codigo = ((string)(inValues[0]));
            return this.BeginBorrarMuestra(codigo, callback, asyncState);
        }
        
        private object[] OnEndBorrarMuestra(System.IAsyncResult result) {
            bool retVal = this.EndBorrarMuestra(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarMuestraCompleted(object state) {
            if ((this.BorrarMuestraCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarMuestraCompleted(this, new BorrarMuestraCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarMuestraAsync(string codigo) {
            this.BorrarMuestraAsync(codigo, null);
        }
        
        public void BorrarMuestraAsync(string codigo, object userState) {
            if ((this.onBeginBorrarMuestraDelegate == null)) {
                this.onBeginBorrarMuestraDelegate = new BeginOperationDelegate(this.OnBeginBorrarMuestra);
            }
            if ((this.onEndBorrarMuestraDelegate == null)) {
                this.onEndBorrarMuestraDelegate = new EndOperationDelegate(this.OnEndBorrarMuestra);
            }
            if ((this.onBorrarMuestraCompletedDelegate == null)) {
                this.onBorrarMuestraCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarMuestraCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarMuestraDelegate, new object[] {
                        codigo}, this.onEndBorrarMuestraDelegate, this.onBorrarMuestraCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginBorrarMaterial(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarMaterial(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarMaterial(string material, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequestBody();
            inValue.Body.material = material;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginBorrarMaterial(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndBorrarMaterial(System.IAsyncResult result) {
            return base.Channel.EndBorrarMaterial(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarMaterial(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndBorrarMaterial(result);
            return retVal.Body.BorrarMaterialResult;
        }
        
        private System.IAsyncResult OnBeginBorrarMaterial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string material = ((string)(inValues[0]));
            return this.BeginBorrarMaterial(material, callback, asyncState);
        }
        
        private object[] OnEndBorrarMaterial(System.IAsyncResult result) {
            bool retVal = this.EndBorrarMaterial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarMaterialCompleted(object state) {
            if ((this.BorrarMaterialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarMaterialCompleted(this, new BorrarMaterialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarMaterialAsync(string material) {
            this.BorrarMaterialAsync(material, null);
        }
        
        public void BorrarMaterialAsync(string material, object userState) {
            if ((this.onBeginBorrarMaterialDelegate == null)) {
                this.onBeginBorrarMaterialDelegate = new BeginOperationDelegate(this.OnBeginBorrarMaterial);
            }
            if ((this.onEndBorrarMaterialDelegate == null)) {
                this.onEndBorrarMaterialDelegate = new EndOperationDelegate(this.OnEndBorrarMaterial);
            }
            if ((this.onBorrarMaterialCompletedDelegate == null)) {
                this.onBorrarMaterialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarMaterialCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarMaterialDelegate, new object[] {
                        material}, this.onEndBorrarMaterialDelegate, this.onBorrarMaterialCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginBorrarEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrarEmpleado(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginBorrarEmpleado(string usuario, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequestBody();
            inValue.Body.usuario = usuario;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginBorrarEmpleado(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndBorrarEmpleado(System.IAsyncResult result) {
            return base.Channel.EndBorrarEmpleado(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndBorrarEmpleado(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndBorrarEmpleado(result);
            return retVal.Body.BorrarEmpleadoResult;
        }
        
        private System.IAsyncResult OnBeginBorrarEmpleado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            return this.BeginBorrarEmpleado(usuario, callback, asyncState);
        }
        
        private object[] OnEndBorrarEmpleado(System.IAsyncResult result) {
            bool retVal = this.EndBorrarEmpleado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrarEmpleadoCompleted(object state) {
            if ((this.BorrarEmpleadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrarEmpleadoCompleted(this, new BorrarEmpleadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrarEmpleadoAsync(string usuario) {
            this.BorrarEmpleadoAsync(usuario, null);
        }
        
        public void BorrarEmpleadoAsync(string usuario, object userState) {
            if ((this.onBeginBorrarEmpleadoDelegate == null)) {
                this.onBeginBorrarEmpleadoDelegate = new BeginOperationDelegate(this.OnBeginBorrarEmpleado);
            }
            if ((this.onEndBorrarEmpleadoDelegate == null)) {
                this.onEndBorrarEmpleadoDelegate = new EndOperationDelegate(this.OnEndBorrarEmpleado);
            }
            if ((this.onBorrarEmpleadoCompletedDelegate == null)) {
                this.onBorrarEmpleadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrarEmpleadoCompleted);
            }
            base.InvokeAsync(this.onBeginBorrarEmpleadoDelegate, new object[] {
                        usuario}, this.onEndBorrarEmpleadoDelegate, this.onBorrarEmpleadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginActualizarCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarCitologia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarCitologia(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    bool anticonceptivos_orales, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.Diagnostico = Diagnostico;
            inValue.Body.comentario = comentario;
            inValue.Body.inflamacion = inflamacion;
            inValue.Body.calidadFrotis_causa = calidadFrotis_causa;
            inValue.Body.calidadFrotisAdecuado = calidadFrotisAdecuado;
            inValue.Body.candida_sp = candida_sp;
            inValue.Body.gardnerela = gardnerela;
            inValue.Body.vaginosis = vaginosis;
            inValue.Body.herpes = herpes;
            inValue.Body.tricomonas = tricomonas;
            inValue.Body.otroAgenteInfeccioso = otroAgenteInfeccioso;
            inValue.Body.evaluacionHormonal_basales = evaluacionHormonal_basales;
            inValue.Body.evaluacionhormonal_intermedias = evaluacionhormonal_intermedias;
            inValue.Body.evaluacionhormonal_superficiales = evaluacionhormonal_superficiales;
            inValue.Body.Colposcopia = Colposcopia;
            inValue.Body.repetir = repetir;
            inValue.Body.recomendaciones_otra = recomendaciones_otra;
            inValue.Body.recomendaciones_biopsia = recomendaciones_biopsia;
            inValue.Body.recomendaciones_tratamientos = recomendaciones_tratamientos;
            inValue.Body.NIC_I = NIC_I;
            inValue.Body.NIC_II = NIC_II;
            inValue.Body.NIC_III = NIC_III;
            inValue.Body.origen_muestra = origen_muestra;
            inValue.Body.negativo = negativo;
            inValue.Body.VPH = VPH;
            inValue.Body.glandular = glandular;
            inValue.Body.escamosa = escamosa;
            inValue.Body.adenocarcinomana = adenocarcinomana;
            inValue.Body.carcinomana_celula = carcinomana_celula;
            inValue.Body.celula_atipica = celula_atipica;
            inValue.Body.lesion_escamosa_AltoGrado = lesion_escamosa_AltoGrado;
            inValue.Body.lesion_escamosa_BajoGrado = lesion_escamosa_BajoGrado;
            inValue.Body.anticonceptivos_orales = anticonceptivos_orales;
            inValue.Body.fecha_examen = fecha_examen;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.diu = diu;
            inValue.Body.fur = fur;
            inValue.Body.fup = fup;
            inValue.Body.p_nombre = p_nombre;
            inValue.Body.s_nombre = s_nombre;
            inValue.Body.p_apellido = p_apellido;
            inValue.Body.s_apellido = s_apellido;
            inValue.Body.edad = edad;
            inValue.Body.expediente = expediente;
            inValue.Body.precio = precio;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginActualizarCitologia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndActualizarCitologia(System.IAsyncResult result) {
            return base.Channel.EndActualizarCitologia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarCitologia(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndActualizarCitologia(result);
            return retVal.Body.ActualizarCitologiaResult;
        }
        
        private System.IAsyncResult OnBeginActualizarCitologia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string Diagnostico = ((string)(inValues[1]));
            string comentario = ((string)(inValues[2]));
            string inflamacion = ((string)(inValues[3]));
            string calidadFrotis_causa = ((string)(inValues[4]));
            bool calidadFrotisAdecuado = ((bool)(inValues[5]));
            bool candida_sp = ((bool)(inValues[6]));
            bool gardnerela = ((bool)(inValues[7]));
            bool vaginosis = ((bool)(inValues[8]));
            bool herpes = ((bool)(inValues[9]));
            bool tricomonas = ((bool)(inValues[10]));
            string otroAgenteInfeccioso = ((string)(inValues[11]));
            int evaluacionHormonal_basales = ((int)(inValues[12]));
            int evaluacionhormonal_intermedias = ((int)(inValues[13]));
            int evaluacionhormonal_superficiales = ((int)(inValues[14]));
            bool Colposcopia = ((bool)(inValues[15]));
            int repetir = ((int)(inValues[16]));
            string recomendaciones_otra = ((string)(inValues[17]));
            bool recomendaciones_biopsia = ((bool)(inValues[18]));
            bool recomendaciones_tratamientos = ((bool)(inValues[19]));
            bool NIC_I = ((bool)(inValues[20]));
            bool NIC_II = ((bool)(inValues[21]));
            bool NIC_III = ((bool)(inValues[22]));
            string origen_muestra = ((string)(inValues[23]));
            bool negativo = ((bool)(inValues[24]));
            bool VPH = ((bool)(inValues[25]));
            bool glandular = ((bool)(inValues[26]));
            bool escamosa = ((bool)(inValues[27]));
            bool adenocarcinomana = ((bool)(inValues[28]));
            bool carcinomana_celula = ((bool)(inValues[29]));
            bool celula_atipica = ((bool)(inValues[30]));
            bool lesion_escamosa_AltoGrado = ((bool)(inValues[31]));
            bool lesion_escamosa_BajoGrado = ((bool)(inValues[32]));
            bool anticonceptivos_orales = ((bool)(inValues[33]));
            string fecha_examen = ((string)(inValues[34]));
            string diagnostico_medico = ((string)(inValues[35]));
            bool diu = ((bool)(inValues[36]));
            string fur = ((string)(inValues[37]));
            string fup = ((string)(inValues[38]));
            string p_nombre = ((string)(inValues[39]));
            string s_nombre = ((string)(inValues[40]));
            string p_apellido = ((string)(inValues[41]));
            string s_apellido = ((string)(inValues[42]));
            int edad = ((int)(inValues[43]));
            string expediente = ((string)(inValues[44]));
            int precio = ((int)(inValues[45]));
            return this.BeginActualizarCitologia(cod_examen, Diagnostico, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamosa, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, anticonceptivos_orales, fecha_examen, diagnostico_medico, diu, fur, fup, p_nombre, s_nombre, p_apellido, s_apellido, edad, expediente, precio, callback, asyncState);
        }
        
        private object[] OnEndActualizarCitologia(System.IAsyncResult result) {
            bool retVal = this.EndActualizarCitologia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarCitologiaCompleted(object state) {
            if ((this.ActualizarCitologiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarCitologiaCompleted(this, new ActualizarCitologiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarCitologiaAsync(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    bool anticonceptivos_orales, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio) {
            this.ActualizarCitologiaAsync(cod_examen, Diagnostico, comentario, inflamacion, calidadFrotis_causa, calidadFrotisAdecuado, candida_sp, gardnerela, vaginosis, herpes, tricomonas, otroAgenteInfeccioso, evaluacionHormonal_basales, evaluacionhormonal_intermedias, evaluacionhormonal_superficiales, Colposcopia, repetir, recomendaciones_otra, recomendaciones_biopsia, recomendaciones_tratamientos, NIC_I, NIC_II, NIC_III, origen_muestra, negativo, VPH, glandular, escamosa, adenocarcinomana, carcinomana_celula, celula_atipica, lesion_escamosa_AltoGrado, lesion_escamosa_BajoGrado, anticonceptivos_orales, fecha_examen, diagnostico_medico, diu, fur, fup, p_nombre, s_nombre, p_apellido, s_apellido, edad, expediente, precio, null);
        }
        
        public void ActualizarCitologiaAsync(
                    string cod_examen, 
                    string Diagnostico, 
                    string comentario, 
                    string inflamacion, 
                    string calidadFrotis_causa, 
                    bool calidadFrotisAdecuado, 
                    bool candida_sp, 
                    bool gardnerela, 
                    bool vaginosis, 
                    bool herpes, 
                    bool tricomonas, 
                    string otroAgenteInfeccioso, 
                    int evaluacionHormonal_basales, 
                    int evaluacionhormonal_intermedias, 
                    int evaluacionhormonal_superficiales, 
                    bool Colposcopia, 
                    int repetir, 
                    string recomendaciones_otra, 
                    bool recomendaciones_biopsia, 
                    bool recomendaciones_tratamientos, 
                    bool NIC_I, 
                    bool NIC_II, 
                    bool NIC_III, 
                    string origen_muestra, 
                    bool negativo, 
                    bool VPH, 
                    bool glandular, 
                    bool escamosa, 
                    bool adenocarcinomana, 
                    bool carcinomana_celula, 
                    bool celula_atipica, 
                    bool lesion_escamosa_AltoGrado, 
                    bool lesion_escamosa_BajoGrado, 
                    bool anticonceptivos_orales, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio, 
                    object userState) {
            if ((this.onBeginActualizarCitologiaDelegate == null)) {
                this.onBeginActualizarCitologiaDelegate = new BeginOperationDelegate(this.OnBeginActualizarCitologia);
            }
            if ((this.onEndActualizarCitologiaDelegate == null)) {
                this.onEndActualizarCitologiaDelegate = new EndOperationDelegate(this.OnEndActualizarCitologia);
            }
            if ((this.onActualizarCitologiaCompletedDelegate == null)) {
                this.onActualizarCitologiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarCitologiaCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarCitologiaDelegate, new object[] {
                        cod_examen,
                        Diagnostico,
                        comentario,
                        inflamacion,
                        calidadFrotis_causa,
                        calidadFrotisAdecuado,
                        candida_sp,
                        gardnerela,
                        vaginosis,
                        herpes,
                        tricomonas,
                        otroAgenteInfeccioso,
                        evaluacionHormonal_basales,
                        evaluacionhormonal_intermedias,
                        evaluacionhormonal_superficiales,
                        Colposcopia,
                        repetir,
                        recomendaciones_otra,
                        recomendaciones_biopsia,
                        recomendaciones_tratamientos,
                        NIC_I,
                        NIC_II,
                        NIC_III,
                        origen_muestra,
                        negativo,
                        VPH,
                        glandular,
                        escamosa,
                        adenocarcinomana,
                        carcinomana_celula,
                        celula_atipica,
                        lesion_escamosa_AltoGrado,
                        lesion_escamosa_BajoGrado,
                        anticonceptivos_orales,
                        fecha_examen,
                        diagnostico_medico,
                        diu,
                        fur,
                        fup,
                        p_nombre,
                        s_nombre,
                        p_apellido,
                        s_apellido,
                        edad,
                        expediente,
                        precio}, this.onEndActualizarCitologiaDelegate, this.onActualizarCitologiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginActualizarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarBiopsia(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarBiopsia(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string codificacion, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    string materialEnviado, 
                    int precio, 
                    string fechaRecibido, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.macroscopica = macroscopica;
            inValue.Body.microscopica = microscopica;
            inValue.Body.codificacion = codificacion;
            inValue.Body.diagnostico = diagnostico;
            inValue.Body.fecha_examen = fecha_examen;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.diu = diu;
            inValue.Body.fur = fur;
            inValue.Body.fup = fup;
            inValue.Body.p_nombre = p_nombre;
            inValue.Body.s_nombre = s_nombre;
            inValue.Body.p_apellido = p_apellido;
            inValue.Body.s_apellido = s_apellido;
            inValue.Body.edad = edad;
            inValue.Body.expediente = expediente;
            inValue.Body.materialEnviado = materialEnviado;
            inValue.Body.precio = precio;
            inValue.Body.fechaRecibido = fechaRecibido;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginActualizarBiopsia(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndActualizarBiopsia(System.IAsyncResult result) {
            return base.Channel.EndActualizarBiopsia(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarBiopsia(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndActualizarBiopsia(result);
            return retVal.Body.ActualizarBiopsiaResult;
        }
        
        private System.IAsyncResult OnBeginActualizarBiopsia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string macroscopica = ((string)(inValues[1]));
            string microscopica = ((string)(inValues[2]));
            string codificacion = ((string)(inValues[3]));
            string diagnostico = ((string)(inValues[4]));
            string fecha_examen = ((string)(inValues[5]));
            string diagnostico_medico = ((string)(inValues[6]));
            bool diu = ((bool)(inValues[7]));
            string fur = ((string)(inValues[8]));
            string fup = ((string)(inValues[9]));
            string p_nombre = ((string)(inValues[10]));
            string s_nombre = ((string)(inValues[11]));
            string p_apellido = ((string)(inValues[12]));
            string s_apellido = ((string)(inValues[13]));
            int edad = ((int)(inValues[14]));
            string expediente = ((string)(inValues[15]));
            string materialEnviado = ((string)(inValues[16]));
            int precio = ((int)(inValues[17]));
            string fechaRecibido = ((string)(inValues[18]));
            return this.BeginActualizarBiopsia(cod_examen, macroscopica, microscopica, codificacion, diagnostico, fecha_examen, diagnostico_medico, diu, fur, fup, p_nombre, s_nombre, p_apellido, s_apellido, edad, expediente, materialEnviado, precio, fechaRecibido, callback, asyncState);
        }
        
        private object[] OnEndActualizarBiopsia(System.IAsyncResult result) {
            bool retVal = this.EndActualizarBiopsia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarBiopsiaCompleted(object state) {
            if ((this.ActualizarBiopsiaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarBiopsiaCompleted(this, new ActualizarBiopsiaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarBiopsiaAsync(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string codificacion, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    string materialEnviado, 
                    int precio, 
                    string fechaRecibido) {
            this.ActualizarBiopsiaAsync(cod_examen, macroscopica, microscopica, codificacion, diagnostico, fecha_examen, diagnostico_medico, diu, fur, fup, p_nombre, s_nombre, p_apellido, s_apellido, edad, expediente, materialEnviado, precio, fechaRecibido, null);
        }
        
        public void ActualizarBiopsiaAsync(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string codificacion, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    string materialEnviado, 
                    int precio, 
                    string fechaRecibido, 
                    object userState) {
            if ((this.onBeginActualizarBiopsiaDelegate == null)) {
                this.onBeginActualizarBiopsiaDelegate = new BeginOperationDelegate(this.OnBeginActualizarBiopsia);
            }
            if ((this.onEndActualizarBiopsiaDelegate == null)) {
                this.onEndActualizarBiopsiaDelegate = new EndOperationDelegate(this.OnEndActualizarBiopsia);
            }
            if ((this.onActualizarBiopsiaCompletedDelegate == null)) {
                this.onActualizarBiopsiaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarBiopsiaCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarBiopsiaDelegate, new object[] {
                        cod_examen,
                        macroscopica,
                        microscopica,
                        codificacion,
                        diagnostico,
                        fecha_examen,
                        diagnostico_medico,
                        diu,
                        fur,
                        fup,
                        p_nombre,
                        s_nombre,
                        p_apellido,
                        s_apellido,
                        edad,
                        expediente,
                        materialEnviado,
                        precio,
                        fechaRecibido}, this.onEndActualizarBiopsiaDelegate, this.onActualizarBiopsiaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginActualizarCitologiaLiquidos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarCitologiaLiquidos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarCitologiaLiquidos(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio, 
                    string material_enviado, 
                    string fechaRecibido, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequestBody();
            inValue.Body.cod_examen = cod_examen;
            inValue.Body.macroscopica = macroscopica;
            inValue.Body.microscopica = microscopica;
            inValue.Body.diagnostico = diagnostico;
            inValue.Body.fecha_examen = fecha_examen;
            inValue.Body.diagnostico_medico = diagnostico_medico;
            inValue.Body.diu = diu;
            inValue.Body.fur = fur;
            inValue.Body.fup = fup;
            inValue.Body.p_nombre = p_nombre;
            inValue.Body.s_nombre = s_nombre;
            inValue.Body.p_apellido = p_apellido;
            inValue.Body.s_apellido = s_apellido;
            inValue.Body.edad = edad;
            inValue.Body.expediente = expediente;
            inValue.Body.precio = precio;
            inValue.Body.material_enviado = material_enviado;
            inValue.Body.fechaRecibido = fechaRecibido;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginActualizarCitologiaLiquidos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndActualizarCitologiaLiquidos(System.IAsyncResult result) {
            return base.Channel.EndActualizarCitologiaLiquidos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarCitologiaLiquidos(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndActualizarCitologiaLiquidos(result);
            return retVal.Body.ActualizarCitologiaLiquidosResult;
        }
        
        private System.IAsyncResult OnBeginActualizarCitologiaLiquidos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cod_examen = ((string)(inValues[0]));
            string macroscopica = ((string)(inValues[1]));
            string microscopica = ((string)(inValues[2]));
            string diagnostico = ((string)(inValues[3]));
            string fecha_examen = ((string)(inValues[4]));
            string diagnostico_medico = ((string)(inValues[5]));
            bool diu = ((bool)(inValues[6]));
            string fur = ((string)(inValues[7]));
            string fup = ((string)(inValues[8]));
            string p_nombre = ((string)(inValues[9]));
            string s_nombre = ((string)(inValues[10]));
            string p_apellido = ((string)(inValues[11]));
            string s_apellido = ((string)(inValues[12]));
            int edad = ((int)(inValues[13]));
            string expediente = ((string)(inValues[14]));
            int precio = ((int)(inValues[15]));
            string material_enviado = ((string)(inValues[16]));
            string fechaRecibido = ((string)(inValues[17]));
            return this.BeginActualizarCitologiaLiquidos(cod_examen, macroscopica, microscopica, diagnostico, fecha_examen, diagnostico_medico, diu, fur, fup, p_nombre, s_nombre, p_apellido, s_apellido, edad, expediente, precio, material_enviado, fechaRecibido, callback, asyncState);
        }
        
        private object[] OnEndActualizarCitologiaLiquidos(System.IAsyncResult result) {
            bool retVal = this.EndActualizarCitologiaLiquidos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarCitologiaLiquidosCompleted(object state) {
            if ((this.ActualizarCitologiaLiquidosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarCitologiaLiquidosCompleted(this, new ActualizarCitologiaLiquidosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarCitologiaLiquidosAsync(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio, 
                    string material_enviado, 
                    string fechaRecibido) {
            this.ActualizarCitologiaLiquidosAsync(cod_examen, macroscopica, microscopica, diagnostico, fecha_examen, diagnostico_medico, diu, fur, fup, p_nombre, s_nombre, p_apellido, s_apellido, edad, expediente, precio, material_enviado, fechaRecibido, null);
        }
        
        public void ActualizarCitologiaLiquidosAsync(
                    string cod_examen, 
                    string macroscopica, 
                    string microscopica, 
                    string diagnostico, 
                    string fecha_examen, 
                    string diagnostico_medico, 
                    bool diu, 
                    string fur, 
                    string fup, 
                    string p_nombre, 
                    string s_nombre, 
                    string p_apellido, 
                    string s_apellido, 
                    int edad, 
                    string expediente, 
                    int precio, 
                    string material_enviado, 
                    string fechaRecibido, 
                    object userState) {
            if ((this.onBeginActualizarCitologiaLiquidosDelegate == null)) {
                this.onBeginActualizarCitologiaLiquidosDelegate = new BeginOperationDelegate(this.OnBeginActualizarCitologiaLiquidos);
            }
            if ((this.onEndActualizarCitologiaLiquidosDelegate == null)) {
                this.onEndActualizarCitologiaLiquidosDelegate = new EndOperationDelegate(this.OnEndActualizarCitologiaLiquidos);
            }
            if ((this.onActualizarCitologiaLiquidosCompletedDelegate == null)) {
                this.onActualizarCitologiaLiquidosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarCitologiaLiquidosCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarCitologiaLiquidosDelegate, new object[] {
                        cod_examen,
                        macroscopica,
                        microscopica,
                        diagnostico,
                        fecha_examen,
                        diagnostico_medico,
                        diu,
                        fur,
                        fup,
                        p_nombre,
                        s_nombre,
                        p_apellido,
                        s_apellido,
                        edad,
                        expediente,
                        precio,
                        material_enviado,
                        fechaRecibido}, this.onEndActualizarCitologiaLiquidosDelegate, this.onActualizarCitologiaLiquidosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginActualizarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarMedico(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarMedico(string nombre, string telefono, string celular, string direccion, string compania, string numeroCol, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequestBody();
            inValue.Body.nombre = nombre;
            inValue.Body.telefono = telefono;
            inValue.Body.celular = celular;
            inValue.Body.direccion = direccion;
            inValue.Body.compania = compania;
            inValue.Body.numeroCol = numeroCol;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginActualizarMedico(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndActualizarMedico(System.IAsyncResult result) {
            return base.Channel.EndActualizarMedico(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarMedico(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndActualizarMedico(result);
            return retVal.Body.ActualizarMedicoResult;
        }
        
        private System.IAsyncResult OnBeginActualizarMedico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nombre = ((string)(inValues[0]));
            string telefono = ((string)(inValues[1]));
            string celular = ((string)(inValues[2]));
            string direccion = ((string)(inValues[3]));
            string compania = ((string)(inValues[4]));
            string numeroCol = ((string)(inValues[5]));
            return this.BeginActualizarMedico(nombre, telefono, celular, direccion, compania, numeroCol, callback, asyncState);
        }
        
        private object[] OnEndActualizarMedico(System.IAsyncResult result) {
            bool retVal = this.EndActualizarMedico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarMedicoCompleted(object state) {
            if ((this.ActualizarMedicoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarMedicoCompleted(this, new ActualizarMedicoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarMedicoAsync(string nombre, string telefono, string celular, string direccion, string compania, string numeroCol) {
            this.ActualizarMedicoAsync(nombre, telefono, celular, direccion, compania, numeroCol, null);
        }
        
        public void ActualizarMedicoAsync(string nombre, string telefono, string celular, string direccion, string compania, string numeroCol, object userState) {
            if ((this.onBeginActualizarMedicoDelegate == null)) {
                this.onBeginActualizarMedicoDelegate = new BeginOperationDelegate(this.OnBeginActualizarMedico);
            }
            if ((this.onEndActualizarMedicoDelegate == null)) {
                this.onEndActualizarMedicoDelegate = new EndOperationDelegate(this.OnEndActualizarMedico);
            }
            if ((this.onActualizarMedicoCompletedDelegate == null)) {
                this.onActualizarMedicoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarMedicoCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarMedicoDelegate, new object[] {
                        nombre,
                        telefono,
                        celular,
                        direccion,
                        compania,
                        numeroCol}, this.onEndActualizarMedicoDelegate, this.onActualizarMedicoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginActualizarPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarPaciente(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarPaciente(int id, bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string Expediente, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequestBody();
            inValue.Body.id = id;
            inValue.Body.DIU = DIU;
            inValue.Body.fur = fur;
            inValue.Body.fup = fup;
            inValue.Body.pnombre = pnombre;
            inValue.Body.snombre = snombre;
            inValue.Body.papellido = papellido;
            inValue.Body.sapellido = sapellido;
            inValue.Body.edad = edad;
            inValue.Body.anticonceptivos = anticonceptivos;
            inValue.Body.Expediente = Expediente;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginActualizarPaciente(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndActualizarPaciente(System.IAsyncResult result) {
            return base.Channel.EndActualizarPaciente(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarPaciente(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndActualizarPaciente(result);
            return retVal.Body.ActualizarPacienteResult;
        }
        
        private System.IAsyncResult OnBeginActualizarPaciente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            bool DIU = ((bool)(inValues[1]));
            string fur = ((string)(inValues[2]));
            string fup = ((string)(inValues[3]));
            string pnombre = ((string)(inValues[4]));
            string snombre = ((string)(inValues[5]));
            string papellido = ((string)(inValues[6]));
            string sapellido = ((string)(inValues[7]));
            int edad = ((int)(inValues[8]));
            bool anticonceptivos = ((bool)(inValues[9]));
            string Expediente = ((string)(inValues[10]));
            return this.BeginActualizarPaciente(id, DIU, fur, fup, pnombre, snombre, papellido, sapellido, edad, anticonceptivos, Expediente, callback, asyncState);
        }
        
        private object[] OnEndActualizarPaciente(System.IAsyncResult result) {
            bool retVal = this.EndActualizarPaciente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarPacienteCompleted(object state) {
            if ((this.ActualizarPacienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarPacienteCompleted(this, new ActualizarPacienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarPacienteAsync(int id, bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string Expediente) {
            this.ActualizarPacienteAsync(id, DIU, fur, fup, pnombre, snombre, papellido, sapellido, edad, anticonceptivos, Expediente, null);
        }
        
        public void ActualizarPacienteAsync(int id, bool DIU, string fur, string fup, string pnombre, string snombre, string papellido, string sapellido, int edad, bool anticonceptivos, string Expediente, object userState) {
            if ((this.onBeginActualizarPacienteDelegate == null)) {
                this.onBeginActualizarPacienteDelegate = new BeginOperationDelegate(this.OnBeginActualizarPaciente);
            }
            if ((this.onEndActualizarPacienteDelegate == null)) {
                this.onEndActualizarPacienteDelegate = new EndOperationDelegate(this.OnEndActualizarPaciente);
            }
            if ((this.onActualizarPacienteCompletedDelegate == null)) {
                this.onActualizarPacienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarPacienteCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarPacienteDelegate, new object[] {
                        id,
                        DIU,
                        fur,
                        fup,
                        pnombre,
                        snombre,
                        papellido,
                        sapellido,
                        edad,
                        anticonceptivos,
                        Expediente}, this.onEndActualizarPacienteDelegate, this.onActualizarPacienteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.BeginActualizarUsuario(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarUsuario(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginActualizarUsuario(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos, System.AsyncCallback callback, object asyncState) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequest inValue = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequest();
            inValue.Body = new Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequestBody();
            inValue.Body.usuario = usuario;
            inValue.Body.tipoEmpleado = tipoEmpleado;
            inValue.Body.p_nombre = p_nombre;
            inValue.Body.s_nombre = s_nombre;
            inValue.Body.p_apellido = p_apellido;
            inValue.Body.s_apellido = s_apellido;
            inValue.Body.contrasena = contrasena;
            inValue.Body.correo = correo;
            inValue.Body.accesos = accesos;
            return ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).BeginActualizarUsuario(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponse Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap.EndActualizarUsuario(System.IAsyncResult result) {
            return base.Channel.EndActualizarUsuario(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndActualizarUsuario(System.IAsyncResult result) {
            Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponse retVal = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap)(this)).EndActualizarUsuario(result);
            return retVal.Body.ActualizarUsuarioResult;
        }
        
        private System.IAsyncResult OnBeginActualizarUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usuario = ((string)(inValues[0]));
            string tipoEmpleado = ((string)(inValues[1]));
            string p_nombre = ((string)(inValues[2]));
            string s_nombre = ((string)(inValues[3]));
            string p_apellido = ((string)(inValues[4]));
            string s_apellido = ((string)(inValues[5]));
            string contrasena = ((string)(inValues[6]));
            string correo = ((string)(inValues[7]));
            string accesos = ((string)(inValues[8]));
            return this.BeginActualizarUsuario(usuario, tipoEmpleado, p_nombre, s_nombre, p_apellido, s_apellido, contrasena, correo, accesos, callback, asyncState);
        }
        
        private object[] OnEndActualizarUsuario(System.IAsyncResult result) {
            bool retVal = this.EndActualizarUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarUsuarioCompleted(object state) {
            if ((this.ActualizarUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarUsuarioCompleted(this, new ActualizarUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarUsuarioAsync(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos) {
            this.ActualizarUsuarioAsync(usuario, tipoEmpleado, p_nombre, s_nombre, p_apellido, s_apellido, contrasena, correo, accesos, null);
        }
        
        public void ActualizarUsuarioAsync(string usuario, string tipoEmpleado, string p_nombre, string s_nombre, string p_apellido, string s_apellido, string contrasena, string correo, string accesos, object userState) {
            if ((this.onBeginActualizarUsuarioDelegate == null)) {
                this.onBeginActualizarUsuarioDelegate = new BeginOperationDelegate(this.OnBeginActualizarUsuario);
            }
            if ((this.onEndActualizarUsuarioDelegate == null)) {
                this.onEndActualizarUsuarioDelegate = new EndOperationDelegate(this.OnEndActualizarUsuario);
            }
            if ((this.onActualizarUsuarioCompletedDelegate == null)) {
                this.onActualizarUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarUsuarioDelegate, new object[] {
                        usuario,
                        tipoEmpleado,
                        p_nombre,
                        s_nombre,
                        p_apellido,
                        s_apellido,
                        contrasena,
                        correo,
                        accesos}, this.onEndActualizarUsuarioDelegate, this.onActualizarUsuarioCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap CreateChannel() {
            return new WSClinicaSoapClientChannel(this);
        }
        
        private class WSClinicaSoapClientChannel : ChannelBase<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap>, Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap {
            
            public WSClinicaSoapClientChannel(System.ServiceModel.ClientBase<Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.WSClinicaSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginesUsuarioValido(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("esUsuarioValido", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponse EndesUsuarioValido(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.esUsuarioValidoResponse)(base.EndInvoke("esUsuarioValido", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIDdeMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIDdeMedico", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponse EndgetIDdeMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdeMedicoResponse)(base.EndInvoke("getIDdeMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIDdePaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIDdePaciente", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponse EndgetIDdePaciente(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIDdePacienteResponse)(base.EndInvoke("getIDdePaciente", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMedicos_Nombres(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMedicos_Nombres", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponse EndgetMedicos_Nombres(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicos_NombresResponse)(base.EndInvoke("getMedicos_Nombres", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMedicosTodos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMedicosTodos", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponse EndgetMedicosTodos(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicosTodosResponse)(base.EndInvoke("getMedicosTodos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMaterialEnviadoBiopsiaImprimir(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMaterialEnviadoBiopsiaImprimir", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponse EndgetMaterialEnviadoBiopsiaImprimir(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviadoBiopsiaImprimirResponse)(base.EndInvoke("getMaterialEnviadoBiopsiaImprimir", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMaterialEnviado_CitologiaNoGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMaterialEnviado_CitologiaNoGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponse EndgetMaterialEnviado_CitologiaNoGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMaterialEnviado_CitologiaNoGinecologicaResponse)(base.EndInvoke("getMaterialEnviado_CitologiaNoGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMedico", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponse EndgetMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMedicoResponse)(base.EndInvoke("getMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMuestraGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMuestraGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponse EndgetMuestraGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraGinecologicaResponse)(base.EndInvoke("getMuestraGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMuestraNo_Ginecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMuestraNo_Ginecologica", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponse EndgetMuestraNo_Ginecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraNo_GinecologicaResponse)(base.EndInvoke("getMuestraNo_Ginecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetMuestraBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getMuestraBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponse EndgetMuestraBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getMuestraBiopsiaResponse)(base.EndInvoke("getMuestraBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetIdExamenes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getIdExamenes", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponse EndgetIdExamenes(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getIdExamenesResponse)(base.EndInvoke("getIdExamenes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCantidadDeExamenes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getCantidadDeExamenes", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponse EndgetCantidadDeExamenes(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getCantidadDeExamenesResponse)(base.EndInvoke("getCantidadDeExamenes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetExamenesFiltrados(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getExamenesFiltrados", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponse EndgetExamenesFiltrados(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getExamenesFiltradosResponse)(base.EndInvoke("getExamenesFiltrados", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginconsultaMedicoBiopsias(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("consultaMedicoBiopsias", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponse EndconsultaMedicoBiopsias(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoBiopsiasResponse)(base.EndInvoke("consultaMedicoBiopsias", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginconsultaMedicoCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("consultaMedicoCitologia", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponse EndconsultaMedicoCitologia(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.consultaMedicoCitologiaResponse)(base.EndInvoke("consultaMedicoCitologia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetNombresPacientes(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getNombresPacientes", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponse EndgetNombresPacientes(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getNombresPacientesResponse)(base.EndInvoke("getNombresPacientes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetUsuarios(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getUsuarios", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponse EndgetUsuarios(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getUsuariosResponse)(base.EndInvoke("getUsuarios", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetDatosEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getDatosEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponse EndgetDatosEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getDatosEmpleadoResponse)(base.EndInvoke("getDatosEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAccesosDeUsuario(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getAccesosDeUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponse EndgetAccesosDeUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.getAccesosDeUsuarioResponse)(base.EndInvoke("getAccesosDeUsuario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarMedico", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponse EndInsertarMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMedicoResponse)(base.EndInvoke("InsertarMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarMaterial(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarMaterial", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponse EndInsertarMaterial(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialResponse)(base.EndInvoke("InsertarMaterial", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarPaciente", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponse EndInsertarPaciente(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarPacienteResponse)(base.EndInvoke("InsertarPaciente", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponse EndInsertarBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarBiopsiaResponse)(base.EndInvoke("InsertarBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarCitologiaNoGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarCitologiaNoGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponse EndInsertarCitologiaNoGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaNoGinecologicaResponse)(base.EndInvoke("InsertarCitologiaNoGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarCitologiaGinecologica(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarCitologiaGinecologica", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponse EndInsertarCitologiaGinecologica(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarCitologiaGinecologicaResponse)(base.EndInvoke("InsertarCitologiaGinecologica", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarMaterialEnviado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarMaterialEnviado", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponse EndInsertarMaterialEnviado(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarMaterialEnviadoResponse)(base.EndInvoke("InsertarMaterialEnviado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertarEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("InsertarEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponse EndInsertarEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.InsertarEmpleadoResponse)(base.EndInvoke("InsertarEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginbuscarCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("buscarCitologia", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponse EndbuscarCitologia(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaResponse)(base.EndInvoke("buscarCitologia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginbuscarCitologiaLiquidos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("buscarCitologiaLiquidos", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponse EndbuscarCitologiaLiquidos(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarCitologiaLiquidosResponse)(base.EndInvoke("buscarCitologiaLiquidos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginbuscarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("buscarBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponse EndbuscarBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarBiopsiaResponse)(base.EndInvoke("buscarBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginbuscarMuestraPorPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("buscarMuestraPorPaciente", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponse EndbuscarMuestraPorPaciente(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.buscarMuestraPorPacienteResponse)(base.EndInvoke("buscarMuestraPorPaciente", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarMedico", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponse EndBorrarMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMedicoResponse)(base.EndInvoke("BorrarMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarMuestra(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarMuestra", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponse EndBorrarMuestra(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMuestraResponse)(base.EndInvoke("BorrarMuestra", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarMaterial(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarMaterial", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponse EndBorrarMaterial(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarMaterialResponse)(base.EndInvoke("BorrarMaterial", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrarEmpleado(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("BorrarEmpleado", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponse EndBorrarEmpleado(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.BorrarEmpleadoResponse)(base.EndInvoke("BorrarEmpleado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarCitologia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarCitologia", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponse EndActualizarCitologia(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaResponse)(base.EndInvoke("ActualizarCitologia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarBiopsia(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarBiopsia", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponse EndActualizarBiopsia(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarBiopsiaResponse)(base.EndInvoke("ActualizarBiopsia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarCitologiaLiquidos(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarCitologiaLiquidos", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponse EndActualizarCitologiaLiquidos(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarCitologiaLiquidosResponse)(base.EndInvoke("ActualizarCitologiaLiquidos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarMedico(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarMedico", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponse EndActualizarMedico(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarMedicoResponse)(base.EndInvoke("ActualizarMedico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarPaciente(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarPaciente", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponse EndActualizarPaciente(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarPacienteResponse)(base.EndInvoke("ActualizarPaciente", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActualizarUsuario(Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ActualizarUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponse EndActualizarUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponse _result = ((Sistema_BD_Clinica_Patologica.ServiceReferenceClinica.ActualizarUsuarioResponse)(base.EndInvoke("ActualizarUsuario", _args, result)));
                return _result;
            }
        }
    }
}
